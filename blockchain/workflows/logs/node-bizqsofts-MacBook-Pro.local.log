[INFO ] 2022-04-05T22:32:26,820Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows ... {}
[INFO ] 2022-04-05T22:32:27,154Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2022-04-05T22:32:28,886Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2022-04-05T22:32:30,043Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2022-04-05T22:32:30,076Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2022-04-05T22:32:30,077Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2022-04-05T22:32:31,070Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2022-04-05T22:32:31,112Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2022-04-05T22:32:31,840Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2022-04-05T22:32:31,840Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2022-04-05T22:32:31,852Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2022-04-05T22:32:32,070Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2022-04-05T22:32:32,103Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2022-04-05T22:32:32,846Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2022-04-05T22:32:33,306Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2022-04-05T22:32:33,329Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2022-04-05T22:32:33,360Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2022-04-05T22:32:33,361Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2022-04-05T22:32:33,361Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2022-04-05T22:32:34,497Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2022-04-05T22:32:34,497Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2022-04-05T22:32:34,693Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2022-04-05T22:32:34,693Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2022-04-05T22:32:34,762Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2022-04-05T22:32:34,762Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2022-04-05T22:32:34,960Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2022-04-05T22:32:34,960Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2022-04-05T22:32:35,097Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-05T22:32:35,130Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2022-04-05T22:32:35,196Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2022-04-05T22:32:35,271Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2022-04-05T22:32:35,271Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2022-04-05T22:32:35,291Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2022-04-05T22:32:35,302Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2022-04-05T22:32:35,302Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2022-04-05T22:32:35,354Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-05T22:32:35,354Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2022-04-05T22:32:35,354Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-05T22:32:35,354Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2022-04-05T22:32:35,354Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-05T22:32:35,354Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2022-04-05T22:32:35,399Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2022-04-05T22:32:35,447Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2022-04-05T22:32:35,447Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2022-04-05T22:32:35,459Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2022-04-05T22:32:35,459Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2022-04-05T22:32:35,459Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2022-04-05T22:32:35,459Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2022-04-05T22:32:35,459Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2022-04-05T22:32:35,471Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-05T22:32:35,482Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2022-04-05T22:32:35,505Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-05T22:32:35,505Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2022-04-05T22:32:35,517Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2022-04-05T22:32:35,551Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2022-04-05T22:32:35,551Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2022-04-05T22:32:35,564Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2022-04-05T22:32:35,579Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2022-04-05T22:32:35,579Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2022-04-05T22:32:35,579Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-05T22:32:35,579Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2022-04-05T22:32:35,590Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-05T22:32:35,590Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2022-04-05T22:32:35,590Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-05T22:32:35,590Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2022-04-05T22:32:35,590Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2022-04-05T22:32:35,623Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2022-04-05T22:32:35,623Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2022-04-05T22:32:35,635Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2022-04-05T22:32:35,635Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2022-04-05T22:32:35,635Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2022-04-05T22:32:35,635Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2022-04-05T22:32:35,635Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2022-04-05T22:32:35,635Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2022-04-05T22:32:35,635Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2022-04-05T22:32:35,635Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2022-04-05T22:32:35,635Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2022-04-05T22:32:35,635Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-05T22:32:35,635Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2022-04-05T22:32:35,645Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-05T22:32:35,676Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2022-04-05T22:32:35,676Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2022-04-05T22:32:35,676Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2022-04-05T22:32:35,678Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2022-04-05T22:32:35,701Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/.gradle {}
[INFO ] 2022-04-05T22:32:35,701Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2022-04-05T22:32:35,729Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2022-04-05T22:32:42,261Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-223225.055-33A03EEFC767C500/nodes/0/cordapps] {}
[INFO ] 2022-04-05T22:32:42,285Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223225.055-33A03EEFC767C500/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223225.055-33A03EEFC767C500/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T22:32:42,318Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223225.055-33A03EEFC767C500/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T22:32:42,453Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223225.055-33A03EEFC767C500/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T22:32:44,064Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:32:44,465Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T22:32:44,568Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T22:32:44,597Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T22:32:44,604Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL4GVJDjW35yLoaBj3rvmpgjaCWEG6PNuJkPUyBxwxRFwW, alias: identity-private-key {}
[INFO ] 2022-04-05T22:32:44,837Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T22:32:44,984Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T22:32:22.251Z
      epoch=1
  } {}
[INFO ] 2022-04-05T22:32:54,436Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T22:32:54,533Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T22:32:54,542Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T22:32:58,279Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T22:32:58,626Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T22:32:58,641Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197978630), owningKey=DL4GVJDjW35yLoaBj3rvmpgjaCWEG6PNuJkPUyBxwxRFwW {}
[INFO ] 2022-04-05T22:32:58,641Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T22:32:58,855Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197978630) {}
[INFO ] 2022-04-05T22:32:58,936Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T22:32:58,976Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T22:32:59,016Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197978630), owningKey=DL4GVJDjW35yLoaBj3rvmpgjaCWEG6PNuJkPUyBxwxRFwW {}
[INFO ] 2022-04-05T22:32:59,016Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:32:59,020Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T22:32:59,207Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4730291D1360795204630EED2D7F9031E271A57AF24630C357BCE8CBE20D37B8 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T22:32:59,224Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2022-04-05T22:32:59,956Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197978630) {}
[INFO ] 2022-04-05T22:32:59,966Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197978630), owningKey=DL4GVJDjW35yLoaBj3rvmpgjaCWEG6PNuJkPUyBxwxRFwW {}
[INFO ] 2022-04-05T22:32:59,966Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:32:59,967Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197978630), owningKey=DL4GVJDjW35yLoaBj3rvmpgjaCWEG6PNuJkPUyBxwxRFwW {}
[INFO ] 2022-04-05T22:32:59,967Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:32:59,982Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-223225.055-33A03EEFC767C500/nodes/1/cordapps] {}
[INFO ] 2022-04-05T22:32:59,985Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223225.055-33A03EEFC767C500/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223225.055-33A03EEFC767C500/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T22:32:59,987Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223225.055-33A03EEFC767C500/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T22:32:59,999Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223225.055-33A03EEFC767C500/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T22:33:00,078Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:00,084Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T22:33:00,085Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T22:33:00,167Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T22:33:00,167Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLELLMRjYHEHvMgw1uRGe4hGc6L8bsV9iXdkuN9Vpbv9G1, alias: identity-private-key {}
[INFO ] 2022-04-05T22:33:00,179Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T22:33:00,185Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T22:32:22.251Z
      epoch=1
  } {}
[INFO ] 2022-04-05T22:33:01,207Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T22:33:01,208Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:01,208Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:01,533Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:01,538Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T22:33:01,542Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197981538), owningKey=DLELLMRjYHEHvMgw1uRGe4hGc6L8bsV9iXdkuN9Vpbv9G1 {}
[INFO ] 2022-04-05T22:33:01,542Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:01,557Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197981538) {}
[INFO ] 2022-04-05T22:33:01,567Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T22:33:01,568Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T22:33:01,568Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T22:33:01,579Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197981538), owningKey=DLELLMRjYHEHvMgw1uRGe4hGc6L8bsV9iXdkuN9Vpbv9G1 {}
[INFO ] 2022-04-05T22:33:01,579Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:01,616Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4730291D1360795204630EED2D7F9031E271A57AF24630C357BCE8CBE20D37B8 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T22:33:01,643Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197981538) {}
[INFO ] 2022-04-05T22:33:01,646Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197978630), owningKey=DL4GVJDjW35yLoaBj3rvmpgjaCWEG6PNuJkPUyBxwxRFwW {}
[INFO ] 2022-04-05T22:33:01,646Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:01,667Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197981538), owningKey=DLELLMRjYHEHvMgw1uRGe4hGc6L8bsV9iXdkuN9Vpbv9G1 {}
[INFO ] 2022-04-05T22:33:01,667Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:01,681Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197981538), owningKey=DLELLMRjYHEHvMgw1uRGe4hGc6L8bsV9iXdkuN9Vpbv9G1 {}
[INFO ] 2022-04-05T22:33:01,682Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:01,682Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197981538), owningKey=DLELLMRjYHEHvMgw1uRGe4hGc6L8bsV9iXdkuN9Vpbv9G1 {}
[INFO ] 2022-04-05T22:33:01,682Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:01,692Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-223225.055-33A03EEFC767C500/nodes/2/cordapps] {}
[INFO ] 2022-04-05T22:33:01,692Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223225.055-33A03EEFC767C500/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223225.055-33A03EEFC767C500/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T22:33:01,692Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223225.055-33A03EEFC767C500/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T22:33:01,699Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223225.055-33A03EEFC767C500/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T22:33:01,730Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:01,733Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T22:33:01,735Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T22:33:01,802Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T22:33:01,802Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL7yJzdUrunRGoXDGzWKe3JwvWryx4z6YBDaLfCyQxFqJU, alias: identity-private-key {}
[INFO ] 2022-04-05T22:33:01,815Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T22:33:01,821Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T22:32:22.251Z
      epoch=1
  } {}
[INFO ] 2022-04-05T22:33:02,523Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T22:33:02,525Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:02,525Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:02,724Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:02,736Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T22:33:02,744Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197982736), owningKey=DL7yJzdUrunRGoXDGzWKe3JwvWryx4z6YBDaLfCyQxFqJU {}
[INFO ] 2022-04-05T22:33:02,744Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:02,763Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197982736) {}
[INFO ] 2022-04-05T22:33:02,778Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T22:33:02,780Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T22:33:02,780Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T22:33:02,788Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197982736), owningKey=DL7yJzdUrunRGoXDGzWKe3JwvWryx4z6YBDaLfCyQxFqJU {}
[INFO ] 2022-04-05T22:33:02,788Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:02,836Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4730291D1360795204630EED2D7F9031E271A57AF24630C357BCE8CBE20D37B8 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T22:33:02,861Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197982736) {}
[INFO ] 2022-04-05T22:33:02,864Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197978630), owningKey=DL4GVJDjW35yLoaBj3rvmpgjaCWEG6PNuJkPUyBxwxRFwW {}
[INFO ] 2022-04-05T22:33:02,864Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:02,885Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197982736), owningKey=DL7yJzdUrunRGoXDGzWKe3JwvWryx4z6YBDaLfCyQxFqJU {}
[INFO ] 2022-04-05T22:33:02,885Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:02,901Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197981538), owningKey=DLELLMRjYHEHvMgw1uRGe4hGc6L8bsV9iXdkuN9Vpbv9G1 {}
[INFO ] 2022-04-05T22:33:02,901Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:02,918Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197982736), owningKey=DL7yJzdUrunRGoXDGzWKe3JwvWryx4z6YBDaLfCyQxFqJU {}
[INFO ] 2022-04-05T22:33:02,918Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:02,932Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197982736), owningKey=DL7yJzdUrunRGoXDGzWKe3JwvWryx4z6YBDaLfCyQxFqJU {}
[INFO ] 2022-04-05T22:33:02,932Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:02,933Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197982736), owningKey=DL7yJzdUrunRGoXDGzWKe3JwvWryx4z6YBDaLfCyQxFqJU {}
[INFO ] 2022-04-05T22:33:02,933Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2022-04-05T22:33:03,344Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5a0170f4-af36-49ac-9d1a-7ba1241cd4f1, invocation_id=dac24b56-4ff5-4733-9460-ade41dbecbae, invocation_timestamp=2022-04-05T22:33:03.021Z, origin=Only For Testing, session_id=dac24b56-4ff5-4733-9460-ade41dbecbae, session_timestamp=2022-04-05T22:33:03.021Z, thread-id=179}
[WARN ] 2022-04-05T22:33:03,344Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract net.corda.samples.example.contracts.IOUContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5a0170f4-af36-49ac-9d1a-7ba1241cd4f1, invocation_id=dac24b56-4ff5-4733-9460-ade41dbecbae, invocation_timestamp=2022-04-05T22:33:03.021Z, origin=Only For Testing, session_id=dac24b56-4ff5-4733-9460-ade41dbecbae, session_timestamp=2022-04-05T22:33:03.021Z, thread-id=179}
[ERROR] 2022-04-05T22:33:03,710Z [Mock network] internal.Verifier. - Error validating transaction 1A397EF786627B41E13B25B619519D2D84274FA38FE11F6444635C5C09A75C9D. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5a0170f4-af36-49ac-9d1a-7ba1241cd4f1, invocation_id=dac24b56-4ff5-4733-9460-ade41dbecbae, invocation_timestamp=2022-04-05T22:33:03.021Z, origin=Only For Testing, session_id=dac24b56-4ff5-4733-9460-ade41dbecbae, session_timestamp=2022-04-05T22:33:03.021Z, thread-id=179}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at net.corda.samples.example.contracts.IOUContract.lambda$verify$0(IOUContract.java:50) ~[contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.java:37) ~[contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:434) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:386) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:248) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:228) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:186) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:144) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:667) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:155) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[ERROR] 2022-04-05T22:33:03,716Z [Mock network] internal.Verifier. - Error validating transaction 1A397EF786627B41E13B25B619519D2D84274FA38FE11F6444635C5C09A75C9D. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5a0170f4-af36-49ac-9d1a-7ba1241cd4f1, invocation_id=dac24b56-4ff5-4733-9460-ade41dbecbae, invocation_timestamp=2022-04-05T22:33:03.021Z, origin=Only For Testing, session_id=dac24b56-4ff5-4733-9460-ade41dbecbae, session_timestamp=2022-04-05T22:33:03.021Z, thread-id=179}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at net.corda.samples.example.contracts.IOUContract.lambda$verify$0(IOUContract.java:50) ~[contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.java:37) ~[contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:434) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:386) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:155) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[INFO ] 2022-04-05T22:33:03,716Z [Mock network] corda.flow. - Flow raised an error: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 1A397EF786627B41E13B25B619519D2D84274FA38FE11F6444635C5C09A75C9D. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5a0170f4-af36-49ac-9d1a-7ba1241cd4f1, invocation_id=dac24b56-4ff5-4733-9460-ade41dbecbae, invocation_timestamp=2022-04-05T22:33:03.021Z, origin=Only For Testing, session_id=dac24b56-4ff5-4733-9460-ade41dbecbae, session_timestamp=2022-04-05T22:33:03.021Z, thread-id=179}
[INFO ] 2022-04-05T22:33:03,731Z [Mock network] statemachine.StaffedFlowHospital. - Flow [5a0170f4-af36-49ac-9d1a-7ba1241cd4f1] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=dac24b56-4ff5-4733-9460-ade41dbecbae, timestamp: 2022-04-05T22:33:03.021Z, entityType: Invocation, sessionId=dac24b56-4ff5-4733-9460-ade41dbecbae, timestamp: 2022-04-05T22:33:03.021Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=D4B8CAD105DE320E217A958773F5BF151558DF443E062C7984FFDC47404E4E7A), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=621DB9BE6C665A0155B27CD35542E755A14B5918457D32A630DA4CA22C282370), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=ExampleFlow$Initiator@226a9316, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=8c65275d-39be-44bb-81fa-ab9049313ef6, reloadCheckpointAfterSuspendCount=null, numberOfCommits=0, lock=java.util.concurrent.Semaphore@214cce13[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5a0170f4-af36-49ac-9d1a-7ba1241cd4f1, invocation_id=dac24b56-4ff5-4733-9460-ade41dbecbae, invocation_timestamp=2022-04-05T22:33:03.021Z, origin=Only For Testing, session_id=dac24b56-4ff5-4733-9460-ade41dbecbae, session_timestamp=2022-04-05T22:33:03.021Z, thread-id=179}
[INFO ] 2022-04-05T22:33:03,734Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5a0170f4-af36-49ac-9d1a-7ba1241cd4f1, invocation_id=dac24b56-4ff5-4733-9460-ade41dbecbae, invocation_timestamp=2022-04-05T22:33:03.021Z, origin=Only For Testing, session_id=dac24b56-4ff5-4733-9460-ade41dbecbae, session_timestamp=2022-04-05T22:33:03.021Z, thread-id=179}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 1A397EF786627B41E13B25B619519D2D84274FA38FE11F6444635C5C09A75C9D
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:436) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:386) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:155) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at net.corda.samples.example.contracts.IOUContract.lambda$verify$0(IOUContract.java:50) ~[contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.java:37) ~[contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:434) ~[corda-core-4.8.5.jar:?]
	... 19 more
[INFO ] 2022-04-05T22:33:03,744Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5a0170f4-af36-49ac-9d1a-7ba1241cd4f1, invocation_id=dac24b56-4ff5-4733-9460-ade41dbecbae, invocation_timestamp=2022-04-05T22:33:03.021Z, origin=Only For Testing, session_id=dac24b56-4ff5-4733-9460-ade41dbecbae, session_timestamp=2022-04-05T22:33:03.021Z, thread-id=179}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 1A397EF786627B41E13B25B619519D2D84274FA38FE11F6444635C5C09A75C9D
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:436) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:386) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:155) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at net.corda.samples.example.contracts.IOUContract.lambda$verify$0(IOUContract.java:50) ~[contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.java:37) ~[contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:434) ~[corda-core-4.8.5.jar:?]
	... 19 more
[WARN ] 2022-04-05T22:33:03,770Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [5a0170f4-af36-49ac-9d1a-7ba1241cd4f1] errored, dumping all transitions:

 --- Transition of flow [5a0170f4-af36-49ac-9d1a-7ba1241cd4f1] ---
  Timestamp: 2022-04-05T22:33:03.288Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[5a0170f4-af36-49ac-9d1a-7ba1241cd4f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=dac24b56-4ff5-4733-9460-ade41dbecbae, timestamp: 2022-04-05T22:33:03.021Z, entityType: Invocation, sessionId=dac24b56-4ff5-4733-9460-ade41dbecbae, timestamp: 2022-04-05T22:33:03.021Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=D4B8CAD105DE320E217A958773F5BF151558DF443E062C7984FFDC47404E4E7A), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=621DB9BE6C665A0155B27CD35542E755A14B5918457D32A630DA4CA22C282370), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@2bcfe6d9])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@2bcfe6d9])
    SignalFlowHasStarted(flowId=[5a0170f4-af36-49ac-9d1a-7ba1241cd4f1])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@2bcfe6d9]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [5a0170f4-af36-49ac-9d1a-7ba1241cd4f1] ---
  Timestamp: 2022-04-05T22:33:03.748Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 1A397EF786627B41E13B25B619519D2D84274FA38FE11F6444635C5C09A75C9D, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-05T22:33:03.216Z
    2022-04-05T22:33:03.721Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-4954338610405923089, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 1A397EF786627B41E13B25B619519D2D84274FA38FE11F6444635C5C09A75C9D)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [5a0170f4-af36-49ac-9d1a-7ba1241cd4f1] ---
  Timestamp: 2022-04-05T22:33:03.755Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [5a0170f4-af36-49ac-9d1a-7ba1241cd4f1] ---
  Timestamp: 2022-04-05T22:33:03.759Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-05T22:33:03.721Z
    2022-04-05T22:33:03.758Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5a0170f4-af36-49ac-9d1a-7ba1241cd4f1, invocation_id=dac24b56-4ff5-4733-9460-ade41dbecbae, invocation_timestamp=2022-04-05T22:33:03.021Z, origin=Only For Testing, session_id=dac24b56-4ff5-4733-9460-ade41dbecbae, session_timestamp=2022-04-05T22:33:03.021Z, thread-id=179}
[WARN ] 2022-04-05T22:33:03,770Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [5a0170f4-af36-49ac-9d1a-7ba1241cd4f1] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5a0170f4-af36-49ac-9d1a-7ba1241cd4f1, invocation_id=dac24b56-4ff5-4733-9460-ade41dbecbae, invocation_timestamp=2022-04-05T22:33:03.021Z, origin=Only For Testing, session_id=dac24b56-4ff5-4733-9460-ade41dbecbae, session_timestamp=2022-04-05T22:33:03.021Z, thread-id=179}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 1A397EF786627B41E13B25B619519D2D84274FA38FE11F6444635C5C09A75C9D
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:436) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:386) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:155) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at net.corda.samples.example.contracts.IOUContract.lambda$verify$0(IOUContract.java:50) ~[contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.java:37) ~[contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:434) ~[corda-core-4.8.5.jar:?]
	... 19 more
[WARN ] 2022-04-05T22:33:03,775Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5a0170f4-af36-49ac-9d1a-7ba1241cd4f1, invocation_id=dac24b56-4ff5-4733-9460-ade41dbecbae, invocation_timestamp=2022-04-05T22:33:03.021Z, origin=Only For Testing, session_id=dac24b56-4ff5-4733-9460-ade41dbecbae, session_timestamp=2022-04-05T22:33:03.021Z, thread-id=179}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 1A397EF786627B41E13B25B619519D2D84274FA38FE11F6444635C5C09A75C9D
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:436) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:386) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:155) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at net.corda.samples.example.contracts.IOUContract.lambda$verify$0(IOUContract.java:50) ~[contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.java:37) ~[contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:434) ~[corda-core-4.8.5.jar:?]
	... 19 more
[WARN ] 2022-04-05T22:33:03,846Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [5a0170f4-af36-49ac-9d1a-7ba1241cd4f1] errored, dumping all transitions:

 --- Transition of flow [5a0170f4-af36-49ac-9d1a-7ba1241cd4f1] ---
  Timestamp: 2022-04-05T22:33:03.288Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[5a0170f4-af36-49ac-9d1a-7ba1241cd4f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=dac24b56-4ff5-4733-9460-ade41dbecbae, timestamp: 2022-04-05T22:33:03.021Z, entityType: Invocation, sessionId=dac24b56-4ff5-4733-9460-ade41dbecbae, timestamp: 2022-04-05T22:33:03.021Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=D4B8CAD105DE320E217A958773F5BF151558DF443E062C7984FFDC47404E4E7A), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=621DB9BE6C665A0155B27CD35542E755A14B5918457D32A630DA4CA22C282370), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@2bcfe6d9])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@2bcfe6d9])
    SignalFlowHasStarted(flowId=[5a0170f4-af36-49ac-9d1a-7ba1241cd4f1])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@2bcfe6d9]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [5a0170f4-af36-49ac-9d1a-7ba1241cd4f1] ---
  Timestamp: 2022-04-05T22:33:03.748Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 1A397EF786627B41E13B25B619519D2D84274FA38FE11F6444635C5C09A75C9D, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-05T22:33:03.216Z
    2022-04-05T22:33:03.721Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-4954338610405923089, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 1A397EF786627B41E13B25B619519D2D84274FA38FE11F6444635C5C09A75C9D)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [5a0170f4-af36-49ac-9d1a-7ba1241cd4f1] ---
  Timestamp: 2022-04-05T22:33:03.755Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [5a0170f4-af36-49ac-9d1a-7ba1241cd4f1] ---
  Timestamp: 2022-04-05T22:33:03.759Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-05T22:33:03.721Z
    2022-04-05T22:33:03.758Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [5a0170f4-af36-49ac-9d1a-7ba1241cd4f1] ---
  Timestamp: 2022-04-05T22:33:03.840Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 1A397EF786627B41E13B25B619519D2D84274FA38FE11F6444635C5C09A75C9D, errorId=-4954338610405923089)], sessions=[], senderUUID=8c65275d-39be-44bb-81fa-ab9049313ef6)
    CreateTransaction
    RemoveCheckpoint(id=[5a0170f4-af36-49ac-9d1a-7ba1241cd4f1], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=5a0170f4-af36-49ac-9d1a-7ba1241cd4f1)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[5a0170f4-af36-49ac-9d1a-7ba1241cd4f1], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-4954338610405923089, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 1A397EF786627B41E13B25B619519D2D84274FA38FE11F6444635C5C09A75C9D)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=dac24b56-4ff5-4733-9460-ade41dbecbae, timestamp: 2022-04-05T22:33:03.021Z, entityType: Invocation, sessionId=dac24b56-4ff5-4733-9460-ade41dbecbae, timestamp: 2022-04-05T22:33:03.021Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=D4B8CAD105DE320E217A958773F5BF151558DF443E062C7984FFDC47404E4E7A), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=2), flowState=net.corda.node.services.statemachine.FlowState$Finished@67314f0e, errorState=Errored(errors=[FlowError(errorId=-4954338610405923089, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 1A397EF786627B41E13B25B619519D2D84274FA38FE11F6444635C5C09A75C9D)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=ExampleFlow$Initiator@226a9316, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=8c65275d-39be-44bb-81fa-ab9049313ef6, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@214cce13[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=621DB9BE6C665A0155B27CD35542E755A14B5918457D32A630DA4CA22C282370)
    net.corda.node.services.statemachine.FlowState$Finished@67314f0e
checkpoint.timestamp: 
    2022-04-05T22:33:03.758Z
    2022-04-05T22:33:03.771Z
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isRemoved: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5a0170f4-af36-49ac-9d1a-7ba1241cd4f1, invocation_id=dac24b56-4ff5-4733-9460-ade41dbecbae, invocation_timestamp=2022-04-05T22:33:03.021Z, origin=Only For Testing, session_id=dac24b56-4ff5-4733-9460-ade41dbecbae, session_timestamp=2022-04-05T22:33:03.021Z, thread-id=179}
[WARN ] 2022-04-05T22:33:03,846Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [5a0170f4-af36-49ac-9d1a-7ba1241cd4f1] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5a0170f4-af36-49ac-9d1a-7ba1241cd4f1, invocation_id=dac24b56-4ff5-4733-9460-ade41dbecbae, invocation_timestamp=2022-04-05T22:33:03.021Z, origin=Only For Testing, session_id=dac24b56-4ff5-4733-9460-ade41dbecbae, session_timestamp=2022-04-05T22:33:03.021Z, thread-id=179}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 1A397EF786627B41E13B25B619519D2D84274FA38FE11F6444635C5C09A75C9D
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:436) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:386) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:155) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at net.corda.samples.example.contracts.IOUContract.lambda$verify$0(IOUContract.java:50) ~[contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.java:37) ~[contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:434) ~[corda-core-4.8.5.jar:?]
	... 19 more
[INFO ] 2022-04-05T22:33:03,928Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2022-04-05T22:33:03,949Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T22:33:03,949Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:03,955Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2022-04-05T22:33:03,971Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T22:33:03,971Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:03,977Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2022-04-05T22:33:03,987Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T22:33:03,988Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:04,119Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-223303.996-4F1D1F808B9ADAC0/nodes/0/cordapps] {}
[INFO ] 2022-04-05T22:33:04,119Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223303.996-4F1D1F808B9ADAC0/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223303.996-4F1D1F808B9ADAC0/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T22:33:04,119Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223303.996-4F1D1F808B9ADAC0/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T22:33:04,128Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223303.996-4F1D1F808B9ADAC0/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T22:33:04,160Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:04,161Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T22:33:04,162Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T22:33:04,167Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T22:33:04,167Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLEU2a2N88iFtvDqaXwJ2MQGGVo1LSmk4yGQk4x6A9EnrZ, alias: identity-private-key {}
[INFO ] 2022-04-05T22:33:04,177Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T22:33:04,184Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T22:33:03.996Z
      epoch=1
  } {}
[INFO ] 2022-04-05T22:33:05,055Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T22:33:05,056Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T22:33:05,056Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T22:33:05,254Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T22:33:05,259Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T22:33:05,266Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197985259), owningKey=DLEU2a2N88iFtvDqaXwJ2MQGGVo1LSmk4yGQk4x6A9EnrZ {}
[INFO ] 2022-04-05T22:33:05,266Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:05,301Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197985259) {}
[INFO ] 2022-04-05T22:33:05,320Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T22:33:05,322Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T22:33:05,322Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T22:33:05,329Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197985259), owningKey=DLEU2a2N88iFtvDqaXwJ2MQGGVo1LSmk4yGQk4x6A9EnrZ {}
[INFO ] 2022-04-05T22:33:05,329Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:05,390Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4730291D1360795204630EED2D7F9031E271A57AF24630C357BCE8CBE20D37B8 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T22:33:05,393Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2022-04-05T22:33:05,426Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197985259) {}
[INFO ] 2022-04-05T22:33:05,427Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197985259), owningKey=DLEU2a2N88iFtvDqaXwJ2MQGGVo1LSmk4yGQk4x6A9EnrZ {}
[INFO ] 2022-04-05T22:33:05,427Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:05,427Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197985259), owningKey=DLEU2a2N88iFtvDqaXwJ2MQGGVo1LSmk4yGQk4x6A9EnrZ {}
[INFO ] 2022-04-05T22:33:05,427Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:05,436Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-223303.996-4F1D1F808B9ADAC0/nodes/1/cordapps] {}
[INFO ] 2022-04-05T22:33:05,436Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223303.996-4F1D1F808B9ADAC0/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223303.996-4F1D1F808B9ADAC0/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T22:33:05,437Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223303.996-4F1D1F808B9ADAC0/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T22:33:05,446Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223303.996-4F1D1F808B9ADAC0/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T22:33:05,496Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:05,497Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T22:33:05,499Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T22:33:05,553Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T22:33:05,553Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLAgL3EpFLg9Dh9haqVPwmrr74LfVtuU1jrqktPJE7twC6, alias: identity-private-key {}
[INFO ] 2022-04-05T22:33:05,564Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T22:33:05,568Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T22:33:03.996Z
      epoch=1
  } {}
[INFO ] 2022-04-05T22:33:06,369Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T22:33:06,370Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:06,370Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:06,630Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:06,639Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T22:33:06,648Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197986639), owningKey=DLAgL3EpFLg9Dh9haqVPwmrr74LfVtuU1jrqktPJE7twC6 {}
[INFO ] 2022-04-05T22:33:06,648Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:06,661Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197986639) {}
[INFO ] 2022-04-05T22:33:06,673Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T22:33:06,676Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T22:33:06,676Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T22:33:06,682Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197986639), owningKey=DLAgL3EpFLg9Dh9haqVPwmrr74LfVtuU1jrqktPJE7twC6 {}
[INFO ] 2022-04-05T22:33:06,682Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:06,737Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4730291D1360795204630EED2D7F9031E271A57AF24630C357BCE8CBE20D37B8 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T22:33:06,779Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197986639) {}
[INFO ] 2022-04-05T22:33:06,784Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197985259), owningKey=DLEU2a2N88iFtvDqaXwJ2MQGGVo1LSmk4yGQk4x6A9EnrZ {}
[INFO ] 2022-04-05T22:33:06,784Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:06,805Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197986639), owningKey=DLAgL3EpFLg9Dh9haqVPwmrr74LfVtuU1jrqktPJE7twC6 {}
[INFO ] 2022-04-05T22:33:06,805Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:06,822Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197986639), owningKey=DLAgL3EpFLg9Dh9haqVPwmrr74LfVtuU1jrqktPJE7twC6 {}
[INFO ] 2022-04-05T22:33:06,822Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:06,823Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197986639), owningKey=DLAgL3EpFLg9Dh9haqVPwmrr74LfVtuU1jrqktPJE7twC6 {}
[INFO ] 2022-04-05T22:33:06,823Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:06,840Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-223303.996-4F1D1F808B9ADAC0/nodes/2/cordapps] {}
[INFO ] 2022-04-05T22:33:06,841Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223303.996-4F1D1F808B9ADAC0/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223303.996-4F1D1F808B9ADAC0/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T22:33:06,841Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223303.996-4F1D1F808B9ADAC0/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T22:33:06,849Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223303.996-4F1D1F808B9ADAC0/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T22:33:06,912Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:06,924Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T22:33:06,934Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T22:33:07,075Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T22:33:07,075Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL4wKLHZnnna4YDs7X7XuyrRKcbwJ5efpEYzjKmxZ8C1Cx, alias: identity-private-key {}
[INFO ] 2022-04-05T22:33:07,084Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T22:33:07,087Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T22:33:03.996Z
      epoch=1
  } {}
[INFO ] 2022-04-05T22:33:07,709Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T22:33:07,711Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:07,711Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:07,932Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:07,937Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T22:33:07,940Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197987937), owningKey=DL4wKLHZnnna4YDs7X7XuyrRKcbwJ5efpEYzjKmxZ8C1Cx {}
[INFO ] 2022-04-05T22:33:07,940Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:07,949Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197987937) {}
[INFO ] 2022-04-05T22:33:07,955Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T22:33:07,956Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T22:33:07,956Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T22:33:07,962Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197987937), owningKey=DL4wKLHZnnna4YDs7X7XuyrRKcbwJ5efpEYzjKmxZ8C1Cx {}
[INFO ] 2022-04-05T22:33:07,962Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:08,030Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4730291D1360795204630EED2D7F9031E271A57AF24630C357BCE8CBE20D37B8 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T22:33:08,049Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197987937) {}
[INFO ] 2022-04-05T22:33:08,053Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197985259), owningKey=DLEU2a2N88iFtvDqaXwJ2MQGGVo1LSmk4yGQk4x6A9EnrZ {}
[INFO ] 2022-04-05T22:33:08,053Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:08,069Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197987937), owningKey=DL4wKLHZnnna4YDs7X7XuyrRKcbwJ5efpEYzjKmxZ8C1Cx {}
[INFO ] 2022-04-05T22:33:08,069Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:08,080Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197986639), owningKey=DLAgL3EpFLg9Dh9haqVPwmrr74LfVtuU1jrqktPJE7twC6 {}
[INFO ] 2022-04-05T22:33:08,080Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:08,097Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197987937), owningKey=DL4wKLHZnnna4YDs7X7XuyrRKcbwJ5efpEYzjKmxZ8C1Cx {}
[INFO ] 2022-04-05T22:33:08,097Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:08,104Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197987937), owningKey=DL4wKLHZnnna4YDs7X7XuyrRKcbwJ5efpEYzjKmxZ8C1Cx {}
[INFO ] 2022-04-05T22:33:08,104Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:08,105Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197987937), owningKey=DL4wKLHZnnna4YDs7X7XuyrRKcbwJ5efpEYzjKmxZ8C1Cx {}
[INFO ] 2022-04-05T22:33:08,105Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:08,591Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000003, flow-id=1841b462-a3b7-4841-9834-ce8105d37f3c, invocation_id=54612d35-f072-4010-a9e2-394289efe699, invocation_timestamp=2022-04-05T22:33:08.527Z, origin=O=Mock Company 1, L=London, C=GB, session_id=54612d35-f072-4010-a9e2-394289efe699, session_timestamp=2022-04-05T22:33:08.527Z, thread-id=329, tx_id=80CBBE67CF22C04E2DF8ED713D4E149065226E193B00F41B83DDAA6A46DB3630}
[INFO ] 2022-04-05T22:33:08,666Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=1841b462-a3b7-4841-9834-ce8105d37f3c, invocation_id=54612d35-f072-4010-a9e2-394289efe699, invocation_timestamp=2022-04-05T22:33:08.527Z, origin=O=Mock Company 1, L=London, C=GB, session_id=54612d35-f072-4010-a9e2-394289efe699, session_timestamp=2022-04-05T22:33:08.527Z, thread-id=329, tx_id=80CBBE67CF22C04E2DF8ED713D4E149065226E193B00F41B83DDAA6A46DB3630}
[INFO ] 2022-04-05T22:33:08,821Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=c777587c-d717-4198-bc27-194200ef7195, invocation_id=c12d6427-963c-4bbf-ae50-2cdc44bf4605, invocation_timestamp=2022-04-05T22:33:08.108Z, origin=Only For Testing, session_id=c12d6427-963c-4bbf-ae50-2cdc44bf4605, session_timestamp=2022-04-05T22:33:08.108Z, thread-id=329, tx_id=80CBBE67CF22C04E2DF8ED713D4E149065226E193B00F41B83DDAA6A46DB3630}
[INFO ] 2022-04-05T22:33:08,822Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=c777587c-d717-4198-bc27-194200ef7195, invocation_id=c12d6427-963c-4bbf-ae50-2cdc44bf4605, invocation_timestamp=2022-04-05T22:33:08.108Z, origin=Only For Testing, session_id=c12d6427-963c-4bbf-ae50-2cdc44bf4605, session_timestamp=2022-04-05T22:33:08.108Z, thread-id=329, tx_id=80CBBE67CF22C04E2DF8ED713D4E149065226E193B00F41B83DDAA6A46DB3630}
[INFO ] 2022-04-05T22:33:08,931Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=c777587c-d717-4198-bc27-194200ef7195, invocation_id=c12d6427-963c-4bbf-ae50-2cdc44bf4605, invocation_timestamp=2022-04-05T22:33:08.108Z, origin=Only For Testing, session_id=c12d6427-963c-4bbf-ae50-2cdc44bf4605, session_timestamp=2022-04-05T22:33:08.108Z, thread-id=329, tx_id=80CBBE67CF22C04E2DF8ED713D4E149065226E193B00F41B83DDAA6A46DB3630}
[INFO ] 2022-04-05T22:33:08,960Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000003, flow-id=1841b462-a3b7-4841-9834-ce8105d37f3c, invocation_id=54612d35-f072-4010-a9e2-394289efe699, invocation_timestamp=2022-04-05T22:33:08.527Z, origin=O=Mock Company 1, L=London, C=GB, session_id=54612d35-f072-4010-a9e2-394289efe699, session_timestamp=2022-04-05T22:33:08.527Z, thread-id=329, tx_id=80CBBE67CF22C04E2DF8ED713D4E149065226E193B00F41B83DDAA6A46DB3630}
[INFO ] 2022-04-05T22:33:09,160Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=1841b462-a3b7-4841-9834-ce8105d37f3c, invocation_id=54612d35-f072-4010-a9e2-394289efe699, invocation_timestamp=2022-04-05T22:33:08.527Z, origin=O=Mock Company 1, L=London, C=GB, session_id=54612d35-f072-4010-a9e2-394289efe699, session_timestamp=2022-04-05T22:33:08.527Z, thread-id=329, tx_id=80CBBE67CF22C04E2DF8ED713D4E149065226E193B00F41B83DDAA6A46DB3630}
[INFO ] 2022-04-05T22:33:09,167Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000003, flow-id=1841b462-a3b7-4841-9834-ce8105d37f3c, invocation_id=54612d35-f072-4010-a9e2-394289efe699, invocation_timestamp=2022-04-05T22:33:08.527Z, origin=O=Mock Company 1, L=London, C=GB, session_id=54612d35-f072-4010-a9e2-394289efe699, session_timestamp=2022-04-05T22:33:08.527Z, thread-id=329, tx_id=80CBBE67CF22C04E2DF8ED713D4E149065226E193B00F41B83DDAA6A46DB3630}
[INFO ] 2022-04-05T22:33:09,178Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000003, flow-id=1841b462-a3b7-4841-9834-ce8105d37f3c, invocation_id=54612d35-f072-4010-a9e2-394289efe699, invocation_timestamp=2022-04-05T22:33:08.527Z, origin=O=Mock Company 1, L=London, C=GB, session_id=54612d35-f072-4010-a9e2-394289efe699, session_timestamp=2022-04-05T22:33:08.527Z, thread-id=329, tx_id=80CBBE67CF22C04E2DF8ED713D4E149065226E193B00F41B83DDAA6A46DB3630}
[INFO ] 2022-04-05T22:33:09,208Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=c777587c-d717-4198-bc27-194200ef7195, invocation_id=c12d6427-963c-4bbf-ae50-2cdc44bf4605, invocation_timestamp=2022-04-05T22:33:08.108Z, origin=Only For Testing, session_id=c12d6427-963c-4bbf-ae50-2cdc44bf4605, session_timestamp=2022-04-05T22:33:08.108Z, thread-id=329, tx_id=80CBBE67CF22C04E2DF8ED713D4E149065226E193B00F41B83DDAA6A46DB3630}
[INFO ] 2022-04-05T22:33:09,208Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=c777587c-d717-4198-bc27-194200ef7195, invocation_id=c12d6427-963c-4bbf-ae50-2cdc44bf4605, invocation_timestamp=2022-04-05T22:33:08.108Z, origin=Only For Testing, session_id=c12d6427-963c-4bbf-ae50-2cdc44bf4605, session_timestamp=2022-04-05T22:33:08.108Z, thread-id=329, tx_id=80CBBE67CF22C04E2DF8ED713D4E149065226E193B00F41B83DDAA6A46DB3630}
[INFO ] 2022-04-05T22:33:09,226Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2022-04-05T22:33:09,236Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T22:33:09,236Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:09,238Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-5) {}
[INFO ] 2022-04-05T22:33:09,250Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T22:33:09,250Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:09,252Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-6) {}
[INFO ] 2022-04-05T22:33:09,260Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T22:33:09,260Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:09,386Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-223309.261-45EB4977BC7871F7/nodes/0/cordapps] {}
[INFO ] 2022-04-05T22:33:09,386Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223309.261-45EB4977BC7871F7/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223309.261-45EB4977BC7871F7/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T22:33:09,386Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223309.261-45EB4977BC7871F7/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T22:33:09,392Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223309.261-45EB4977BC7871F7/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T22:33:09,420Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:09,421Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T22:33:09,422Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T22:33:09,425Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T22:33:09,426Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLVkNkgi6qM4VF7UsrnNTaCgKCxc4ZkZupx6K9SzeA4sd, alias: identity-private-key {}
[INFO ] 2022-04-05T22:33:09,436Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T22:33:09,443Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T22:33:09.261Z
      epoch=1
  } {}
[INFO ] 2022-04-05T22:33:10,165Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T22:33:10,168Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T22:33:10,168Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T22:33:10,357Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T22:33:10,362Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T22:33:10,390Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197990362), owningKey=DLVkNkgi6qM4VF7UsrnNTaCgKCxc4ZkZupx6K9SzeA4sd {}
[INFO ] 2022-04-05T22:33:10,390Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:10,420Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197990362) {}
[INFO ] 2022-04-05T22:33:10,439Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T22:33:10,443Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T22:33:10,443Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T22:33:10,449Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197990362), owningKey=DLVkNkgi6qM4VF7UsrnNTaCgKCxc4ZkZupx6K9SzeA4sd {}
[INFO ] 2022-04-05T22:33:10,449Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:10,504Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4730291D1360795204630EED2D7F9031E271A57AF24630C357BCE8CBE20D37B8 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T22:33:10,511Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2022-04-05T22:33:10,533Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197990362) {}
[INFO ] 2022-04-05T22:33:10,533Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197990362), owningKey=DLVkNkgi6qM4VF7UsrnNTaCgKCxc4ZkZupx6K9SzeA4sd {}
[INFO ] 2022-04-05T22:33:10,533Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:10,533Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197990362), owningKey=DLVkNkgi6qM4VF7UsrnNTaCgKCxc4ZkZupx6K9SzeA4sd {}
[INFO ] 2022-04-05T22:33:10,533Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:10,541Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-223309.261-45EB4977BC7871F7/nodes/1/cordapps] {}
[INFO ] 2022-04-05T22:33:10,541Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223309.261-45EB4977BC7871F7/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223309.261-45EB4977BC7871F7/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T22:33:10,541Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223309.261-45EB4977BC7871F7/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T22:33:10,547Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223309.261-45EB4977BC7871F7/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T22:33:10,583Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:10,584Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T22:33:10,585Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T22:33:10,632Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T22:33:10,633Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL4QKxV3g7SDD2vkj9uDsW4u4z5RACQHtm4Sejcw5ZH3Ao, alias: identity-private-key {}
[INFO ] 2022-04-05T22:33:10,639Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T22:33:10,641Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T22:33:09.261Z
      epoch=1
  } {}
[INFO ] 2022-04-05T22:33:11,273Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T22:33:11,277Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:11,277Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:11,435Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:11,441Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T22:33:11,444Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197991441), owningKey=DL4QKxV3g7SDD2vkj9uDsW4u4z5RACQHtm4Sejcw5ZH3Ao {}
[INFO ] 2022-04-05T22:33:11,444Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:11,450Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197991441) {}
[INFO ] 2022-04-05T22:33:11,455Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T22:33:11,460Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T22:33:11,460Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T22:33:11,460Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197991441), owningKey=DL4QKxV3g7SDD2vkj9uDsW4u4z5RACQHtm4Sejcw5ZH3Ao {}
[INFO ] 2022-04-05T22:33:11,460Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:11,508Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4730291D1360795204630EED2D7F9031E271A57AF24630C357BCE8CBE20D37B8 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T22:33:11,527Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197991441) {}
[INFO ] 2022-04-05T22:33:11,529Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197990362), owningKey=DLVkNkgi6qM4VF7UsrnNTaCgKCxc4ZkZupx6K9SzeA4sd {}
[INFO ] 2022-04-05T22:33:11,529Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:11,541Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197991441), owningKey=DL4QKxV3g7SDD2vkj9uDsW4u4z5RACQHtm4Sejcw5ZH3Ao {}
[INFO ] 2022-04-05T22:33:11,541Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:11,551Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197991441), owningKey=DL4QKxV3g7SDD2vkj9uDsW4u4z5RACQHtm4Sejcw5ZH3Ao {}
[INFO ] 2022-04-05T22:33:11,551Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:11,551Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197991441), owningKey=DL4QKxV3g7SDD2vkj9uDsW4u4z5RACQHtm4Sejcw5ZH3Ao {}
[INFO ] 2022-04-05T22:33:11,551Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:11,563Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-223309.261-45EB4977BC7871F7/nodes/2/cordapps] {}
[INFO ] 2022-04-05T22:33:11,563Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223309.261-45EB4977BC7871F7/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223309.261-45EB4977BC7871F7/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T22:33:11,563Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223309.261-45EB4977BC7871F7/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T22:33:11,573Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223309.261-45EB4977BC7871F7/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T22:33:11,615Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:11,616Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T22:33:11,617Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T22:33:11,658Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T22:33:11,658Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLHJm9LY6nZ5SpiBSCSpFLXs7k541ePBjvrRZ1p15U9Jnr, alias: identity-private-key {}
[INFO ] 2022-04-05T22:33:11,669Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T22:33:11,673Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T22:33:09.261Z
      epoch=1
  } {}
[INFO ] 2022-04-05T22:33:12,203Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T22:33:12,208Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:12,208Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:12,457Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:12,463Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T22:33:12,466Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197992463), owningKey=DLHJm9LY6nZ5SpiBSCSpFLXs7k541ePBjvrRZ1p15U9Jnr {}
[INFO ] 2022-04-05T22:33:12,466Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:12,472Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197992463) {}
[INFO ] 2022-04-05T22:33:12,482Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T22:33:12,487Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T22:33:12,487Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T22:33:12,488Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197992463), owningKey=DLHJm9LY6nZ5SpiBSCSpFLXs7k541ePBjvrRZ1p15U9Jnr {}
[INFO ] 2022-04-05T22:33:12,488Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:12,533Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4730291D1360795204630EED2D7F9031E271A57AF24630C357BCE8CBE20D37B8 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T22:33:12,553Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197992463) {}
[INFO ] 2022-04-05T22:33:12,554Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197990362), owningKey=DLVkNkgi6qM4VF7UsrnNTaCgKCxc4ZkZupx6K9SzeA4sd {}
[INFO ] 2022-04-05T22:33:12,554Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:12,566Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197992463), owningKey=DLHJm9LY6nZ5SpiBSCSpFLXs7k541ePBjvrRZ1p15U9Jnr {}
[INFO ] 2022-04-05T22:33:12,566Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:12,577Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197991441), owningKey=DL4QKxV3g7SDD2vkj9uDsW4u4z5RACQHtm4Sejcw5ZH3Ao {}
[INFO ] 2022-04-05T22:33:12,577Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:12,589Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197992463), owningKey=DLHJm9LY6nZ5SpiBSCSpFLXs7k541ePBjvrRZ1p15U9Jnr {}
[INFO ] 2022-04-05T22:33:12,589Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:12,597Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197992463), owningKey=DLHJm9LY6nZ5SpiBSCSpFLXs7k541ePBjvrRZ1p15U9Jnr {}
[INFO ] 2022-04-05T22:33:12,597Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:12,597Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197992463), owningKey=DLHJm9LY6nZ5SpiBSCSpFLXs7k541ePBjvrRZ1p15U9Jnr {}
[INFO ] 2022-04-05T22:33:12,597Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:12,777Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=edb0b3f0-f2bc-4248-b6f8-daffdda7a404, invocation_id=156fada8-fd2f-4661-9cda-635c73f67ada, invocation_timestamp=2022-04-05T22:33:12.756Z, origin=O=Mock Company 1, L=London, C=GB, session_id=156fada8-fd2f-4661-9cda-635c73f67ada, session_timestamp=2022-04-05T22:33:12.756Z, thread-id=483, tx_id=465FCAD7CCEFE078B73354A7B9806D9D610C534D6F4BDA9A927254F54D5C6082}
[INFO ] 2022-04-05T22:33:12,790Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=edb0b3f0-f2bc-4248-b6f8-daffdda7a404, invocation_id=156fada8-fd2f-4661-9cda-635c73f67ada, invocation_timestamp=2022-04-05T22:33:12.756Z, origin=O=Mock Company 1, L=London, C=GB, session_id=156fada8-fd2f-4661-9cda-635c73f67ada, session_timestamp=2022-04-05T22:33:12.756Z, thread-id=483, tx_id=465FCAD7CCEFE078B73354A7B9806D9D610C534D6F4BDA9A927254F54D5C6082}
[INFO ] 2022-04-05T22:33:13,066Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=d20f3b14-4f0f-47a8-80e0-815d5cc63122, invocation_id=9777f63b-ef61-4afc-8d47-269849e50942, invocation_timestamp=2022-04-05T22:33:12.601Z, origin=Only For Testing, session_id=9777f63b-ef61-4afc-8d47-269849e50942, session_timestamp=2022-04-05T22:33:12.601Z, thread-id=483, tx_id=465FCAD7CCEFE078B73354A7B9806D9D610C534D6F4BDA9A927254F54D5C6082}
[INFO ] 2022-04-05T22:33:13,066Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=d20f3b14-4f0f-47a8-80e0-815d5cc63122, invocation_id=9777f63b-ef61-4afc-8d47-269849e50942, invocation_timestamp=2022-04-05T22:33:12.601Z, origin=Only For Testing, session_id=9777f63b-ef61-4afc-8d47-269849e50942, session_timestamp=2022-04-05T22:33:12.601Z, thread-id=483, tx_id=465FCAD7CCEFE078B73354A7B9806D9D610C534D6F4BDA9A927254F54D5C6082}
[INFO ] 2022-04-05T22:33:13,101Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=d20f3b14-4f0f-47a8-80e0-815d5cc63122, invocation_id=9777f63b-ef61-4afc-8d47-269849e50942, invocation_timestamp=2022-04-05T22:33:12.601Z, origin=Only For Testing, session_id=9777f63b-ef61-4afc-8d47-269849e50942, session_timestamp=2022-04-05T22:33:12.601Z, thread-id=483, tx_id=465FCAD7CCEFE078B73354A7B9806D9D610C534D6F4BDA9A927254F54D5C6082}
[INFO ] 2022-04-05T22:33:13,125Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=edb0b3f0-f2bc-4248-b6f8-daffdda7a404, invocation_id=156fada8-fd2f-4661-9cda-635c73f67ada, invocation_timestamp=2022-04-05T22:33:12.756Z, origin=O=Mock Company 1, L=London, C=GB, session_id=156fada8-fd2f-4661-9cda-635c73f67ada, session_timestamp=2022-04-05T22:33:12.756Z, thread-id=483, tx_id=465FCAD7CCEFE078B73354A7B9806D9D610C534D6F4BDA9A927254F54D5C6082}
[INFO ] 2022-04-05T22:33:13,132Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=edb0b3f0-f2bc-4248-b6f8-daffdda7a404, invocation_id=156fada8-fd2f-4661-9cda-635c73f67ada, invocation_timestamp=2022-04-05T22:33:12.756Z, origin=O=Mock Company 1, L=London, C=GB, session_id=156fada8-fd2f-4661-9cda-635c73f67ada, session_timestamp=2022-04-05T22:33:12.756Z, thread-id=483, tx_id=465FCAD7CCEFE078B73354A7B9806D9D610C534D6F4BDA9A927254F54D5C6082}
[INFO ] 2022-04-05T22:33:13,136Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=edb0b3f0-f2bc-4248-b6f8-daffdda7a404, invocation_id=156fada8-fd2f-4661-9cda-635c73f67ada, invocation_timestamp=2022-04-05T22:33:12.756Z, origin=O=Mock Company 1, L=London, C=GB, session_id=156fada8-fd2f-4661-9cda-635c73f67ada, session_timestamp=2022-04-05T22:33:12.756Z, thread-id=483, tx_id=465FCAD7CCEFE078B73354A7B9806D9D610C534D6F4BDA9A927254F54D5C6082}
[INFO ] 2022-04-05T22:33:13,147Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=edb0b3f0-f2bc-4248-b6f8-daffdda7a404, invocation_id=156fada8-fd2f-4661-9cda-635c73f67ada, invocation_timestamp=2022-04-05T22:33:12.756Z, origin=O=Mock Company 1, L=London, C=GB, session_id=156fada8-fd2f-4661-9cda-635c73f67ada, session_timestamp=2022-04-05T22:33:12.756Z, thread-id=483, tx_id=465FCAD7CCEFE078B73354A7B9806D9D610C534D6F4BDA9A927254F54D5C6082}
[INFO ] 2022-04-05T22:33:13,161Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=d20f3b14-4f0f-47a8-80e0-815d5cc63122, invocation_id=9777f63b-ef61-4afc-8d47-269849e50942, invocation_timestamp=2022-04-05T22:33:12.601Z, origin=Only For Testing, session_id=9777f63b-ef61-4afc-8d47-269849e50942, session_timestamp=2022-04-05T22:33:12.601Z, thread-id=483, tx_id=465FCAD7CCEFE078B73354A7B9806D9D610C534D6F4BDA9A927254F54D5C6082}
[INFO ] 2022-04-05T22:33:13,161Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=d20f3b14-4f0f-47a8-80e0-815d5cc63122, invocation_id=9777f63b-ef61-4afc-8d47-269849e50942, invocation_timestamp=2022-04-05T22:33:12.601Z, origin=Only For Testing, session_id=9777f63b-ef61-4afc-8d47-269849e50942, session_timestamp=2022-04-05T22:33:12.601Z, thread-id=483, tx_id=465FCAD7CCEFE078B73354A7B9806D9D610C534D6F4BDA9A927254F54D5C6082}
[INFO ] 2022-04-05T22:33:13,174Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-7) {}
[INFO ] 2022-04-05T22:33:13,185Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T22:33:13,185Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:13,187Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-8) {}
[INFO ] 2022-04-05T22:33:13,195Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T22:33:13,195Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:13,197Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-9) {}
[INFO ] 2022-04-05T22:33:13,206Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T22:33:13,206Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:13,328Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-223313.207-BAF4488772A8E303/nodes/0/cordapps] {}
[INFO ] 2022-04-05T22:33:13,328Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223313.207-BAF4488772A8E303/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223313.207-BAF4488772A8E303/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T22:33:13,329Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223313.207-BAF4488772A8E303/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T22:33:13,335Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223313.207-BAF4488772A8E303/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T22:33:13,362Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:13,364Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T22:33:13,365Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T22:33:13,370Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T22:33:13,371Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL4YDTAkwShUsjoZmnCgpmAAuMexjD3rWmmRHmBAgULREA, alias: identity-private-key {}
[INFO ] 2022-04-05T22:33:13,381Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T22:33:13,389Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T22:33:13.207Z
      epoch=1
  } {}
[INFO ] 2022-04-05T22:33:13,995Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T22:33:13,996Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T22:33:13,996Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T22:33:14,550Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T22:33:14,555Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T22:33:14,559Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197994555), owningKey=DL4YDTAkwShUsjoZmnCgpmAAuMexjD3rWmmRHmBAgULREA {}
[INFO ] 2022-04-05T22:33:14,559Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:14,577Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197994555) {}
[INFO ] 2022-04-05T22:33:14,586Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T22:33:14,589Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T22:33:14,589Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T22:33:14,596Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197994555), owningKey=DL4YDTAkwShUsjoZmnCgpmAAuMexjD3rWmmRHmBAgULREA {}
[INFO ] 2022-04-05T22:33:14,596Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:14,641Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4730291D1360795204630EED2D7F9031E271A57AF24630C357BCE8CBE20D37B8 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T22:33:14,644Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2022-04-05T22:33:14,658Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197994555) {}
[INFO ] 2022-04-05T22:33:14,658Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197994555), owningKey=DL4YDTAkwShUsjoZmnCgpmAAuMexjD3rWmmRHmBAgULREA {}
[INFO ] 2022-04-05T22:33:14,658Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:14,658Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197994555), owningKey=DL4YDTAkwShUsjoZmnCgpmAAuMexjD3rWmmRHmBAgULREA {}
[INFO ] 2022-04-05T22:33:14,658Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:14,669Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-223313.207-BAF4488772A8E303/nodes/1/cordapps] {}
[INFO ] 2022-04-05T22:33:14,669Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223313.207-BAF4488772A8E303/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223313.207-BAF4488772A8E303/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T22:33:14,669Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223313.207-BAF4488772A8E303/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T22:33:14,677Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223313.207-BAF4488772A8E303/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T22:33:14,708Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:14,711Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T22:33:14,713Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T22:33:14,770Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T22:33:14,771Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLDDR4s8zrWkzbaM3DN3JGHSczwoL9BwXsJxAVJJV1cEzD, alias: identity-private-key {}
[INFO ] 2022-04-05T22:33:14,784Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T22:33:14,788Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T22:33:13.207Z
      epoch=1
  } {}
[INFO ] 2022-04-05T22:33:15,380Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T22:33:15,381Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:15,381Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:15,518Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:15,523Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T22:33:15,526Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197995523), owningKey=DLDDR4s8zrWkzbaM3DN3JGHSczwoL9BwXsJxAVJJV1cEzD {}
[INFO ] 2022-04-05T22:33:15,526Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:15,540Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197995523) {}
[INFO ] 2022-04-05T22:33:15,547Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T22:33:15,555Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197995523), owningKey=DLDDR4s8zrWkzbaM3DN3JGHSczwoL9BwXsJxAVJJV1cEzD {}
[INFO ] 2022-04-05T22:33:15,555Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:15,557Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T22:33:15,557Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T22:33:15,592Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4730291D1360795204630EED2D7F9031E271A57AF24630C357BCE8CBE20D37B8 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T22:33:15,619Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197995523) {}
[INFO ] 2022-04-05T22:33:15,623Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197994555), owningKey=DL4YDTAkwShUsjoZmnCgpmAAuMexjD3rWmmRHmBAgULREA {}
[INFO ] 2022-04-05T22:33:15,623Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:15,634Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197995523), owningKey=DLDDR4s8zrWkzbaM3DN3JGHSczwoL9BwXsJxAVJJV1cEzD {}
[INFO ] 2022-04-05T22:33:15,634Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:15,644Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197995523), owningKey=DLDDR4s8zrWkzbaM3DN3JGHSczwoL9BwXsJxAVJJV1cEzD {}
[INFO ] 2022-04-05T22:33:15,644Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:15,644Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197995523), owningKey=DLDDR4s8zrWkzbaM3DN3JGHSczwoL9BwXsJxAVJJV1cEzD {}
[INFO ] 2022-04-05T22:33:15,644Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:15,654Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-223313.207-BAF4488772A8E303/nodes/2/cordapps] {}
[INFO ] 2022-04-05T22:33:15,654Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223313.207-BAF4488772A8E303/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223313.207-BAF4488772A8E303/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T22:33:15,654Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223313.207-BAF4488772A8E303/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T22:33:15,660Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223313.207-BAF4488772A8E303/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T22:33:15,703Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:15,705Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T22:33:15,706Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T22:33:15,754Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T22:33:15,754Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLBuVm65vX4urFvKSbP3AnUpi8pPPPMuwEYBYx3Sk683rV, alias: identity-private-key {}
[INFO ] 2022-04-05T22:33:15,767Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T22:33:15,772Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T22:33:13.207Z
      epoch=1
  } {}
[INFO ] 2022-04-05T22:33:16,254Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T22:33:16,255Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:16,255Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:16,394Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:16,400Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T22:33:16,404Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197996400), owningKey=DLBuVm65vX4urFvKSbP3AnUpi8pPPPMuwEYBYx3Sk683rV {}
[INFO ] 2022-04-05T22:33:16,404Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:16,412Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197996400) {}
[INFO ] 2022-04-05T22:33:16,421Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T22:33:16,422Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T22:33:16,422Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T22:33:16,427Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197996400), owningKey=DLBuVm65vX4urFvKSbP3AnUpi8pPPPMuwEYBYx3Sk683rV {}
[INFO ] 2022-04-05T22:33:16,427Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:16,462Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4730291D1360795204630EED2D7F9031E271A57AF24630C357BCE8CBE20D37B8 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T22:33:16,480Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197996400) {}
[INFO ] 2022-04-05T22:33:16,481Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197994555), owningKey=DL4YDTAkwShUsjoZmnCgpmAAuMexjD3rWmmRHmBAgULREA {}
[INFO ] 2022-04-05T22:33:16,481Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:16,494Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197996400), owningKey=DLBuVm65vX4urFvKSbP3AnUpi8pPPPMuwEYBYx3Sk683rV {}
[INFO ] 2022-04-05T22:33:16,494Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:16,502Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197995523), owningKey=DLDDR4s8zrWkzbaM3DN3JGHSczwoL9BwXsJxAVJJV1cEzD {}
[INFO ] 2022-04-05T22:33:16,502Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:16,512Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197996400), owningKey=DLBuVm65vX4urFvKSbP3AnUpi8pPPPMuwEYBYx3Sk683rV {}
[INFO ] 2022-04-05T22:33:16,512Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:16,522Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197996400), owningKey=DLBuVm65vX4urFvKSbP3AnUpi8pPPPMuwEYBYx3Sk683rV {}
[INFO ] 2022-04-05T22:33:16,522Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:16,522Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649197996400), owningKey=DLBuVm65vX4urFvKSbP3AnUpi8pPPPMuwEYBYx3Sk683rV {}
[INFO ] 2022-04-05T22:33:16,522Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:16,700Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=44f65e96-0309-4bc5-94af-e34c206539e3, invocation_id=86140925-c2eb-4010-a0d5-f296e41db5ba, invocation_timestamp=2022-04-05T22:33:16.682Z, origin=O=Mock Company 1, L=London, C=GB, session_id=86140925-c2eb-4010-a0d5-f296e41db5ba, session_timestamp=2022-04-05T22:33:16.682Z, thread-id=637, tx_id=DA319D9B5D9A1859D92163B32A1F15657259FBDC9D11571281A4D75FA2488DDB}
[INFO ] 2022-04-05T22:33:16,711Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=44f65e96-0309-4bc5-94af-e34c206539e3, invocation_id=86140925-c2eb-4010-a0d5-f296e41db5ba, invocation_timestamp=2022-04-05T22:33:16.682Z, origin=O=Mock Company 1, L=London, C=GB, session_id=86140925-c2eb-4010-a0d5-f296e41db5ba, session_timestamp=2022-04-05T22:33:16.682Z, thread-id=637, tx_id=DA319D9B5D9A1859D92163B32A1F15657259FBDC9D11571281A4D75FA2488DDB}
[INFO ] 2022-04-05T22:33:16,787Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=64fcdbc1-97c8-4897-a670-f4b2900e917c, invocation_id=db5b8b3e-00ba-41b3-90f6-de486acb9891, invocation_timestamp=2022-04-05T22:33:16.526Z, origin=Only For Testing, session_id=db5b8b3e-00ba-41b3-90f6-de486acb9891, session_timestamp=2022-04-05T22:33:16.526Z, thread-id=637, tx_id=DA319D9B5D9A1859D92163B32A1F15657259FBDC9D11571281A4D75FA2488DDB}
[INFO ] 2022-04-05T22:33:16,787Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=64fcdbc1-97c8-4897-a670-f4b2900e917c, invocation_id=db5b8b3e-00ba-41b3-90f6-de486acb9891, invocation_timestamp=2022-04-05T22:33:16.526Z, origin=Only For Testing, session_id=db5b8b3e-00ba-41b3-90f6-de486acb9891, session_timestamp=2022-04-05T22:33:16.526Z, thread-id=637, tx_id=DA319D9B5D9A1859D92163B32A1F15657259FBDC9D11571281A4D75FA2488DDB}
[INFO ] 2022-04-05T22:33:16,820Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=64fcdbc1-97c8-4897-a670-f4b2900e917c, invocation_id=db5b8b3e-00ba-41b3-90f6-de486acb9891, invocation_timestamp=2022-04-05T22:33:16.526Z, origin=Only For Testing, session_id=db5b8b3e-00ba-41b3-90f6-de486acb9891, session_timestamp=2022-04-05T22:33:16.526Z, thread-id=637, tx_id=DA319D9B5D9A1859D92163B32A1F15657259FBDC9D11571281A4D75FA2488DDB}
[INFO ] 2022-04-05T22:33:16,831Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=44f65e96-0309-4bc5-94af-e34c206539e3, invocation_id=86140925-c2eb-4010-a0d5-f296e41db5ba, invocation_timestamp=2022-04-05T22:33:16.682Z, origin=O=Mock Company 1, L=London, C=GB, session_id=86140925-c2eb-4010-a0d5-f296e41db5ba, session_timestamp=2022-04-05T22:33:16.682Z, thread-id=637, tx_id=DA319D9B5D9A1859D92163B32A1F15657259FBDC9D11571281A4D75FA2488DDB}
[INFO ] 2022-04-05T22:33:16,840Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=44f65e96-0309-4bc5-94af-e34c206539e3, invocation_id=86140925-c2eb-4010-a0d5-f296e41db5ba, invocation_timestamp=2022-04-05T22:33:16.682Z, origin=O=Mock Company 1, L=London, C=GB, session_id=86140925-c2eb-4010-a0d5-f296e41db5ba, session_timestamp=2022-04-05T22:33:16.682Z, thread-id=637, tx_id=DA319D9B5D9A1859D92163B32A1F15657259FBDC9D11571281A4D75FA2488DDB}
[INFO ] 2022-04-05T22:33:16,844Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=44f65e96-0309-4bc5-94af-e34c206539e3, invocation_id=86140925-c2eb-4010-a0d5-f296e41db5ba, invocation_timestamp=2022-04-05T22:33:16.682Z, origin=O=Mock Company 1, L=London, C=GB, session_id=86140925-c2eb-4010-a0d5-f296e41db5ba, session_timestamp=2022-04-05T22:33:16.682Z, thread-id=637, tx_id=DA319D9B5D9A1859D92163B32A1F15657259FBDC9D11571281A4D75FA2488DDB}
[INFO ] 2022-04-05T22:33:16,852Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=44f65e96-0309-4bc5-94af-e34c206539e3, invocation_id=86140925-c2eb-4010-a0d5-f296e41db5ba, invocation_timestamp=2022-04-05T22:33:16.682Z, origin=O=Mock Company 1, L=London, C=GB, session_id=86140925-c2eb-4010-a0d5-f296e41db5ba, session_timestamp=2022-04-05T22:33:16.682Z, thread-id=637, tx_id=DA319D9B5D9A1859D92163B32A1F15657259FBDC9D11571281A4D75FA2488DDB}
[INFO ] 2022-04-05T22:33:16,862Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=64fcdbc1-97c8-4897-a670-f4b2900e917c, invocation_id=db5b8b3e-00ba-41b3-90f6-de486acb9891, invocation_timestamp=2022-04-05T22:33:16.526Z, origin=Only For Testing, session_id=db5b8b3e-00ba-41b3-90f6-de486acb9891, session_timestamp=2022-04-05T22:33:16.526Z, thread-id=637, tx_id=DA319D9B5D9A1859D92163B32A1F15657259FBDC9D11571281A4D75FA2488DDB}
[INFO ] 2022-04-05T22:33:16,862Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=64fcdbc1-97c8-4897-a670-f4b2900e917c, invocation_id=db5b8b3e-00ba-41b3-90f6-de486acb9891, invocation_timestamp=2022-04-05T22:33:16.526Z, origin=Only For Testing, session_id=db5b8b3e-00ba-41b3-90f6-de486acb9891, session_timestamp=2022-04-05T22:33:16.526Z, thread-id=637, tx_id=DA319D9B5D9A1859D92163B32A1F15657259FBDC9D11571281A4D75FA2488DDB}
[INFO ] 2022-04-05T22:33:16,875Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-10) {}
[INFO ] 2022-04-05T22:33:16,887Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T22:33:16,887Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:16,889Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-11) {}
[INFO ] 2022-04-05T22:33:16,897Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T22:33:16,897Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:16,899Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-12) {}
[INFO ] 2022-04-05T22:33:16,908Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T22:33:16,908Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:17,004Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-223316.911-DECB3680D2734D35/nodes/0/cordapps] {}
[INFO ] 2022-04-05T22:33:17,004Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223316.911-DECB3680D2734D35/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223316.911-DECB3680D2734D35/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T22:33:17,004Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223316.911-DECB3680D2734D35/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T22:33:17,009Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223316.911-DECB3680D2734D35/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T22:33:17,032Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:17,033Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T22:33:17,035Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T22:33:17,038Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T22:33:17,039Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLAjuDVa4ggd2bdj9zewNffzTK1deVbFcovcnvZ812RNAQ, alias: identity-private-key {}
[INFO ] 2022-04-05T22:33:17,049Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T22:33:17,055Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T22:33:16.911Z
      epoch=1
  } {}
[INFO ] 2022-04-05T22:33:17,603Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T22:33:17,607Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T22:33:17,607Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T22:33:17,768Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T22:33:17,778Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T22:33:17,781Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197997778), owningKey=DLAjuDVa4ggd2bdj9zewNffzTK1deVbFcovcnvZ812RNAQ {}
[INFO ] 2022-04-05T22:33:17,781Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:17,802Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197997778) {}
[INFO ] 2022-04-05T22:33:18,003Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T22:33:18,004Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T22:33:18,004Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T22:33:18,010Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197997778), owningKey=DLAjuDVa4ggd2bdj9zewNffzTK1deVbFcovcnvZ812RNAQ {}
[INFO ] 2022-04-05T22:33:18,010Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:18,039Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4730291D1360795204630EED2D7F9031E271A57AF24630C357BCE8CBE20D37B8 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T22:33:18,327Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2022-04-05T22:33:18,341Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197997778) {}
[INFO ] 2022-04-05T22:33:18,342Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197997778), owningKey=DLAjuDVa4ggd2bdj9zewNffzTK1deVbFcovcnvZ812RNAQ {}
[INFO ] 2022-04-05T22:33:18,342Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:18,342Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197997778), owningKey=DLAjuDVa4ggd2bdj9zewNffzTK1deVbFcovcnvZ812RNAQ {}
[INFO ] 2022-04-05T22:33:18,342Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:18,349Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-223316.911-DECB3680D2734D35/nodes/1/cordapps] {}
[INFO ] 2022-04-05T22:33:18,349Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223316.911-DECB3680D2734D35/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223316.911-DECB3680D2734D35/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T22:33:18,349Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223316.911-DECB3680D2734D35/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T22:33:18,362Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223316.911-DECB3680D2734D35/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T22:33:18,393Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:18,398Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T22:33:18,400Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T22:33:18,686Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T22:33:18,686Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLBcRMXKfQ9eDc8pTactR2VwiDQMVNahZLL37sguidjXmQ, alias: identity-private-key {}
[INFO ] 2022-04-05T22:33:18,696Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T22:33:18,698Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T22:33:16.911Z
      epoch=1
  } {}
[INFO ] 2022-04-05T22:33:19,242Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T22:33:19,244Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:19,245Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:19,368Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:19,372Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T22:33:19,374Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197999372), owningKey=DLBcRMXKfQ9eDc8pTactR2VwiDQMVNahZLL37sguidjXmQ {}
[INFO ] 2022-04-05T22:33:19,374Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:19,380Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197999372) {}
[INFO ] 2022-04-05T22:33:19,385Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T22:33:19,386Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T22:33:19,386Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T22:33:19,390Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197999372), owningKey=DLBcRMXKfQ9eDc8pTactR2VwiDQMVNahZLL37sguidjXmQ {}
[INFO ] 2022-04-05T22:33:19,390Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:19,426Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4730291D1360795204630EED2D7F9031E271A57AF24630C357BCE8CBE20D37B8 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T22:33:19,445Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197999372) {}
[INFO ] 2022-04-05T22:33:19,447Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197997778), owningKey=DLAjuDVa4ggd2bdj9zewNffzTK1deVbFcovcnvZ812RNAQ {}
[INFO ] 2022-04-05T22:33:19,447Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:19,457Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197999372), owningKey=DLBcRMXKfQ9eDc8pTactR2VwiDQMVNahZLL37sguidjXmQ {}
[INFO ] 2022-04-05T22:33:19,457Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:19,463Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197999372), owningKey=DLBcRMXKfQ9eDc8pTactR2VwiDQMVNahZLL37sguidjXmQ {}
[INFO ] 2022-04-05T22:33:19,463Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:19,463Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197999372), owningKey=DLBcRMXKfQ9eDc8pTactR2VwiDQMVNahZLL37sguidjXmQ {}
[INFO ] 2022-04-05T22:33:19,463Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:19,481Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-223316.911-DECB3680D2734D35/nodes/2/cordapps] {}
[INFO ] 2022-04-05T22:33:19,482Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223316.911-DECB3680D2734D35/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223316.911-DECB3680D2734D35/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T22:33:19,482Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223316.911-DECB3680D2734D35/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T22:33:19,486Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223316.911-DECB3680D2734D35/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T22:33:19,509Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:19,511Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T22:33:19,512Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T22:33:19,551Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T22:33:19,551Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL8KeRZthH4NEDhsBUNLKhkCCZSDHnTVRYorgqAEaqc9mV, alias: identity-private-key {}
[INFO ] 2022-04-05T22:33:19,560Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T22:33:19,562Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T22:33:16.911Z
      epoch=1
  } {}
[INFO ] 2022-04-05T22:33:19,989Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T22:33:19,991Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:19,991Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:20,114Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:20,120Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T22:33:20,122Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649198000120), owningKey=DL8KeRZthH4NEDhsBUNLKhkCCZSDHnTVRYorgqAEaqc9mV {}
[INFO ] 2022-04-05T22:33:20,122Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:20,130Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649198000120) {}
[INFO ] 2022-04-05T22:33:20,141Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T22:33:20,149Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649198000120), owningKey=DL8KeRZthH4NEDhsBUNLKhkCCZSDHnTVRYorgqAEaqc9mV {}
[INFO ] 2022-04-05T22:33:20,149Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:20,149Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T22:33:20,150Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T22:33:20,189Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4730291D1360795204630EED2D7F9031E271A57AF24630C357BCE8CBE20D37B8 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T22:33:20,206Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649198000120) {}
[INFO ] 2022-04-05T22:33:20,212Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649197997778), owningKey=DLAjuDVa4ggd2bdj9zewNffzTK1deVbFcovcnvZ812RNAQ {}
[INFO ] 2022-04-05T22:33:20,212Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:20,231Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649198000120), owningKey=DL8KeRZthH4NEDhsBUNLKhkCCZSDHnTVRYorgqAEaqc9mV {}
[INFO ] 2022-04-05T22:33:20,231Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:20,240Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649197999372), owningKey=DLBcRMXKfQ9eDc8pTactR2VwiDQMVNahZLL37sguidjXmQ {}
[INFO ] 2022-04-05T22:33:20,240Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:20,266Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649198000120), owningKey=DL8KeRZthH4NEDhsBUNLKhkCCZSDHnTVRYorgqAEaqc9mV {}
[INFO ] 2022-04-05T22:33:20,266Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:20,277Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649198000120), owningKey=DL8KeRZthH4NEDhsBUNLKhkCCZSDHnTVRYorgqAEaqc9mV {}
[INFO ] 2022-04-05T22:33:20,277Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:20,277Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649198000120), owningKey=DL8KeRZthH4NEDhsBUNLKhkCCZSDHnTVRYorgqAEaqc9mV {}
[INFO ] 2022-04-05T22:33:20,277Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:20,414Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=a667879b-dabc-4e4a-b958-409de50da11c, invocation_id=d4834468-7f3b-4d16-bee7-33b9fa27d7c8, invocation_timestamp=2022-04-05T22:33:20.396Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d4834468-7f3b-4d16-bee7-33b9fa27d7c8, session_timestamp=2022-04-05T22:33:20.396Z, thread-id=791, tx_id=CDF9B7297F7B16FFB5A7DDEF1A7C1E598EF26EDE1FD5C62E1469B727F111679C}
[INFO ] 2022-04-05T22:33:20,425Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=a667879b-dabc-4e4a-b958-409de50da11c, invocation_id=d4834468-7f3b-4d16-bee7-33b9fa27d7c8, invocation_timestamp=2022-04-05T22:33:20.396Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d4834468-7f3b-4d16-bee7-33b9fa27d7c8, session_timestamp=2022-04-05T22:33:20.396Z, thread-id=791, tx_id=CDF9B7297F7B16FFB5A7DDEF1A7C1E598EF26EDE1FD5C62E1469B727F111679C}
[INFO ] 2022-04-05T22:33:20,515Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=952bb346-5d05-4ed5-b97f-de972afb2d1d, invocation_id=144489cf-1bf3-42de-8c0f-4beeed57e121, invocation_timestamp=2022-04-05T22:33:20.280Z, origin=Only For Testing, session_id=144489cf-1bf3-42de-8c0f-4beeed57e121, session_timestamp=2022-04-05T22:33:20.280Z, thread-id=791, tx_id=CDF9B7297F7B16FFB5A7DDEF1A7C1E598EF26EDE1FD5C62E1469B727F111679C}
[INFO ] 2022-04-05T22:33:20,515Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=952bb346-5d05-4ed5-b97f-de972afb2d1d, invocation_id=144489cf-1bf3-42de-8c0f-4beeed57e121, invocation_timestamp=2022-04-05T22:33:20.280Z, origin=Only For Testing, session_id=144489cf-1bf3-42de-8c0f-4beeed57e121, session_timestamp=2022-04-05T22:33:20.280Z, thread-id=791, tx_id=CDF9B7297F7B16FFB5A7DDEF1A7C1E598EF26EDE1FD5C62E1469B727F111679C}
[INFO ] 2022-04-05T22:33:20,532Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=952bb346-5d05-4ed5-b97f-de972afb2d1d, invocation_id=144489cf-1bf3-42de-8c0f-4beeed57e121, invocation_timestamp=2022-04-05T22:33:20.280Z, origin=Only For Testing, session_id=144489cf-1bf3-42de-8c0f-4beeed57e121, session_timestamp=2022-04-05T22:33:20.280Z, thread-id=791, tx_id=CDF9B7297F7B16FFB5A7DDEF1A7C1E598EF26EDE1FD5C62E1469B727F111679C}
[INFO ] 2022-04-05T22:33:20,546Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=a667879b-dabc-4e4a-b958-409de50da11c, invocation_id=d4834468-7f3b-4d16-bee7-33b9fa27d7c8, invocation_timestamp=2022-04-05T22:33:20.396Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d4834468-7f3b-4d16-bee7-33b9fa27d7c8, session_timestamp=2022-04-05T22:33:20.396Z, thread-id=791, tx_id=CDF9B7297F7B16FFB5A7DDEF1A7C1E598EF26EDE1FD5C62E1469B727F111679C}
[INFO ] 2022-04-05T22:33:20,552Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=a667879b-dabc-4e4a-b958-409de50da11c, invocation_id=d4834468-7f3b-4d16-bee7-33b9fa27d7c8, invocation_timestamp=2022-04-05T22:33:20.396Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d4834468-7f3b-4d16-bee7-33b9fa27d7c8, session_timestamp=2022-04-05T22:33:20.396Z, thread-id=791, tx_id=CDF9B7297F7B16FFB5A7DDEF1A7C1E598EF26EDE1FD5C62E1469B727F111679C}
[INFO ] 2022-04-05T22:33:20,555Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=a667879b-dabc-4e4a-b958-409de50da11c, invocation_id=d4834468-7f3b-4d16-bee7-33b9fa27d7c8, invocation_timestamp=2022-04-05T22:33:20.396Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d4834468-7f3b-4d16-bee7-33b9fa27d7c8, session_timestamp=2022-04-05T22:33:20.396Z, thread-id=791, tx_id=CDF9B7297F7B16FFB5A7DDEF1A7C1E598EF26EDE1FD5C62E1469B727F111679C}
[INFO ] 2022-04-05T22:33:20,565Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=a667879b-dabc-4e4a-b958-409de50da11c, invocation_id=d4834468-7f3b-4d16-bee7-33b9fa27d7c8, invocation_timestamp=2022-04-05T22:33:20.396Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d4834468-7f3b-4d16-bee7-33b9fa27d7c8, session_timestamp=2022-04-05T22:33:20.396Z, thread-id=791, tx_id=CDF9B7297F7B16FFB5A7DDEF1A7C1E598EF26EDE1FD5C62E1469B727F111679C}
[INFO ] 2022-04-05T22:33:20,574Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=952bb346-5d05-4ed5-b97f-de972afb2d1d, invocation_id=144489cf-1bf3-42de-8c0f-4beeed57e121, invocation_timestamp=2022-04-05T22:33:20.280Z, origin=Only For Testing, session_id=144489cf-1bf3-42de-8c0f-4beeed57e121, session_timestamp=2022-04-05T22:33:20.280Z, thread-id=791, tx_id=CDF9B7297F7B16FFB5A7DDEF1A7C1E598EF26EDE1FD5C62E1469B727F111679C}
[INFO ] 2022-04-05T22:33:20,575Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=952bb346-5d05-4ed5-b97f-de972afb2d1d, invocation_id=144489cf-1bf3-42de-8c0f-4beeed57e121, invocation_timestamp=2022-04-05T22:33:20.280Z, origin=Only For Testing, session_id=144489cf-1bf3-42de-8c0f-4beeed57e121, session_timestamp=2022-04-05T22:33:20.280Z, thread-id=791, tx_id=CDF9B7297F7B16FFB5A7DDEF1A7C1E598EF26EDE1FD5C62E1469B727F111679C}
[INFO ] 2022-04-05T22:33:20,638Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-13) {}
[INFO ] 2022-04-05T22:33:20,647Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T22:33:20,647Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:20,649Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-14) {}
[INFO ] 2022-04-05T22:33:20,656Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T22:33:20,657Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:20,658Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-15) {}
[INFO ] 2022-04-05T22:33:20,667Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T22:33:20,667Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:20,754Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-223320.670-A15C22B91A751C89/nodes/0/cordapps] {}
[INFO ] 2022-04-05T22:33:20,755Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223320.670-A15C22B91A751C89/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223320.670-A15C22B91A751C89/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T22:33:20,755Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223320.670-A15C22B91A751C89/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T22:33:20,760Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223320.670-A15C22B91A751C89/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T22:33:20,792Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:20,793Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T22:33:20,794Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T22:33:20,798Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T22:33:20,799Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL8W2pRQEWjzSn2T3ursgrwXWic5n2zqx1hQAhvzUDkce7, alias: identity-private-key {}
[INFO ] 2022-04-05T22:33:20,810Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T22:33:20,817Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T22:33:20.670Z
      epoch=1
  } {}
[INFO ] 2022-04-05T22:33:21,381Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T22:33:21,383Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T22:33:21,383Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T22:33:21,506Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T22:33:21,510Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T22:33:21,512Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649198001510), owningKey=DL8W2pRQEWjzSn2T3ursgrwXWic5n2zqx1hQAhvzUDkce7 {}
[INFO ] 2022-04-05T22:33:21,512Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:21,524Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649198001510) {}
[INFO ] 2022-04-05T22:33:21,532Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T22:33:21,534Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T22:33:21,534Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T22:33:21,539Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649198001510), owningKey=DL8W2pRQEWjzSn2T3ursgrwXWic5n2zqx1hQAhvzUDkce7 {}
[INFO ] 2022-04-05T22:33:21,539Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:21,589Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4730291D1360795204630EED2D7F9031E271A57AF24630C357BCE8CBE20D37B8 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T22:33:21,592Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2022-04-05T22:33:21,605Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649198001510) {}
[INFO ] 2022-04-05T22:33:21,605Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649198001510), owningKey=DL8W2pRQEWjzSn2T3ursgrwXWic5n2zqx1hQAhvzUDkce7 {}
[INFO ] 2022-04-05T22:33:21,605Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:21,605Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649198001510), owningKey=DL8W2pRQEWjzSn2T3ursgrwXWic5n2zqx1hQAhvzUDkce7 {}
[INFO ] 2022-04-05T22:33:21,605Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:21,614Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-223320.670-A15C22B91A751C89/nodes/1/cordapps] {}
[INFO ] 2022-04-05T22:33:21,614Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223320.670-A15C22B91A751C89/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223320.670-A15C22B91A751C89/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T22:33:21,614Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223320.670-A15C22B91A751C89/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T22:33:21,619Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223320.670-A15C22B91A751C89/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T22:33:21,646Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:21,650Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T22:33:21,651Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T22:33:21,694Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T22:33:21,694Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL66Uo8qtHejutQ38f2zTvXYJ55bknJiq9qDAwHdRJ22gz, alias: identity-private-key {}
[INFO ] 2022-04-05T22:33:21,704Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T22:33:21,706Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T22:33:20.670Z
      epoch=1
  } {}
[INFO ] 2022-04-05T22:33:22,129Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T22:33:22,130Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:22,130Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:22,246Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:22,251Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T22:33:22,256Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649198002251), owningKey=DL66Uo8qtHejutQ38f2zTvXYJ55bknJiq9qDAwHdRJ22gz {}
[INFO ] 2022-04-05T22:33:22,256Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:22,263Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649198002251) {}
[INFO ] 2022-04-05T22:33:22,270Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T22:33:22,272Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T22:33:22,272Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T22:33:22,277Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649198002251), owningKey=DL66Uo8qtHejutQ38f2zTvXYJ55bknJiq9qDAwHdRJ22gz {}
[INFO ] 2022-04-05T22:33:22,277Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:22,330Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4730291D1360795204630EED2D7F9031E271A57AF24630C357BCE8CBE20D37B8 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T22:33:22,345Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649198002251) {}
[INFO ] 2022-04-05T22:33:22,346Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649198001510), owningKey=DL8W2pRQEWjzSn2T3ursgrwXWic5n2zqx1hQAhvzUDkce7 {}
[INFO ] 2022-04-05T22:33:22,346Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:22,355Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649198002251), owningKey=DL66Uo8qtHejutQ38f2zTvXYJ55bknJiq9qDAwHdRJ22gz {}
[INFO ] 2022-04-05T22:33:22,355Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:22,365Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649198002251), owningKey=DL66Uo8qtHejutQ38f2zTvXYJ55bknJiq9qDAwHdRJ22gz {}
[INFO ] 2022-04-05T22:33:22,365Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:22,365Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649198002251), owningKey=DL66Uo8qtHejutQ38f2zTvXYJ55bknJiq9qDAwHdRJ22gz {}
[INFO ] 2022-04-05T22:33:22,365Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:22,374Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-223320.670-A15C22B91A751C89/nodes/2/cordapps] {}
[INFO ] 2022-04-05T22:33:22,374Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223320.670-A15C22B91A751C89/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223320.670-A15C22B91A751C89/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T22:33:22,374Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223320.670-A15C22B91A751C89/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T22:33:22,414Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-223320.670-A15C22B91A751C89/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T22:33:22,442Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:22,447Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T22:33:22,450Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T22:33:22,492Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T22:33:22,492Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGpY6YeMxQwDL2BvUv8odm9Ja853g6EFmJ999s4GDhanR, alias: identity-private-key {}
[INFO ] 2022-04-05T22:33:22,500Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T22:33:22,502Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T22:33:20.670Z
      epoch=1
  } {}
[INFO ] 2022-04-05T22:33:22,985Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T22:33:22,986Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:22,986Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:23,120Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T22:33:23,124Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T22:33:23,126Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649198003124), owningKey=DLGpY6YeMxQwDL2BvUv8odm9Ja853g6EFmJ999s4GDhanR {}
[INFO ] 2022-04-05T22:33:23,126Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:23,131Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649198003124) {}
[INFO ] 2022-04-05T22:33:23,135Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T22:33:23,136Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T22:33:23,136Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T22:33:23,140Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649198003124), owningKey=DLGpY6YeMxQwDL2BvUv8odm9Ja853g6EFmJ999s4GDhanR {}
[INFO ] 2022-04-05T22:33:23,140Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:23,170Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4730291D1360795204630EED2D7F9031E271A57AF24630C357BCE8CBE20D37B8 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T22:33:23,190Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649198003124) {}
[INFO ] 2022-04-05T22:33:23,192Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649198001510), owningKey=DL8W2pRQEWjzSn2T3ursgrwXWic5n2zqx1hQAhvzUDkce7 {}
[INFO ] 2022-04-05T22:33:23,192Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:23,201Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649198003124), owningKey=DLGpY6YeMxQwDL2BvUv8odm9Ja853g6EFmJ999s4GDhanR {}
[INFO ] 2022-04-05T22:33:23,201Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:23,208Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649198002251), owningKey=DL66Uo8qtHejutQ38f2zTvXYJ55bknJiq9qDAwHdRJ22gz {}
[INFO ] 2022-04-05T22:33:23,208Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:23,217Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649198003124), owningKey=DLGpY6YeMxQwDL2BvUv8odm9Ja853g6EFmJ999s4GDhanR {}
[INFO ] 2022-04-05T22:33:23,217Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T22:33:23,224Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649198003124), owningKey=DLGpY6YeMxQwDL2BvUv8odm9Ja853g6EFmJ999s4GDhanR {}
[INFO ] 2022-04-05T22:33:23,224Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:23,225Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649198003124), owningKey=DLGpY6YeMxQwDL2BvUv8odm9Ja853g6EFmJ999s4GDhanR {}
[INFO ] 2022-04-05T22:33:23,225Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T22:33:23,340Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=65f696a2-11d7-4721-96b1-f49064f2ff0c, invocation_id=135e5729-40b3-4148-84f4-3f4378bbad2a, invocation_timestamp=2022-04-05T22:33:23.323Z, origin=O=Mock Company 1, L=London, C=GB, session_id=135e5729-40b3-4148-84f4-3f4378bbad2a, session_timestamp=2022-04-05T22:33:23.323Z, thread-id=945, tx_id=237BFA518D2D800164AD625CB682FB0392C6F1470F4CD9504BE525A8B0EACB18}
[INFO ] 2022-04-05T22:33:23,347Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=65f696a2-11d7-4721-96b1-f49064f2ff0c, invocation_id=135e5729-40b3-4148-84f4-3f4378bbad2a, invocation_timestamp=2022-04-05T22:33:23.323Z, origin=O=Mock Company 1, L=London, C=GB, session_id=135e5729-40b3-4148-84f4-3f4378bbad2a, session_timestamp=2022-04-05T22:33:23.323Z, thread-id=945, tx_id=237BFA518D2D800164AD625CB682FB0392C6F1470F4CD9504BE525A8B0EACB18}
[INFO ] 2022-04-05T22:33:23,424Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=1f54de8e-8586-4ff5-a475-10c9d1315d48, invocation_id=bbc24c87-4320-4cf6-8897-da56a9f07f70, invocation_timestamp=2022-04-05T22:33:23.226Z, origin=Only For Testing, session_id=bbc24c87-4320-4cf6-8897-da56a9f07f70, session_timestamp=2022-04-05T22:33:23.226Z, thread-id=945, tx_id=237BFA518D2D800164AD625CB682FB0392C6F1470F4CD9504BE525A8B0EACB18}
[INFO ] 2022-04-05T22:33:23,424Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=1f54de8e-8586-4ff5-a475-10c9d1315d48, invocation_id=bbc24c87-4320-4cf6-8897-da56a9f07f70, invocation_timestamp=2022-04-05T22:33:23.226Z, origin=Only For Testing, session_id=bbc24c87-4320-4cf6-8897-da56a9f07f70, session_timestamp=2022-04-05T22:33:23.226Z, thread-id=945, tx_id=237BFA518D2D800164AD625CB682FB0392C6F1470F4CD9504BE525A8B0EACB18}
[INFO ] 2022-04-05T22:33:23,440Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=1f54de8e-8586-4ff5-a475-10c9d1315d48, invocation_id=bbc24c87-4320-4cf6-8897-da56a9f07f70, invocation_timestamp=2022-04-05T22:33:23.226Z, origin=Only For Testing, session_id=bbc24c87-4320-4cf6-8897-da56a9f07f70, session_timestamp=2022-04-05T22:33:23.226Z, thread-id=945, tx_id=237BFA518D2D800164AD625CB682FB0392C6F1470F4CD9504BE525A8B0EACB18}
[INFO ] 2022-04-05T22:33:23,451Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=65f696a2-11d7-4721-96b1-f49064f2ff0c, invocation_id=135e5729-40b3-4148-84f4-3f4378bbad2a, invocation_timestamp=2022-04-05T22:33:23.323Z, origin=O=Mock Company 1, L=London, C=GB, session_id=135e5729-40b3-4148-84f4-3f4378bbad2a, session_timestamp=2022-04-05T22:33:23.323Z, thread-id=945, tx_id=237BFA518D2D800164AD625CB682FB0392C6F1470F4CD9504BE525A8B0EACB18}
[INFO ] 2022-04-05T22:33:23,458Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=65f696a2-11d7-4721-96b1-f49064f2ff0c, invocation_id=135e5729-40b3-4148-84f4-3f4378bbad2a, invocation_timestamp=2022-04-05T22:33:23.323Z, origin=O=Mock Company 1, L=London, C=GB, session_id=135e5729-40b3-4148-84f4-3f4378bbad2a, session_timestamp=2022-04-05T22:33:23.323Z, thread-id=945, tx_id=237BFA518D2D800164AD625CB682FB0392C6F1470F4CD9504BE525A8B0EACB18}
[INFO ] 2022-04-05T22:33:23,461Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000011, flow-id=65f696a2-11d7-4721-96b1-f49064f2ff0c, invocation_id=135e5729-40b3-4148-84f4-3f4378bbad2a, invocation_timestamp=2022-04-05T22:33:23.323Z, origin=O=Mock Company 1, L=London, C=GB, session_id=135e5729-40b3-4148-84f4-3f4378bbad2a, session_timestamp=2022-04-05T22:33:23.323Z, thread-id=945, tx_id=237BFA518D2D800164AD625CB682FB0392C6F1470F4CD9504BE525A8B0EACB18}
[INFO ] 2022-04-05T22:33:23,468Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000011, flow-id=65f696a2-11d7-4721-96b1-f49064f2ff0c, invocation_id=135e5729-40b3-4148-84f4-3f4378bbad2a, invocation_timestamp=2022-04-05T22:33:23.323Z, origin=O=Mock Company 1, L=London, C=GB, session_id=135e5729-40b3-4148-84f4-3f4378bbad2a, session_timestamp=2022-04-05T22:33:23.323Z, thread-id=945, tx_id=237BFA518D2D800164AD625CB682FB0392C6F1470F4CD9504BE525A8B0EACB18}
[INFO ] 2022-04-05T22:33:23,477Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=1f54de8e-8586-4ff5-a475-10c9d1315d48, invocation_id=bbc24c87-4320-4cf6-8897-da56a9f07f70, invocation_timestamp=2022-04-05T22:33:23.226Z, origin=Only For Testing, session_id=bbc24c87-4320-4cf6-8897-da56a9f07f70, session_timestamp=2022-04-05T22:33:23.226Z, thread-id=945, tx_id=237BFA518D2D800164AD625CB682FB0392C6F1470F4CD9504BE525A8B0EACB18}
[INFO ] 2022-04-05T22:33:23,477Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=1f54de8e-8586-4ff5-a475-10c9d1315d48, invocation_id=bbc24c87-4320-4cf6-8897-da56a9f07f70, invocation_timestamp=2022-04-05T22:33:23.226Z, origin=Only For Testing, session_id=bbc24c87-4320-4cf6-8897-da56a9f07f70, session_timestamp=2022-04-05T22:33:23.226Z, thread-id=945, tx_id=237BFA518D2D800164AD625CB682FB0392C6F1470F4CD9504BE525A8B0EACB18}
[INFO ] 2022-04-05T22:33:23,484Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-16) {}
[INFO ] 2022-04-05T22:33:23,493Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T22:33:23,493Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:23,494Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-17) {}
[INFO ] 2022-04-05T22:33:23,502Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T22:33:23,502Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T22:33:23,504Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-18) {}
[INFO ] 2022-04-05T22:33:23,511Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T22:33:23,511Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:31:37,996Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows ... {}
[INFO ] 2022-04-05T23:31:38,287Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2022-04-05T23:31:39,864Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2022-04-05T23:31:41,122Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2022-04-05T23:31:41,147Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2022-04-05T23:31:41,148Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2022-04-05T23:31:42,156Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2022-04-05T23:31:42,200Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2022-04-05T23:31:42,846Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2022-04-05T23:31:42,857Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2022-04-05T23:31:42,857Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2022-04-05T23:31:43,112Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2022-04-05T23:31:43,134Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2022-04-05T23:31:43,822Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2022-04-05T23:31:44,307Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2022-04-05T23:31:44,307Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2022-04-05T23:31:44,340Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2022-04-05T23:31:44,340Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2022-04-05T23:31:44,340Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2022-04-05T23:31:45,378Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2022-04-05T23:31:45,379Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2022-04-05T23:31:45,542Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2022-04-05T23:31:45,542Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2022-04-05T23:31:45,589Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2022-04-05T23:31:45,589Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2022-04-05T23:31:45,722Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2022-04-05T23:31:45,722Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2022-04-05T23:31:45,867Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-05T23:31:45,909Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2022-04-05T23:31:45,979Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2022-04-05T23:31:46,063Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2022-04-05T23:31:46,063Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2022-04-05T23:31:46,084Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2022-04-05T23:31:46,104Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2022-04-05T23:31:46,104Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2022-04-05T23:31:46,155Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-05T23:31:46,155Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2022-04-05T23:31:46,166Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-05T23:31:46,167Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2022-04-05T23:31:46,167Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-05T23:31:46,167Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2022-04-05T23:31:46,177Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2022-04-05T23:31:46,228Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2022-04-05T23:31:46,229Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2022-04-05T23:31:46,250Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2022-04-05T23:31:46,250Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2022-04-05T23:31:46,250Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2022-04-05T23:31:46,250Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2022-04-05T23:31:46,250Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2022-04-05T23:31:46,250Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-05T23:31:46,251Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2022-04-05T23:31:46,263Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-05T23:31:46,263Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2022-04-05T23:31:46,287Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2022-04-05T23:31:46,318Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2022-04-05T23:31:46,318Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2022-04-05T23:31:46,318Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2022-04-05T23:31:46,372Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2022-04-05T23:31:46,372Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2022-04-05T23:31:46,372Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-05T23:31:46,372Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2022-04-05T23:31:46,372Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-05T23:31:46,372Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2022-04-05T23:31:46,372Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-05T23:31:46,373Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2022-04-05T23:31:46,373Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2022-04-05T23:31:46,394Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2022-04-05T23:31:46,394Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2022-04-05T23:31:46,404Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2022-04-05T23:31:46,404Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2022-04-05T23:31:46,404Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2022-04-05T23:31:46,404Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2022-04-05T23:31:46,404Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2022-04-05T23:31:46,404Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2022-04-05T23:31:46,404Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2022-04-05T23:31:46,404Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2022-04-05T23:31:46,404Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2022-04-05T23:31:46,405Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-05T23:31:46,405Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2022-04-05T23:31:46,417Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-05T23:31:46,468Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2022-04-05T23:31:46,468Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2022-04-05T23:31:46,468Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2022-04-05T23:31:46,471Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2022-04-05T23:31:46,480Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/.gradle {}
[INFO ] 2022-04-05T23:31:46,480Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2022-04-05T23:31:46,528Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2022-04-05T23:31:52,279Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-233136.527-E45155A5844BF033/nodes/0/cordapps] {}
[INFO ] 2022-04-05T23:31:52,290Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233136.527-E45155A5844BF033/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233136.527-E45155A5844BF033/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T23:31:52,302Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233136.527-E45155A5844BF033/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T23:31:52,417Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233136.527-E45155A5844BF033/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T23:31:53,714Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:31:54,056Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T23:31:54,152Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T23:31:54,178Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T23:31:54,183Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL31JBjShttryA6Cd453PHwfMWyoBP1rsZsGmDUJBG3xBe, alias: identity-private-key {}
[INFO ] 2022-04-05T23:31:54,347Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T23:31:54,441Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T23:31:34.191Z
      epoch=1
  } {}
[INFO ] 2022-04-05T23:32:03,251Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T23:32:03,325Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T23:32:03,331Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T23:32:06,561Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T23:32:06,884Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T23:32:06,898Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201526884), owningKey=DL31JBjShttryA6Cd453PHwfMWyoBP1rsZsGmDUJBG3xBe {}
[INFO ] 2022-04-05T23:32:06,898Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:07,119Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201526884) {}
[INFO ] 2022-04-05T23:32:07,184Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T23:32:07,214Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T23:32:07,215Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T23:32:07,246Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201526884), owningKey=DL31JBjShttryA6Cd453PHwfMWyoBP1rsZsGmDUJBG3xBe {}
[INFO ] 2022-04-05T23:32:07,247Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:07,397Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8C0CD38F72A6AEFA285E389BF65A77C5635B6A6DBC3ED2E6825E73406D64DD98 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T23:32:07,406Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2022-04-05T23:32:08,059Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201526884) {}
[INFO ] 2022-04-05T23:32:08,070Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201526884), owningKey=DL31JBjShttryA6Cd453PHwfMWyoBP1rsZsGmDUJBG3xBe {}
[INFO ] 2022-04-05T23:32:08,071Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:08,071Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201526884), owningKey=DL31JBjShttryA6Cd453PHwfMWyoBP1rsZsGmDUJBG3xBe {}
[INFO ] 2022-04-05T23:32:08,071Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:08,089Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-233136.527-E45155A5844BF033/nodes/1/cordapps] {}
[INFO ] 2022-04-05T23:32:08,089Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233136.527-E45155A5844BF033/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233136.527-E45155A5844BF033/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T23:32:08,089Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233136.527-E45155A5844BF033/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T23:32:08,104Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233136.527-E45155A5844BF033/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T23:32:08,154Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:08,157Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T23:32:08,159Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T23:32:08,212Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T23:32:08,213Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGY122YGsrkFPo8PPqVqhnH1p1RRMkPkZQFjn6d6Ytkge, alias: identity-private-key {}
[INFO ] 2022-04-05T23:32:08,224Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T23:32:08,227Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T23:31:34.191Z
      epoch=1
  } {}
[INFO ] 2022-04-05T23:32:08,950Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T23:32:08,951Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:08,951Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:09,225Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:09,230Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T23:32:09,235Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201529230), owningKey=DLGY122YGsrkFPo8PPqVqhnH1p1RRMkPkZQFjn6d6Ytkge {}
[INFO ] 2022-04-05T23:32:09,235Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:09,249Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201529230) {}
[INFO ] 2022-04-05T23:32:09,261Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T23:32:09,263Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T23:32:09,263Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T23:32:09,270Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201529230), owningKey=DLGY122YGsrkFPo8PPqVqhnH1p1RRMkPkZQFjn6d6Ytkge {}
[INFO ] 2022-04-05T23:32:09,270Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:09,304Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8C0CD38F72A6AEFA285E389BF65A77C5635B6A6DBC3ED2E6825E73406D64DD98 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T23:32:09,330Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201529230) {}
[INFO ] 2022-04-05T23:32:09,333Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201526884), owningKey=DL31JBjShttryA6Cd453PHwfMWyoBP1rsZsGmDUJBG3xBe {}
[INFO ] 2022-04-05T23:32:09,333Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:09,352Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201529230), owningKey=DLGY122YGsrkFPo8PPqVqhnH1p1RRMkPkZQFjn6d6Ytkge {}
[INFO ] 2022-04-05T23:32:09,352Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:09,365Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201529230), owningKey=DLGY122YGsrkFPo8PPqVqhnH1p1RRMkPkZQFjn6d6Ytkge {}
[INFO ] 2022-04-05T23:32:09,365Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:09,365Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201529230), owningKey=DLGY122YGsrkFPo8PPqVqhnH1p1RRMkPkZQFjn6d6Ytkge {}
[INFO ] 2022-04-05T23:32:09,365Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:09,373Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-233136.527-E45155A5844BF033/nodes/2/cordapps] {}
[INFO ] 2022-04-05T23:32:09,373Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233136.527-E45155A5844BF033/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233136.527-E45155A5844BF033/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T23:32:09,374Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233136.527-E45155A5844BF033/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T23:32:09,381Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233136.527-E45155A5844BF033/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T23:32:09,407Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:09,408Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T23:32:09,409Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T23:32:09,452Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T23:32:09,453Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL2uNPrJGZY5NiRk1qD7aeDwUQ1mC4VsYKCucgHVG4Kbve, alias: identity-private-key {}
[INFO ] 2022-04-05T23:32:09,460Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T23:32:09,463Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T23:31:34.191Z
      epoch=1
  } {}
[INFO ] 2022-04-05T23:32:09,991Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T23:32:09,993Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:09,993Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:10,280Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:10,285Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T23:32:10,288Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201530285), owningKey=DL2uNPrJGZY5NiRk1qD7aeDwUQ1mC4VsYKCucgHVG4Kbve {}
[INFO ] 2022-04-05T23:32:10,288Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:10,298Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201530285) {}
[INFO ] 2022-04-05T23:32:10,311Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T23:32:10,312Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T23:32:10,312Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T23:32:10,319Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201530285), owningKey=DL2uNPrJGZY5NiRk1qD7aeDwUQ1mC4VsYKCucgHVG4Kbve {}
[INFO ] 2022-04-05T23:32:10,319Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:10,353Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8C0CD38F72A6AEFA285E389BF65A77C5635B6A6DBC3ED2E6825E73406D64DD98 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T23:32:10,386Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201530285) {}
[INFO ] 2022-04-05T23:32:10,389Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201526884), owningKey=DL31JBjShttryA6Cd453PHwfMWyoBP1rsZsGmDUJBG3xBe {}
[INFO ] 2022-04-05T23:32:10,389Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:10,402Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201530285), owningKey=DL2uNPrJGZY5NiRk1qD7aeDwUQ1mC4VsYKCucgHVG4Kbve {}
[INFO ] 2022-04-05T23:32:10,402Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:10,415Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201529230), owningKey=DLGY122YGsrkFPo8PPqVqhnH1p1RRMkPkZQFjn6d6Ytkge {}
[INFO ] 2022-04-05T23:32:10,415Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:10,429Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201530285), owningKey=DL2uNPrJGZY5NiRk1qD7aeDwUQ1mC4VsYKCucgHVG4Kbve {}
[INFO ] 2022-04-05T23:32:10,429Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:10,444Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201530285), owningKey=DL2uNPrJGZY5NiRk1qD7aeDwUQ1mC4VsYKCucgHVG4Kbve {}
[INFO ] 2022-04-05T23:32:10,444Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:10,444Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201530285), owningKey=DL2uNPrJGZY5NiRk1qD7aeDwUQ1mC4VsYKCucgHVG4Kbve {}
[INFO ] 2022-04-05T23:32:10,444Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2022-04-05T23:32:10,801Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=dc501e90-c947-4a01-8fa4-eeb99c080675, invocation_id=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, invocation_timestamp=2022-04-05T23:32:10.508Z, origin=Only For Testing, session_id=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, session_timestamp=2022-04-05T23:32:10.508Z, thread-id=178}
[WARN ] 2022-04-05T23:32:10,801Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract net.corda.samples.example.contracts.IOUContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=dc501e90-c947-4a01-8fa4-eeb99c080675, invocation_id=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, invocation_timestamp=2022-04-05T23:32:10.508Z, origin=Only For Testing, session_id=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, session_timestamp=2022-04-05T23:32:10.508Z, thread-id=178}
[ERROR] 2022-04-05T23:32:11,070Z [Mock network] internal.Verifier. - Error validating transaction 96406E2F9D15F2363D8F00D44A7095EFF6CA095BDF151B0453558C42085F11BB. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=dc501e90-c947-4a01-8fa4-eeb99c080675, invocation_id=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, invocation_timestamp=2022-04-05T23:32:10.508Z, origin=Only For Testing, session_id=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, session_timestamp=2022-04-05T23:32:10.508Z, thread-id=178}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at net.corda.samples.example.contracts.IOUContract.lambda$verify$0(IOUContract.java:50) ~[contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.java:37) ~[contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:434) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:386) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:248) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:228) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:186) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:144) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:667) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:155) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[ERROR] 2022-04-05T23:32:11,073Z [Mock network] internal.Verifier. - Error validating transaction 96406E2F9D15F2363D8F00D44A7095EFF6CA095BDF151B0453558C42085F11BB. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=dc501e90-c947-4a01-8fa4-eeb99c080675, invocation_id=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, invocation_timestamp=2022-04-05T23:32:10.508Z, origin=Only For Testing, session_id=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, session_timestamp=2022-04-05T23:32:10.508Z, thread-id=178}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at net.corda.samples.example.contracts.IOUContract.lambda$verify$0(IOUContract.java:50) ~[contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.java:37) ~[contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:434) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:386) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:155) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[INFO ] 2022-04-05T23:32:11,073Z [Mock network] corda.flow. - Flow raised an error: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 96406E2F9D15F2363D8F00D44A7095EFF6CA095BDF151B0453558C42085F11BB. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=dc501e90-c947-4a01-8fa4-eeb99c080675, invocation_id=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, invocation_timestamp=2022-04-05T23:32:10.508Z, origin=Only For Testing, session_id=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, session_timestamp=2022-04-05T23:32:10.508Z, thread-id=178}
[INFO ] 2022-04-05T23:32:11,094Z [Mock network] statemachine.StaffedFlowHospital. - Flow [dc501e90-c947-4a01-8fa4-eeb99c080675] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, timestamp: 2022-04-05T23:32:10.508Z, entityType: Invocation, sessionId=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, timestamp: 2022-04-05T23:32:10.508Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=45DF6A96446CB2AE263C726D2E0B0D685D0A6CA873E144E24E0F85AA94D3A1E7), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=9555E1F64CF3958211F6046807773B9712ECFC0FE689C0B6BFDD348C112EED2B), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=ExampleFlow$Initiator@7342f405, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=f4c69d6a-c66a-4528-b305-520f904de643, reloadCheckpointAfterSuspendCount=null, numberOfCommits=0, lock=java.util.concurrent.Semaphore@9a08a1b[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=dc501e90-c947-4a01-8fa4-eeb99c080675, invocation_id=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, invocation_timestamp=2022-04-05T23:32:10.508Z, origin=Only For Testing, session_id=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, session_timestamp=2022-04-05T23:32:10.508Z, thread-id=178}
[INFO ] 2022-04-05T23:32:11,098Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=dc501e90-c947-4a01-8fa4-eeb99c080675, invocation_id=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, invocation_timestamp=2022-04-05T23:32:10.508Z, origin=Only For Testing, session_id=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, session_timestamp=2022-04-05T23:32:10.508Z, thread-id=178}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 96406E2F9D15F2363D8F00D44A7095EFF6CA095BDF151B0453558C42085F11BB
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:436) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:386) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:155) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at net.corda.samples.example.contracts.IOUContract.lambda$verify$0(IOUContract.java:50) ~[contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.java:37) ~[contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:434) ~[corda-core-4.8.5.jar:?]
	... 19 more
[INFO ] 2022-04-05T23:32:11,103Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=dc501e90-c947-4a01-8fa4-eeb99c080675, invocation_id=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, invocation_timestamp=2022-04-05T23:32:10.508Z, origin=Only For Testing, session_id=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, session_timestamp=2022-04-05T23:32:10.508Z, thread-id=178}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 96406E2F9D15F2363D8F00D44A7095EFF6CA095BDF151B0453558C42085F11BB
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:436) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:386) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:155) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at net.corda.samples.example.contracts.IOUContract.lambda$verify$0(IOUContract.java:50) ~[contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.java:37) ~[contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:434) ~[corda-core-4.8.5.jar:?]
	... 19 more
[WARN ] 2022-04-05T23:32:11,126Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [dc501e90-c947-4a01-8fa4-eeb99c080675] errored, dumping all transitions:

 --- Transition of flow [dc501e90-c947-4a01-8fa4-eeb99c080675] ---
  Timestamp: 2022-04-05T23:32:10.752Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[dc501e90-c947-4a01-8fa4-eeb99c080675], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, timestamp: 2022-04-05T23:32:10.508Z, entityType: Invocation, sessionId=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, timestamp: 2022-04-05T23:32:10.508Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=45DF6A96446CB2AE263C726D2E0B0D685D0A6CA873E144E24E0F85AA94D3A1E7), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=9555E1F64CF3958211F6046807773B9712ECFC0FE689C0B6BFDD348C112EED2B), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@250b5f2])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@250b5f2])
    SignalFlowHasStarted(flowId=[dc501e90-c947-4a01-8fa4-eeb99c080675])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@250b5f2]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [dc501e90-c947-4a01-8fa4-eeb99c080675] ---
  Timestamp: 2022-04-05T23:32:11.106Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 96406E2F9D15F2363D8F00D44A7095EFF6CA095BDF151B0453558C42085F11BB, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-05T23:32:10.689Z
    2022-04-05T23:32:11.091Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-5000582051567778334, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 96406E2F9D15F2363D8F00D44A7095EFF6CA095BDF151B0453558C42085F11BB)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [dc501e90-c947-4a01-8fa4-eeb99c080675] ---
  Timestamp: 2022-04-05T23:32:11.112Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [dc501e90-c947-4a01-8fa4-eeb99c080675] ---
  Timestamp: 2022-04-05T23:32:11.115Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-05T23:32:11.091Z
    2022-04-05T23:32:11.115Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=dc501e90-c947-4a01-8fa4-eeb99c080675, invocation_id=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, invocation_timestamp=2022-04-05T23:32:10.508Z, origin=Only For Testing, session_id=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, session_timestamp=2022-04-05T23:32:10.508Z, thread-id=178}
[WARN ] 2022-04-05T23:32:11,126Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [dc501e90-c947-4a01-8fa4-eeb99c080675] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=dc501e90-c947-4a01-8fa4-eeb99c080675, invocation_id=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, invocation_timestamp=2022-04-05T23:32:10.508Z, origin=Only For Testing, session_id=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, session_timestamp=2022-04-05T23:32:10.508Z, thread-id=178}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 96406E2F9D15F2363D8F00D44A7095EFF6CA095BDF151B0453558C42085F11BB
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:436) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:386) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:155) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at net.corda.samples.example.contracts.IOUContract.lambda$verify$0(IOUContract.java:50) ~[contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.java:37) ~[contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:434) ~[corda-core-4.8.5.jar:?]
	... 19 more
[WARN ] 2022-04-05T23:32:11,130Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=dc501e90-c947-4a01-8fa4-eeb99c080675, invocation_id=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, invocation_timestamp=2022-04-05T23:32:10.508Z, origin=Only For Testing, session_id=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, session_timestamp=2022-04-05T23:32:10.508Z, thread-id=178}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 96406E2F9D15F2363D8F00D44A7095EFF6CA095BDF151B0453558C42085F11BB
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:436) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:386) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:155) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at net.corda.samples.example.contracts.IOUContract.lambda$verify$0(IOUContract.java:50) ~[contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.java:37) ~[contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:434) ~[corda-core-4.8.5.jar:?]
	... 19 more
[WARN ] 2022-04-05T23:32:11,244Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [dc501e90-c947-4a01-8fa4-eeb99c080675] errored, dumping all transitions:

 --- Transition of flow [dc501e90-c947-4a01-8fa4-eeb99c080675] ---
  Timestamp: 2022-04-05T23:32:10.752Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[dc501e90-c947-4a01-8fa4-eeb99c080675], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, timestamp: 2022-04-05T23:32:10.508Z, entityType: Invocation, sessionId=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, timestamp: 2022-04-05T23:32:10.508Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=45DF6A96446CB2AE263C726D2E0B0D685D0A6CA873E144E24E0F85AA94D3A1E7), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=9555E1F64CF3958211F6046807773B9712ECFC0FE689C0B6BFDD348C112EED2B), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@250b5f2])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@250b5f2])
    SignalFlowHasStarted(flowId=[dc501e90-c947-4a01-8fa4-eeb99c080675])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@250b5f2]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [dc501e90-c947-4a01-8fa4-eeb99c080675] ---
  Timestamp: 2022-04-05T23:32:11.106Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 96406E2F9D15F2363D8F00D44A7095EFF6CA095BDF151B0453558C42085F11BB, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-05T23:32:10.689Z
    2022-04-05T23:32:11.091Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-5000582051567778334, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 96406E2F9D15F2363D8F00D44A7095EFF6CA095BDF151B0453558C42085F11BB)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [dc501e90-c947-4a01-8fa4-eeb99c080675] ---
  Timestamp: 2022-04-05T23:32:11.112Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [dc501e90-c947-4a01-8fa4-eeb99c080675] ---
  Timestamp: 2022-04-05T23:32:11.115Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-05T23:32:11.091Z
    2022-04-05T23:32:11.115Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [dc501e90-c947-4a01-8fa4-eeb99c080675] ---
  Timestamp: 2022-04-05T23:32:11.230Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 96406E2F9D15F2363D8F00D44A7095EFF6CA095BDF151B0453558C42085F11BB, errorId=-5000582051567778334)], sessions=[], senderUUID=f4c69d6a-c66a-4528-b305-520f904de643)
    CreateTransaction
    RemoveCheckpoint(id=[dc501e90-c947-4a01-8fa4-eeb99c080675], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=dc501e90-c947-4a01-8fa4-eeb99c080675)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[dc501e90-c947-4a01-8fa4-eeb99c080675], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-5000582051567778334, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 96406E2F9D15F2363D8F00D44A7095EFF6CA095BDF151B0453558C42085F11BB)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, timestamp: 2022-04-05T23:32:10.508Z, entityType: Invocation, sessionId=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, timestamp: 2022-04-05T23:32:10.508Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=45DF6A96446CB2AE263C726D2E0B0D685D0A6CA873E144E24E0F85AA94D3A1E7), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=2), flowState=net.corda.node.services.statemachine.FlowState$Finished@6aec9abe, errorState=Errored(errors=[FlowError(errorId=-5000582051567778334, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 96406E2F9D15F2363D8F00D44A7095EFF6CA095BDF151B0453558C42085F11BB)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=ExampleFlow$Initiator@7342f405, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=f4c69d6a-c66a-4528-b305-520f904de643, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@9a08a1b[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
numberOfCommits: 
    0
    2
isRemoved: 
    false
    true
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.timestamp: 
    2022-04-05T23:32:11.115Z
    2022-04-05T23:32:11.127Z
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=9555E1F64CF3958211F6046807773B9712ECFC0FE689C0B6BFDD348C112EED2B)
    net.corda.node.services.statemachine.FlowState$Finished@6aec9abe
checkpoint.checkpointState.numberOfCommits: 
    1
    2
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=dc501e90-c947-4a01-8fa4-eeb99c080675, invocation_id=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, invocation_timestamp=2022-04-05T23:32:10.508Z, origin=Only For Testing, session_id=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, session_timestamp=2022-04-05T23:32:10.508Z, thread-id=178}
[WARN ] 2022-04-05T23:32:11,244Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [dc501e90-c947-4a01-8fa4-eeb99c080675] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=dc501e90-c947-4a01-8fa4-eeb99c080675, invocation_id=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, invocation_timestamp=2022-04-05T23:32:10.508Z, origin=Only For Testing, session_id=ef54217a-d9db-4fe1-ae84-26b8d6999c0d, session_timestamp=2022-04-05T23:32:10.508Z, thread-id=178}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 96406E2F9D15F2363D8F00D44A7095EFF6CA095BDF151B0453558C42085F11BB
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:436) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:386) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:155) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at net.corda.samples.example.contracts.IOUContract.lambda$verify$0(IOUContract.java:50) ~[contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.java:37) ~[contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:434) ~[corda-core-4.8.5.jar:?]
	... 19 more
[INFO ] 2022-04-05T23:32:11,296Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2022-04-05T23:32:11,319Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T23:32:11,319Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:11,323Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2022-04-05T23:32:11,333Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T23:32:11,333Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:11,336Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2022-04-05T23:32:11,345Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T23:32:11,345Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:11,449Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-233211.352-AB6324D79F58A34A/nodes/0/cordapps] {}
[INFO ] 2022-04-05T23:32:11,449Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233211.352-AB6324D79F58A34A/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233211.352-AB6324D79F58A34A/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T23:32:11,450Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233211.352-AB6324D79F58A34A/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T23:32:11,456Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233211.352-AB6324D79F58A34A/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T23:32:11,483Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:11,484Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T23:32:11,485Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T23:32:11,489Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T23:32:11,489Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL3yCjByLVyy1w1DF4xAFJL9dAWPxCfLotJHQ8sEEpbM4g, alias: identity-private-key {}
[INFO ] 2022-04-05T23:32:11,500Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T23:32:11,508Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T23:32:11.352Z
      epoch=1
  } {}
[INFO ] 2022-04-05T23:32:12,263Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T23:32:12,264Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T23:32:12,265Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T23:32:12,430Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T23:32:12,436Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T23:32:12,439Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201532436), owningKey=DL3yCjByLVyy1w1DF4xAFJL9dAWPxCfLotJHQ8sEEpbM4g {}
[INFO ] 2022-04-05T23:32:12,439Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:12,458Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201532436) {}
[INFO ] 2022-04-05T23:32:12,469Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T23:32:12,471Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T23:32:12,471Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T23:32:12,477Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201532436), owningKey=DL3yCjByLVyy1w1DF4xAFJL9dAWPxCfLotJHQ8sEEpbM4g {}
[INFO ] 2022-04-05T23:32:12,477Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:12,512Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8C0CD38F72A6AEFA285E389BF65A77C5635B6A6DBC3ED2E6825E73406D64DD98 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T23:32:12,514Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2022-04-05T23:32:12,536Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201532436) {}
[INFO ] 2022-04-05T23:32:12,536Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201532436), owningKey=DL3yCjByLVyy1w1DF4xAFJL9dAWPxCfLotJHQ8sEEpbM4g {}
[INFO ] 2022-04-05T23:32:12,536Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:12,537Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201532436), owningKey=DL3yCjByLVyy1w1DF4xAFJL9dAWPxCfLotJHQ8sEEpbM4g {}
[INFO ] 2022-04-05T23:32:12,537Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:12,545Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-233211.352-AB6324D79F58A34A/nodes/1/cordapps] {}
[INFO ] 2022-04-05T23:32:12,546Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233211.352-AB6324D79F58A34A/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233211.352-AB6324D79F58A34A/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T23:32:12,546Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233211.352-AB6324D79F58A34A/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T23:32:12,551Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233211.352-AB6324D79F58A34A/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T23:32:12,580Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:12,581Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T23:32:12,582Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T23:32:12,630Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T23:32:12,631Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLBi4n7bFx5yEEXLDN3sYsLJT8vwy1EVnWktG1moWhko8L, alias: identity-private-key {}
[INFO ] 2022-04-05T23:32:12,640Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T23:32:12,644Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T23:32:11.352Z
      epoch=1
  } {}
[INFO ] 2022-04-05T23:32:13,160Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T23:32:13,162Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:13,162Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:13,294Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:13,299Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T23:32:13,302Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201533299), owningKey=DLBi4n7bFx5yEEXLDN3sYsLJT8vwy1EVnWktG1moWhko8L {}
[INFO ] 2022-04-05T23:32:13,302Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:13,310Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201533299) {}
[INFO ] 2022-04-05T23:32:13,319Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T23:32:13,321Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T23:32:13,321Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T23:32:13,327Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201533299), owningKey=DLBi4n7bFx5yEEXLDN3sYsLJT8vwy1EVnWktG1moWhko8L {}
[INFO ] 2022-04-05T23:32:13,327Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:13,359Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8C0CD38F72A6AEFA285E389BF65A77C5635B6A6DBC3ED2E6825E73406D64DD98 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T23:32:13,383Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201533299) {}
[INFO ] 2022-04-05T23:32:13,385Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201532436), owningKey=DL3yCjByLVyy1w1DF4xAFJL9dAWPxCfLotJHQ8sEEpbM4g {}
[INFO ] 2022-04-05T23:32:13,385Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:13,396Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201533299), owningKey=DLBi4n7bFx5yEEXLDN3sYsLJT8vwy1EVnWktG1moWhko8L {}
[INFO ] 2022-04-05T23:32:13,396Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:13,405Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201533299), owningKey=DLBi4n7bFx5yEEXLDN3sYsLJT8vwy1EVnWktG1moWhko8L {}
[INFO ] 2022-04-05T23:32:13,405Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:13,405Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201533299), owningKey=DLBi4n7bFx5yEEXLDN3sYsLJT8vwy1EVnWktG1moWhko8L {}
[INFO ] 2022-04-05T23:32:13,405Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:13,420Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-233211.352-AB6324D79F58A34A/nodes/2/cordapps] {}
[INFO ] 2022-04-05T23:32:13,420Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233211.352-AB6324D79F58A34A/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233211.352-AB6324D79F58A34A/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T23:32:13,420Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233211.352-AB6324D79F58A34A/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T23:32:13,426Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233211.352-AB6324D79F58A34A/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T23:32:13,462Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:13,465Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T23:32:13,466Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T23:32:13,519Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T23:32:13,519Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL9nU44c2huczzMiLincaDmmaXwuRzicvsYeooMrFSW27j, alias: identity-private-key {}
[INFO ] 2022-04-05T23:32:13,530Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T23:32:13,534Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T23:32:11.352Z
      epoch=1
  } {}
[INFO ] 2022-04-05T23:32:14,064Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T23:32:14,065Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:14,065Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:14,229Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:14,234Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T23:32:14,237Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201534234), owningKey=DL9nU44c2huczzMiLincaDmmaXwuRzicvsYeooMrFSW27j {}
[INFO ] 2022-04-05T23:32:14,237Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:14,246Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201534234) {}
[INFO ] 2022-04-05T23:32:14,252Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T23:32:14,253Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T23:32:14,253Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T23:32:14,258Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201534234), owningKey=DL9nU44c2huczzMiLincaDmmaXwuRzicvsYeooMrFSW27j {}
[INFO ] 2022-04-05T23:32:14,258Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:14,293Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8C0CD38F72A6AEFA285E389BF65A77C5635B6A6DBC3ED2E6825E73406D64DD98 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T23:32:14,309Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201534234) {}
[INFO ] 2022-04-05T23:32:14,311Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201532436), owningKey=DL3yCjByLVyy1w1DF4xAFJL9dAWPxCfLotJHQ8sEEpbM4g {}
[INFO ] 2022-04-05T23:32:14,311Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:14,323Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201534234), owningKey=DL9nU44c2huczzMiLincaDmmaXwuRzicvsYeooMrFSW27j {}
[INFO ] 2022-04-05T23:32:14,323Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:14,334Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201533299), owningKey=DLBi4n7bFx5yEEXLDN3sYsLJT8vwy1EVnWktG1moWhko8L {}
[INFO ] 2022-04-05T23:32:14,334Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:14,345Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201534234), owningKey=DL9nU44c2huczzMiLincaDmmaXwuRzicvsYeooMrFSW27j {}
[INFO ] 2022-04-05T23:32:14,345Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:14,355Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201534234), owningKey=DL9nU44c2huczzMiLincaDmmaXwuRzicvsYeooMrFSW27j {}
[INFO ] 2022-04-05T23:32:14,355Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:14,355Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201534234), owningKey=DL9nU44c2huczzMiLincaDmmaXwuRzicvsYeooMrFSW27j {}
[INFO ] 2022-04-05T23:32:14,355Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:14,809Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000003, flow-id=e852a152-b1af-49d6-a88e-3b082f299dd2, invocation_id=54aee76a-6ff7-4a7a-babc-d670d6110b14, invocation_timestamp=2022-04-05T23:32:14.756Z, origin=O=Mock Company 1, L=London, C=GB, session_id=54aee76a-6ff7-4a7a-babc-d670d6110b14, session_timestamp=2022-04-05T23:32:14.756Z, thread-id=328, tx_id=A68DCFFCF8422518A1ABBE58CEC4FDC231D188A7CA1FF42A082C349126BEBE0A}
[INFO ] 2022-04-05T23:32:14,865Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=e852a152-b1af-49d6-a88e-3b082f299dd2, invocation_id=54aee76a-6ff7-4a7a-babc-d670d6110b14, invocation_timestamp=2022-04-05T23:32:14.756Z, origin=O=Mock Company 1, L=London, C=GB, session_id=54aee76a-6ff7-4a7a-babc-d670d6110b14, session_timestamp=2022-04-05T23:32:14.756Z, thread-id=328, tx_id=A68DCFFCF8422518A1ABBE58CEC4FDC231D188A7CA1FF42A082C349126BEBE0A}
[INFO ] 2022-04-05T23:32:14,969Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=9e0d25e5-e61b-48fa-9f7d-b8880c356e78, invocation_id=5f487e6b-a2f4-4eb2-a8bb-ac1d4e9df62d, invocation_timestamp=2022-04-05T23:32:14.357Z, origin=Only For Testing, session_id=5f487e6b-a2f4-4eb2-a8bb-ac1d4e9df62d, session_timestamp=2022-04-05T23:32:14.357Z, thread-id=328, tx_id=A68DCFFCF8422518A1ABBE58CEC4FDC231D188A7CA1FF42A082C349126BEBE0A}
[INFO ] 2022-04-05T23:32:14,969Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=9e0d25e5-e61b-48fa-9f7d-b8880c356e78, invocation_id=5f487e6b-a2f4-4eb2-a8bb-ac1d4e9df62d, invocation_timestamp=2022-04-05T23:32:14.357Z, origin=Only For Testing, session_id=5f487e6b-a2f4-4eb2-a8bb-ac1d4e9df62d, session_timestamp=2022-04-05T23:32:14.357Z, thread-id=328, tx_id=A68DCFFCF8422518A1ABBE58CEC4FDC231D188A7CA1FF42A082C349126BEBE0A}
[INFO ] 2022-04-05T23:32:15,078Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=9e0d25e5-e61b-48fa-9f7d-b8880c356e78, invocation_id=5f487e6b-a2f4-4eb2-a8bb-ac1d4e9df62d, invocation_timestamp=2022-04-05T23:32:14.357Z, origin=Only For Testing, session_id=5f487e6b-a2f4-4eb2-a8bb-ac1d4e9df62d, session_timestamp=2022-04-05T23:32:14.357Z, thread-id=328, tx_id=A68DCFFCF8422518A1ABBE58CEC4FDC231D188A7CA1FF42A082C349126BEBE0A}
[INFO ] 2022-04-05T23:32:15,108Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000003, flow-id=e852a152-b1af-49d6-a88e-3b082f299dd2, invocation_id=54aee76a-6ff7-4a7a-babc-d670d6110b14, invocation_timestamp=2022-04-05T23:32:14.756Z, origin=O=Mock Company 1, L=London, C=GB, session_id=54aee76a-6ff7-4a7a-babc-d670d6110b14, session_timestamp=2022-04-05T23:32:14.756Z, thread-id=328, tx_id=A68DCFFCF8422518A1ABBE58CEC4FDC231D188A7CA1FF42A082C349126BEBE0A}
[INFO ] 2022-04-05T23:32:15,117Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=e852a152-b1af-49d6-a88e-3b082f299dd2, invocation_id=54aee76a-6ff7-4a7a-babc-d670d6110b14, invocation_timestamp=2022-04-05T23:32:14.756Z, origin=O=Mock Company 1, L=London, C=GB, session_id=54aee76a-6ff7-4a7a-babc-d670d6110b14, session_timestamp=2022-04-05T23:32:14.756Z, thread-id=328, tx_id=A68DCFFCF8422518A1ABBE58CEC4FDC231D188A7CA1FF42A082C349126BEBE0A}
[INFO ] 2022-04-05T23:32:15,122Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000003, flow-id=e852a152-b1af-49d6-a88e-3b082f299dd2, invocation_id=54aee76a-6ff7-4a7a-babc-d670d6110b14, invocation_timestamp=2022-04-05T23:32:14.756Z, origin=O=Mock Company 1, L=London, C=GB, session_id=54aee76a-6ff7-4a7a-babc-d670d6110b14, session_timestamp=2022-04-05T23:32:14.756Z, thread-id=328, tx_id=A68DCFFCF8422518A1ABBE58CEC4FDC231D188A7CA1FF42A082C349126BEBE0A}
[INFO ] 2022-04-05T23:32:15,132Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000003, flow-id=e852a152-b1af-49d6-a88e-3b082f299dd2, invocation_id=54aee76a-6ff7-4a7a-babc-d670d6110b14, invocation_timestamp=2022-04-05T23:32:14.756Z, origin=O=Mock Company 1, L=London, C=GB, session_id=54aee76a-6ff7-4a7a-babc-d670d6110b14, session_timestamp=2022-04-05T23:32:14.756Z, thread-id=328, tx_id=A68DCFFCF8422518A1ABBE58CEC4FDC231D188A7CA1FF42A082C349126BEBE0A}
[INFO ] 2022-04-05T23:32:15,156Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=9e0d25e5-e61b-48fa-9f7d-b8880c356e78, invocation_id=5f487e6b-a2f4-4eb2-a8bb-ac1d4e9df62d, invocation_timestamp=2022-04-05T23:32:14.357Z, origin=Only For Testing, session_id=5f487e6b-a2f4-4eb2-a8bb-ac1d4e9df62d, session_timestamp=2022-04-05T23:32:14.357Z, thread-id=328, tx_id=A68DCFFCF8422518A1ABBE58CEC4FDC231D188A7CA1FF42A082C349126BEBE0A}
[INFO ] 2022-04-05T23:32:15,157Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=9e0d25e5-e61b-48fa-9f7d-b8880c356e78, invocation_id=5f487e6b-a2f4-4eb2-a8bb-ac1d4e9df62d, invocation_timestamp=2022-04-05T23:32:14.357Z, origin=Only For Testing, session_id=5f487e6b-a2f4-4eb2-a8bb-ac1d4e9df62d, session_timestamp=2022-04-05T23:32:14.357Z, thread-id=328, tx_id=A68DCFFCF8422518A1ABBE58CEC4FDC231D188A7CA1FF42A082C349126BEBE0A}
[INFO ] 2022-04-05T23:32:15,168Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2022-04-05T23:32:15,179Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T23:32:15,179Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:15,180Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-5) {}
[INFO ] 2022-04-05T23:32:15,189Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T23:32:15,189Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:15,191Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-6) {}
[INFO ] 2022-04-05T23:32:15,199Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T23:32:15,199Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:15,289Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-233215.200-F36A025797B98B60/nodes/0/cordapps] {}
[INFO ] 2022-04-05T23:32:15,289Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233215.200-F36A025797B98B60/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233215.200-F36A025797B98B60/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T23:32:15,289Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233215.200-F36A025797B98B60/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T23:32:15,294Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233215.200-F36A025797B98B60/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T23:32:15,319Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:15,319Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T23:32:15,320Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T23:32:15,324Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T23:32:15,324Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL2PExTtpEcw1mkcaNnxPJ6XRSwY7i2GDur6bh2JbpXWrJ, alias: identity-private-key {}
[INFO ] 2022-04-05T23:32:15,334Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T23:32:15,340Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T23:32:15.200Z
      epoch=1
  } {}
[INFO ] 2022-04-05T23:32:15,947Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T23:32:15,949Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T23:32:15,949Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T23:32:16,107Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T23:32:16,111Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T23:32:16,114Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201536111), owningKey=DL2PExTtpEcw1mkcaNnxPJ6XRSwY7i2GDur6bh2JbpXWrJ {}
[INFO ] 2022-04-05T23:32:16,114Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:16,128Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201536111) {}
[INFO ] 2022-04-05T23:32:16,136Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T23:32:16,138Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T23:32:16,138Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T23:32:16,143Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201536111), owningKey=DL2PExTtpEcw1mkcaNnxPJ6XRSwY7i2GDur6bh2JbpXWrJ {}
[INFO ] 2022-04-05T23:32:16,143Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:16,176Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8C0CD38F72A6AEFA285E389BF65A77C5635B6A6DBC3ED2E6825E73406D64DD98 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T23:32:16,178Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2022-04-05T23:32:16,194Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201536111) {}
[INFO ] 2022-04-05T23:32:16,194Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201536111), owningKey=DL2PExTtpEcw1mkcaNnxPJ6XRSwY7i2GDur6bh2JbpXWrJ {}
[INFO ] 2022-04-05T23:32:16,194Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:16,194Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201536111), owningKey=DL2PExTtpEcw1mkcaNnxPJ6XRSwY7i2GDur6bh2JbpXWrJ {}
[INFO ] 2022-04-05T23:32:16,194Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:16,201Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-233215.200-F36A025797B98B60/nodes/1/cordapps] {}
[INFO ] 2022-04-05T23:32:16,202Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233215.200-F36A025797B98B60/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233215.200-F36A025797B98B60/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T23:32:16,202Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233215.200-F36A025797B98B60/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T23:32:16,207Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233215.200-F36A025797B98B60/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T23:32:16,243Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:16,245Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T23:32:16,246Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T23:32:16,287Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T23:32:16,287Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLgMQRZArL4pw31L4rghguoywGQZYTrQtcgk5BEL6jgak, alias: identity-private-key {}
[INFO ] 2022-04-05T23:32:16,294Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T23:32:16,296Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T23:32:15.200Z
      epoch=1
  } {}
[INFO ] 2022-04-05T23:32:16,746Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T23:32:16,750Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:16,751Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:16,892Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:16,896Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T23:32:16,899Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201536896), owningKey=DLgMQRZArL4pw31L4rghguoywGQZYTrQtcgk5BEL6jgak {}
[INFO ] 2022-04-05T23:32:16,899Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:16,906Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201536896) {}
[INFO ] 2022-04-05T23:32:16,911Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T23:32:16,912Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T23:32:16,912Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T23:32:16,917Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201536896), owningKey=DLgMQRZArL4pw31L4rghguoywGQZYTrQtcgk5BEL6jgak {}
[INFO ] 2022-04-05T23:32:16,917Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:16,952Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8C0CD38F72A6AEFA285E389BF65A77C5635B6A6DBC3ED2E6825E73406D64DD98 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T23:32:16,968Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201536896) {}
[INFO ] 2022-04-05T23:32:16,972Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201536111), owningKey=DL2PExTtpEcw1mkcaNnxPJ6XRSwY7i2GDur6bh2JbpXWrJ {}
[INFO ] 2022-04-05T23:32:16,972Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:16,985Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201536896), owningKey=DLgMQRZArL4pw31L4rghguoywGQZYTrQtcgk5BEL6jgak {}
[INFO ] 2022-04-05T23:32:16,985Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:16,997Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201536896), owningKey=DLgMQRZArL4pw31L4rghguoywGQZYTrQtcgk5BEL6jgak {}
[INFO ] 2022-04-05T23:32:16,998Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:16,998Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201536896), owningKey=DLgMQRZArL4pw31L4rghguoywGQZYTrQtcgk5BEL6jgak {}
[INFO ] 2022-04-05T23:32:16,998Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:17,005Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-233215.200-F36A025797B98B60/nodes/2/cordapps] {}
[INFO ] 2022-04-05T23:32:17,005Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233215.200-F36A025797B98B60/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233215.200-F36A025797B98B60/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T23:32:17,005Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233215.200-F36A025797B98B60/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T23:32:17,013Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233215.200-F36A025797B98B60/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T23:32:17,040Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:17,042Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T23:32:17,045Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T23:32:17,092Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T23:32:17,092Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL4jociBzJ7Rd1D4AkBFcG8CMkh5m5CTpdLwoZoTZnQ1pN, alias: identity-private-key {}
[INFO ] 2022-04-05T23:32:17,100Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T23:32:17,103Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T23:32:15.200Z
      epoch=1
  } {}
[INFO ] 2022-04-05T23:32:17,620Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T23:32:17,622Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:17,622Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:17,767Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:17,771Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T23:32:17,777Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201537771), owningKey=DL4jociBzJ7Rd1D4AkBFcG8CMkh5m5CTpdLwoZoTZnQ1pN {}
[INFO ] 2022-04-05T23:32:17,777Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:17,783Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201537771) {}
[INFO ] 2022-04-05T23:32:17,788Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T23:32:17,790Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T23:32:17,790Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T23:32:17,794Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201537771), owningKey=DL4jociBzJ7Rd1D4AkBFcG8CMkh5m5CTpdLwoZoTZnQ1pN {}
[INFO ] 2022-04-05T23:32:17,794Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:17,824Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8C0CD38F72A6AEFA285E389BF65A77C5635B6A6DBC3ED2E6825E73406D64DD98 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T23:32:17,837Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201537771) {}
[INFO ] 2022-04-05T23:32:17,838Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201536111), owningKey=DL2PExTtpEcw1mkcaNnxPJ6XRSwY7i2GDur6bh2JbpXWrJ {}
[INFO ] 2022-04-05T23:32:17,838Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:17,847Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201537771), owningKey=DL4jociBzJ7Rd1D4AkBFcG8CMkh5m5CTpdLwoZoTZnQ1pN {}
[INFO ] 2022-04-05T23:32:17,847Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:17,857Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201536896), owningKey=DLgMQRZArL4pw31L4rghguoywGQZYTrQtcgk5BEL6jgak {}
[INFO ] 2022-04-05T23:32:17,857Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:17,866Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201537771), owningKey=DL4jociBzJ7Rd1D4AkBFcG8CMkh5m5CTpdLwoZoTZnQ1pN {}
[INFO ] 2022-04-05T23:32:17,866Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:17,875Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201537771), owningKey=DL4jociBzJ7Rd1D4AkBFcG8CMkh5m5CTpdLwoZoTZnQ1pN {}
[INFO ] 2022-04-05T23:32:17,875Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:17,875Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201537771), owningKey=DL4jociBzJ7Rd1D4AkBFcG8CMkh5m5CTpdLwoZoTZnQ1pN {}
[INFO ] 2022-04-05T23:32:17,875Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:18,001Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=97ac9816-e853-4d1e-85db-021f1ea87cbf, invocation_id=2cd6242d-1412-4180-8f28-a7bca61dccfa, invocation_timestamp=2022-04-05T23:32:17.981Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2cd6242d-1412-4180-8f28-a7bca61dccfa, session_timestamp=2022-04-05T23:32:17.981Z, thread-id=482, tx_id=03C15847B235FFE0004BBC60F92C1C778AE7FA769F70296F8B751CDB9BD5C4F2}
[INFO ] 2022-04-05T23:32:18,013Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=97ac9816-e853-4d1e-85db-021f1ea87cbf, invocation_id=2cd6242d-1412-4180-8f28-a7bca61dccfa, invocation_timestamp=2022-04-05T23:32:17.981Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2cd6242d-1412-4180-8f28-a7bca61dccfa, session_timestamp=2022-04-05T23:32:17.981Z, thread-id=482, tx_id=03C15847B235FFE0004BBC60F92C1C778AE7FA769F70296F8B751CDB9BD5C4F2}
[INFO ] 2022-04-05T23:32:18,113Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=c03d61e7-fc77-4960-9487-7868ab53111e, invocation_id=dd77a790-f642-41ee-8121-685d88e8cf5b, invocation_timestamp=2022-04-05T23:32:17.878Z, origin=Only For Testing, session_id=dd77a790-f642-41ee-8121-685d88e8cf5b, session_timestamp=2022-04-05T23:32:17.878Z, thread-id=482, tx_id=03C15847B235FFE0004BBC60F92C1C778AE7FA769F70296F8B751CDB9BD5C4F2}
[INFO ] 2022-04-05T23:32:18,113Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=c03d61e7-fc77-4960-9487-7868ab53111e, invocation_id=dd77a790-f642-41ee-8121-685d88e8cf5b, invocation_timestamp=2022-04-05T23:32:17.878Z, origin=Only For Testing, session_id=dd77a790-f642-41ee-8121-685d88e8cf5b, session_timestamp=2022-04-05T23:32:17.878Z, thread-id=482, tx_id=03C15847B235FFE0004BBC60F92C1C778AE7FA769F70296F8B751CDB9BD5C4F2}
[INFO ] 2022-04-05T23:32:18,139Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=c03d61e7-fc77-4960-9487-7868ab53111e, invocation_id=dd77a790-f642-41ee-8121-685d88e8cf5b, invocation_timestamp=2022-04-05T23:32:17.878Z, origin=Only For Testing, session_id=dd77a790-f642-41ee-8121-685d88e8cf5b, session_timestamp=2022-04-05T23:32:17.878Z, thread-id=482, tx_id=03C15847B235FFE0004BBC60F92C1C778AE7FA769F70296F8B751CDB9BD5C4F2}
[INFO ] 2022-04-05T23:32:18,155Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=97ac9816-e853-4d1e-85db-021f1ea87cbf, invocation_id=2cd6242d-1412-4180-8f28-a7bca61dccfa, invocation_timestamp=2022-04-05T23:32:17.981Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2cd6242d-1412-4180-8f28-a7bca61dccfa, session_timestamp=2022-04-05T23:32:17.981Z, thread-id=482, tx_id=03C15847B235FFE0004BBC60F92C1C778AE7FA769F70296F8B751CDB9BD5C4F2}
[INFO ] 2022-04-05T23:32:18,163Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=97ac9816-e853-4d1e-85db-021f1ea87cbf, invocation_id=2cd6242d-1412-4180-8f28-a7bca61dccfa, invocation_timestamp=2022-04-05T23:32:17.981Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2cd6242d-1412-4180-8f28-a7bca61dccfa, session_timestamp=2022-04-05T23:32:17.981Z, thread-id=482, tx_id=03C15847B235FFE0004BBC60F92C1C778AE7FA769F70296F8B751CDB9BD5C4F2}
[INFO ] 2022-04-05T23:32:18,168Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=97ac9816-e853-4d1e-85db-021f1ea87cbf, invocation_id=2cd6242d-1412-4180-8f28-a7bca61dccfa, invocation_timestamp=2022-04-05T23:32:17.981Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2cd6242d-1412-4180-8f28-a7bca61dccfa, session_timestamp=2022-04-05T23:32:17.981Z, thread-id=482, tx_id=03C15847B235FFE0004BBC60F92C1C778AE7FA769F70296F8B751CDB9BD5C4F2}
[INFO ] 2022-04-05T23:32:18,177Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=97ac9816-e853-4d1e-85db-021f1ea87cbf, invocation_id=2cd6242d-1412-4180-8f28-a7bca61dccfa, invocation_timestamp=2022-04-05T23:32:17.981Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2cd6242d-1412-4180-8f28-a7bca61dccfa, session_timestamp=2022-04-05T23:32:17.981Z, thread-id=482, tx_id=03C15847B235FFE0004BBC60F92C1C778AE7FA769F70296F8B751CDB9BD5C4F2}
[INFO ] 2022-04-05T23:32:18,189Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=c03d61e7-fc77-4960-9487-7868ab53111e, invocation_id=dd77a790-f642-41ee-8121-685d88e8cf5b, invocation_timestamp=2022-04-05T23:32:17.878Z, origin=Only For Testing, session_id=dd77a790-f642-41ee-8121-685d88e8cf5b, session_timestamp=2022-04-05T23:32:17.878Z, thread-id=482, tx_id=03C15847B235FFE0004BBC60F92C1C778AE7FA769F70296F8B751CDB9BD5C4F2}
[INFO ] 2022-04-05T23:32:18,189Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=c03d61e7-fc77-4960-9487-7868ab53111e, invocation_id=dd77a790-f642-41ee-8121-685d88e8cf5b, invocation_timestamp=2022-04-05T23:32:17.878Z, origin=Only For Testing, session_id=dd77a790-f642-41ee-8121-685d88e8cf5b, session_timestamp=2022-04-05T23:32:17.878Z, thread-id=482, tx_id=03C15847B235FFE0004BBC60F92C1C778AE7FA769F70296F8B751CDB9BD5C4F2}
[INFO ] 2022-04-05T23:32:18,200Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-7) {}
[INFO ] 2022-04-05T23:32:18,208Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T23:32:18,208Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:18,209Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-8) {}
[INFO ] 2022-04-05T23:32:18,216Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T23:32:18,216Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:18,219Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-9) {}
[INFO ] 2022-04-05T23:32:18,226Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T23:32:18,226Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:18,317Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-233218.228-3A44257BE0A57C5B/nodes/0/cordapps] {}
[INFO ] 2022-04-05T23:32:18,317Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233218.228-3A44257BE0A57C5B/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233218.228-3A44257BE0A57C5B/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T23:32:18,318Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233218.228-3A44257BE0A57C5B/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T23:32:18,324Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233218.228-3A44257BE0A57C5B/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T23:32:18,350Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:18,352Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T23:32:18,353Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T23:32:18,356Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T23:32:18,356Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL5qYhaPi4cBPdmX5jGCtDyAnmQiHg35Vj3SxDeQyD6fkk, alias: identity-private-key {}
[INFO ] 2022-04-05T23:32:18,366Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T23:32:18,372Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T23:32:18.228Z
      epoch=1
  } {}
[INFO ] 2022-04-05T23:32:19,186Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T23:32:19,195Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T23:32:19,195Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T23:32:19,334Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T23:32:19,339Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T23:32:19,341Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201539339), owningKey=DL5qYhaPi4cBPdmX5jGCtDyAnmQiHg35Vj3SxDeQyD6fkk {}
[INFO ] 2022-04-05T23:32:19,341Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:19,355Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201539339) {}
[INFO ] 2022-04-05T23:32:19,363Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T23:32:19,364Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T23:32:19,364Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T23:32:19,375Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201539339), owningKey=DL5qYhaPi4cBPdmX5jGCtDyAnmQiHg35Vj3SxDeQyD6fkk {}
[INFO ] 2022-04-05T23:32:19,375Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:19,409Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8C0CD38F72A6AEFA285E389BF65A77C5635B6A6DBC3ED2E6825E73406D64DD98 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T23:32:19,412Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2022-04-05T23:32:19,425Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201539339) {}
[INFO ] 2022-04-05T23:32:19,425Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201539339), owningKey=DL5qYhaPi4cBPdmX5jGCtDyAnmQiHg35Vj3SxDeQyD6fkk {}
[INFO ] 2022-04-05T23:32:19,425Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:19,426Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201539339), owningKey=DL5qYhaPi4cBPdmX5jGCtDyAnmQiHg35Vj3SxDeQyD6fkk {}
[INFO ] 2022-04-05T23:32:19,426Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:19,432Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-233218.228-3A44257BE0A57C5B/nodes/1/cordapps] {}
[INFO ] 2022-04-05T23:32:19,432Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233218.228-3A44257BE0A57C5B/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233218.228-3A44257BE0A57C5B/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T23:32:19,433Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233218.228-3A44257BE0A57C5B/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T23:32:19,438Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233218.228-3A44257BE0A57C5B/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T23:32:19,457Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:19,459Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T23:32:19,461Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T23:32:19,499Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T23:32:19,499Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL5WRPp4j5b14ZjcG1pey9geKKhTtoefKdufGsjP28qGmv, alias: identity-private-key {}
[INFO ] 2022-04-05T23:32:19,507Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T23:32:19,509Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T23:32:18.228Z
      epoch=1
  } {}
[INFO ] 2022-04-05T23:32:19,909Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T23:32:19,911Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:19,911Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:20,010Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:20,014Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T23:32:20,017Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201540014), owningKey=DL5WRPp4j5b14ZjcG1pey9geKKhTtoefKdufGsjP28qGmv {}
[INFO ] 2022-04-05T23:32:20,017Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:20,022Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201540014) {}
[INFO ] 2022-04-05T23:32:20,026Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T23:32:20,026Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T23:32:20,026Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T23:32:20,032Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201540014), owningKey=DL5WRPp4j5b14ZjcG1pey9geKKhTtoefKdufGsjP28qGmv {}
[INFO ] 2022-04-05T23:32:20,032Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:20,060Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8C0CD38F72A6AEFA285E389BF65A77C5635B6A6DBC3ED2E6825E73406D64DD98 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T23:32:20,078Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201540014) {}
[INFO ] 2022-04-05T23:32:20,079Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201539339), owningKey=DL5qYhaPi4cBPdmX5jGCtDyAnmQiHg35Vj3SxDeQyD6fkk {}
[INFO ] 2022-04-05T23:32:20,079Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:20,093Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201540014), owningKey=DL5WRPp4j5b14ZjcG1pey9geKKhTtoefKdufGsjP28qGmv {}
[INFO ] 2022-04-05T23:32:20,093Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:20,101Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201540014), owningKey=DL5WRPp4j5b14ZjcG1pey9geKKhTtoefKdufGsjP28qGmv {}
[INFO ] 2022-04-05T23:32:20,101Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:20,101Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201540014), owningKey=DL5WRPp4j5b14ZjcG1pey9geKKhTtoefKdufGsjP28qGmv {}
[INFO ] 2022-04-05T23:32:20,101Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:20,109Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-233218.228-3A44257BE0A57C5B/nodes/2/cordapps] {}
[INFO ] 2022-04-05T23:32:20,110Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233218.228-3A44257BE0A57C5B/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233218.228-3A44257BE0A57C5B/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T23:32:20,110Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233218.228-3A44257BE0A57C5B/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T23:32:20,116Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233218.228-3A44257BE0A57C5B/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T23:32:20,156Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:20,157Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T23:32:20,159Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T23:32:20,207Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T23:32:20,207Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL9XBn6Yx8RABnvMpQN9opPqh2QR91SxPEkLKYgC7zTCFv, alias: identity-private-key {}
[INFO ] 2022-04-05T23:32:20,213Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T23:32:20,215Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T23:32:18.228Z
      epoch=1
  } {}
[INFO ] 2022-04-05T23:32:20,635Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T23:32:20,636Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:20,636Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:20,753Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:20,757Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T23:32:20,760Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201540757), owningKey=DL9XBn6Yx8RABnvMpQN9opPqh2QR91SxPEkLKYgC7zTCFv {}
[INFO ] 2022-04-05T23:32:20,760Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:20,767Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201540757) {}
[INFO ] 2022-04-05T23:32:20,772Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T23:32:20,773Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T23:32:20,773Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T23:32:20,787Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201540757), owningKey=DL9XBn6Yx8RABnvMpQN9opPqh2QR91SxPEkLKYgC7zTCFv {}
[INFO ] 2022-04-05T23:32:20,787Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:20,813Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8C0CD38F72A6AEFA285E389BF65A77C5635B6A6DBC3ED2E6825E73406D64DD98 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T23:32:20,827Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201540757) {}
[INFO ] 2022-04-05T23:32:20,829Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201539339), owningKey=DL5qYhaPi4cBPdmX5jGCtDyAnmQiHg35Vj3SxDeQyD6fkk {}
[INFO ] 2022-04-05T23:32:20,829Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:20,837Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201540757), owningKey=DL9XBn6Yx8RABnvMpQN9opPqh2QR91SxPEkLKYgC7zTCFv {}
[INFO ] 2022-04-05T23:32:20,837Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:20,846Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201540014), owningKey=DL5WRPp4j5b14ZjcG1pey9geKKhTtoefKdufGsjP28qGmv {}
[INFO ] 2022-04-05T23:32:20,846Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:20,853Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201540757), owningKey=DL9XBn6Yx8RABnvMpQN9opPqh2QR91SxPEkLKYgC7zTCFv {}
[INFO ] 2022-04-05T23:32:20,853Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:20,860Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201540757), owningKey=DL9XBn6Yx8RABnvMpQN9opPqh2QR91SxPEkLKYgC7zTCFv {}
[INFO ] 2022-04-05T23:32:20,860Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:20,860Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201540757), owningKey=DL9XBn6Yx8RABnvMpQN9opPqh2QR91SxPEkLKYgC7zTCFv {}
[INFO ] 2022-04-05T23:32:20,860Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:20,968Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=d84718b6-db43-4a17-8bde-eb0f664d0daa, invocation_id=bcf3082d-da2e-48f3-a6b5-23c6386666fe, invocation_timestamp=2022-04-05T23:32:20.948Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bcf3082d-da2e-48f3-a6b5-23c6386666fe, session_timestamp=2022-04-05T23:32:20.948Z, thread-id=636, tx_id=41B13766D7FA8ACA01BE1EA153493C363ABD2CCEBE55E6EBF5F3ABE7F3D79611}
[INFO ] 2022-04-05T23:32:20,980Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=d84718b6-db43-4a17-8bde-eb0f664d0daa, invocation_id=bcf3082d-da2e-48f3-a6b5-23c6386666fe, invocation_timestamp=2022-04-05T23:32:20.948Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bcf3082d-da2e-48f3-a6b5-23c6386666fe, session_timestamp=2022-04-05T23:32:20.948Z, thread-id=636, tx_id=41B13766D7FA8ACA01BE1EA153493C363ABD2CCEBE55E6EBF5F3ABE7F3D79611}
[INFO ] 2022-04-05T23:32:21,119Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=a060e85d-3c78-406b-bebd-2c3917fa8de0, invocation_id=00bff8e8-08c7-415a-804e-18ec03d52733, invocation_timestamp=2022-04-05T23:32:20.861Z, origin=Only For Testing, session_id=00bff8e8-08c7-415a-804e-18ec03d52733, session_timestamp=2022-04-05T23:32:20.861Z, thread-id=636, tx_id=41B13766D7FA8ACA01BE1EA153493C363ABD2CCEBE55E6EBF5F3ABE7F3D79611}
[INFO ] 2022-04-05T23:32:21,119Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=a060e85d-3c78-406b-bebd-2c3917fa8de0, invocation_id=00bff8e8-08c7-415a-804e-18ec03d52733, invocation_timestamp=2022-04-05T23:32:20.861Z, origin=Only For Testing, session_id=00bff8e8-08c7-415a-804e-18ec03d52733, session_timestamp=2022-04-05T23:32:20.861Z, thread-id=636, tx_id=41B13766D7FA8ACA01BE1EA153493C363ABD2CCEBE55E6EBF5F3ABE7F3D79611}
[INFO ] 2022-04-05T23:32:21,140Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=a060e85d-3c78-406b-bebd-2c3917fa8de0, invocation_id=00bff8e8-08c7-415a-804e-18ec03d52733, invocation_timestamp=2022-04-05T23:32:20.861Z, origin=Only For Testing, session_id=00bff8e8-08c7-415a-804e-18ec03d52733, session_timestamp=2022-04-05T23:32:20.861Z, thread-id=636, tx_id=41B13766D7FA8ACA01BE1EA153493C363ABD2CCEBE55E6EBF5F3ABE7F3D79611}
[INFO ] 2022-04-05T23:32:21,154Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=d84718b6-db43-4a17-8bde-eb0f664d0daa, invocation_id=bcf3082d-da2e-48f3-a6b5-23c6386666fe, invocation_timestamp=2022-04-05T23:32:20.948Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bcf3082d-da2e-48f3-a6b5-23c6386666fe, session_timestamp=2022-04-05T23:32:20.948Z, thread-id=636, tx_id=41B13766D7FA8ACA01BE1EA153493C363ABD2CCEBE55E6EBF5F3ABE7F3D79611}
[INFO ] 2022-04-05T23:32:21,162Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=d84718b6-db43-4a17-8bde-eb0f664d0daa, invocation_id=bcf3082d-da2e-48f3-a6b5-23c6386666fe, invocation_timestamp=2022-04-05T23:32:20.948Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bcf3082d-da2e-48f3-a6b5-23c6386666fe, session_timestamp=2022-04-05T23:32:20.948Z, thread-id=636, tx_id=41B13766D7FA8ACA01BE1EA153493C363ABD2CCEBE55E6EBF5F3ABE7F3D79611}
[INFO ] 2022-04-05T23:32:21,168Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=d84718b6-db43-4a17-8bde-eb0f664d0daa, invocation_id=bcf3082d-da2e-48f3-a6b5-23c6386666fe, invocation_timestamp=2022-04-05T23:32:20.948Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bcf3082d-da2e-48f3-a6b5-23c6386666fe, session_timestamp=2022-04-05T23:32:20.948Z, thread-id=636, tx_id=41B13766D7FA8ACA01BE1EA153493C363ABD2CCEBE55E6EBF5F3ABE7F3D79611}
[INFO ] 2022-04-05T23:32:21,177Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=d84718b6-db43-4a17-8bde-eb0f664d0daa, invocation_id=bcf3082d-da2e-48f3-a6b5-23c6386666fe, invocation_timestamp=2022-04-05T23:32:20.948Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bcf3082d-da2e-48f3-a6b5-23c6386666fe, session_timestamp=2022-04-05T23:32:20.948Z, thread-id=636, tx_id=41B13766D7FA8ACA01BE1EA153493C363ABD2CCEBE55E6EBF5F3ABE7F3D79611}
[INFO ] 2022-04-05T23:32:21,187Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=a060e85d-3c78-406b-bebd-2c3917fa8de0, invocation_id=00bff8e8-08c7-415a-804e-18ec03d52733, invocation_timestamp=2022-04-05T23:32:20.861Z, origin=Only For Testing, session_id=00bff8e8-08c7-415a-804e-18ec03d52733, session_timestamp=2022-04-05T23:32:20.861Z, thread-id=636, tx_id=41B13766D7FA8ACA01BE1EA153493C363ABD2CCEBE55E6EBF5F3ABE7F3D79611}
[INFO ] 2022-04-05T23:32:21,187Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=a060e85d-3c78-406b-bebd-2c3917fa8de0, invocation_id=00bff8e8-08c7-415a-804e-18ec03d52733, invocation_timestamp=2022-04-05T23:32:20.861Z, origin=Only For Testing, session_id=00bff8e8-08c7-415a-804e-18ec03d52733, session_timestamp=2022-04-05T23:32:20.861Z, thread-id=636, tx_id=41B13766D7FA8ACA01BE1EA153493C363ABD2CCEBE55E6EBF5F3ABE7F3D79611}
[INFO ] 2022-04-05T23:32:21,200Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-10) {}
[INFO ] 2022-04-05T23:32:21,209Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T23:32:21,209Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:21,210Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-11) {}
[INFO ] 2022-04-05T23:32:21,217Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T23:32:21,217Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:21,218Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-12) {}
[INFO ] 2022-04-05T23:32:21,226Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T23:32:21,226Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:21,300Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-233221.227-454DBB794B4A4668/nodes/0/cordapps] {}
[INFO ] 2022-04-05T23:32:21,300Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233221.227-454DBB794B4A4668/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233221.227-454DBB794B4A4668/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T23:32:21,300Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233221.227-454DBB794B4A4668/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T23:32:21,305Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233221.227-454DBB794B4A4668/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T23:32:21,325Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:21,327Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T23:32:21,328Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T23:32:21,331Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T23:32:21,331Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL4LMVgzb2nCkRKQ4zDATvstuS13m6yJznAApykC5qpbSJ, alias: identity-private-key {}
[INFO ] 2022-04-05T23:32:21,342Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T23:32:21,348Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T23:32:21.227Z
      epoch=1
  } {}
[INFO ] 2022-04-05T23:32:21,853Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T23:32:21,853Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T23:32:21,854Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T23:32:21,988Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T23:32:21,992Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T23:32:21,994Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201541992), owningKey=DL4LMVgzb2nCkRKQ4zDATvstuS13m6yJznAApykC5qpbSJ {}
[INFO ] 2022-04-05T23:32:21,994Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:22,005Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201541992) {}
[INFO ] 2022-04-05T23:32:22,012Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T23:32:22,013Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T23:32:22,013Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T23:32:22,018Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201541992), owningKey=DL4LMVgzb2nCkRKQ4zDATvstuS13m6yJznAApykC5qpbSJ {}
[INFO ] 2022-04-05T23:32:22,018Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:22,046Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8C0CD38F72A6AEFA285E389BF65A77C5635B6A6DBC3ED2E6825E73406D64DD98 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T23:32:22,049Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2022-04-05T23:32:22,063Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201541992) {}
[INFO ] 2022-04-05T23:32:22,063Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201541992), owningKey=DL4LMVgzb2nCkRKQ4zDATvstuS13m6yJznAApykC5qpbSJ {}
[INFO ] 2022-04-05T23:32:22,063Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:22,064Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201541992), owningKey=DL4LMVgzb2nCkRKQ4zDATvstuS13m6yJznAApykC5qpbSJ {}
[INFO ] 2022-04-05T23:32:22,064Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:22,073Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-233221.227-454DBB794B4A4668/nodes/1/cordapps] {}
[INFO ] 2022-04-05T23:32:22,073Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233221.227-454DBB794B4A4668/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233221.227-454DBB794B4A4668/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T23:32:22,073Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233221.227-454DBB794B4A4668/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T23:32:22,080Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233221.227-454DBB794B4A4668/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T23:32:22,106Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:22,107Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T23:32:22,108Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T23:32:22,151Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T23:32:22,151Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLDwQQ7iCBL1yRwzKcoKjP98CxL5Q1b3K8i6Q52dhNtrsK, alias: identity-private-key {}
[INFO ] 2022-04-05T23:32:22,160Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T23:32:22,162Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T23:32:21.227Z
      epoch=1
  } {}
[INFO ] 2022-04-05T23:32:22,899Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T23:32:22,901Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:22,901Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:23,020Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:23,024Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T23:32:23,026Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201543024), owningKey=DLDwQQ7iCBL1yRwzKcoKjP98CxL5Q1b3K8i6Q52dhNtrsK {}
[INFO ] 2022-04-05T23:32:23,026Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:23,032Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201543024) {}
[INFO ] 2022-04-05T23:32:23,036Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T23:32:23,038Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T23:32:23,038Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T23:32:23,042Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201543024), owningKey=DLDwQQ7iCBL1yRwzKcoKjP98CxL5Q1b3K8i6Q52dhNtrsK {}
[INFO ] 2022-04-05T23:32:23,042Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:23,074Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8C0CD38F72A6AEFA285E389BF65A77C5635B6A6DBC3ED2E6825E73406D64DD98 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T23:32:23,092Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201543024) {}
[INFO ] 2022-04-05T23:32:23,094Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201541992), owningKey=DL4LMVgzb2nCkRKQ4zDATvstuS13m6yJznAApykC5qpbSJ {}
[INFO ] 2022-04-05T23:32:23,094Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:23,102Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201543024), owningKey=DLDwQQ7iCBL1yRwzKcoKjP98CxL5Q1b3K8i6Q52dhNtrsK {}
[INFO ] 2022-04-05T23:32:23,102Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:23,110Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201543024), owningKey=DLDwQQ7iCBL1yRwzKcoKjP98CxL5Q1b3K8i6Q52dhNtrsK {}
[INFO ] 2022-04-05T23:32:23,110Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:23,110Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201543024), owningKey=DLDwQQ7iCBL1yRwzKcoKjP98CxL5Q1b3K8i6Q52dhNtrsK {}
[INFO ] 2022-04-05T23:32:23,110Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:23,118Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-233221.227-454DBB794B4A4668/nodes/2/cordapps] {}
[INFO ] 2022-04-05T23:32:23,119Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233221.227-454DBB794B4A4668/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233221.227-454DBB794B4A4668/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T23:32:23,119Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233221.227-454DBB794B4A4668/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T23:32:23,124Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233221.227-454DBB794B4A4668/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T23:32:23,149Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:23,152Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T23:32:23,152Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T23:32:23,276Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T23:32:23,276Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLChfDCvtRHSe4hRsx3RqcBkZgq9vNw1Emu57x9je6wpi9, alias: identity-private-key {}
[INFO ] 2022-04-05T23:32:23,283Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T23:32:23,285Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T23:32:21.227Z
      epoch=1
  } {}
[INFO ] 2022-04-05T23:32:23,717Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T23:32:23,718Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:23,718Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:23,847Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:23,851Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T23:32:23,852Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201543851), owningKey=DLChfDCvtRHSe4hRsx3RqcBkZgq9vNw1Emu57x9je6wpi9 {}
[INFO ] 2022-04-05T23:32:23,852Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:23,857Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201543851) {}
[INFO ] 2022-04-05T23:32:23,861Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T23:32:23,862Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T23:32:23,862Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T23:32:23,873Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201543851), owningKey=DLChfDCvtRHSe4hRsx3RqcBkZgq9vNw1Emu57x9je6wpi9 {}
[INFO ] 2022-04-05T23:32:23,873Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:23,906Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8C0CD38F72A6AEFA285E389BF65A77C5635B6A6DBC3ED2E6825E73406D64DD98 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T23:32:23,919Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201543851) {}
[INFO ] 2022-04-05T23:32:23,921Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201541992), owningKey=DL4LMVgzb2nCkRKQ4zDATvstuS13m6yJznAApykC5qpbSJ {}
[INFO ] 2022-04-05T23:32:23,921Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:23,930Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201543851), owningKey=DLChfDCvtRHSe4hRsx3RqcBkZgq9vNw1Emu57x9je6wpi9 {}
[INFO ] 2022-04-05T23:32:23,930Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:23,938Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201543024), owningKey=DLDwQQ7iCBL1yRwzKcoKjP98CxL5Q1b3K8i6Q52dhNtrsK {}
[INFO ] 2022-04-05T23:32:23,938Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:23,946Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201543851), owningKey=DLChfDCvtRHSe4hRsx3RqcBkZgq9vNw1Emu57x9je6wpi9 {}
[INFO ] 2022-04-05T23:32:23,946Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:23,952Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201543851), owningKey=DLChfDCvtRHSe4hRsx3RqcBkZgq9vNw1Emu57x9je6wpi9 {}
[INFO ] 2022-04-05T23:32:23,952Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:23,952Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201543851), owningKey=DLChfDCvtRHSe4hRsx3RqcBkZgq9vNw1Emu57x9je6wpi9 {}
[INFO ] 2022-04-05T23:32:23,952Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:24,044Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=f4630845-c363-422d-ac40-d56b57a4a1f3, invocation_id=7903a8ac-3f15-457c-a870-d96b3b479a42, invocation_timestamp=2022-04-05T23:32:24.029Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7903a8ac-3f15-457c-a870-d96b3b479a42, session_timestamp=2022-04-05T23:32:24.029Z, thread-id=790, tx_id=180B2D568F2BB5BB5FE5D423AEEE3A8DBF9EDD0C6729256BC49A920A25CF0C48}
[INFO ] 2022-04-05T23:32:24,053Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=f4630845-c363-422d-ac40-d56b57a4a1f3, invocation_id=7903a8ac-3f15-457c-a870-d96b3b479a42, invocation_timestamp=2022-04-05T23:32:24.029Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7903a8ac-3f15-457c-a870-d96b3b479a42, session_timestamp=2022-04-05T23:32:24.029Z, thread-id=790, tx_id=180B2D568F2BB5BB5FE5D423AEEE3A8DBF9EDD0C6729256BC49A920A25CF0C48}
[INFO ] 2022-04-05T23:32:24,139Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=06c39619-f22c-4b60-9820-1622969c29c2, invocation_id=4aab88eb-2bbb-4245-ad86-3c1b3d8e1b46, invocation_timestamp=2022-04-05T23:32:23.955Z, origin=Only For Testing, session_id=4aab88eb-2bbb-4245-ad86-3c1b3d8e1b46, session_timestamp=2022-04-05T23:32:23.955Z, thread-id=790, tx_id=180B2D568F2BB5BB5FE5D423AEEE3A8DBF9EDD0C6729256BC49A920A25CF0C48}
[INFO ] 2022-04-05T23:32:24,139Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=06c39619-f22c-4b60-9820-1622969c29c2, invocation_id=4aab88eb-2bbb-4245-ad86-3c1b3d8e1b46, invocation_timestamp=2022-04-05T23:32:23.955Z, origin=Only For Testing, session_id=4aab88eb-2bbb-4245-ad86-3c1b3d8e1b46, session_timestamp=2022-04-05T23:32:23.955Z, thread-id=790, tx_id=180B2D568F2BB5BB5FE5D423AEEE3A8DBF9EDD0C6729256BC49A920A25CF0C48}
[INFO ] 2022-04-05T23:32:24,161Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=06c39619-f22c-4b60-9820-1622969c29c2, invocation_id=4aab88eb-2bbb-4245-ad86-3c1b3d8e1b46, invocation_timestamp=2022-04-05T23:32:23.955Z, origin=Only For Testing, session_id=4aab88eb-2bbb-4245-ad86-3c1b3d8e1b46, session_timestamp=2022-04-05T23:32:23.955Z, thread-id=790, tx_id=180B2D568F2BB5BB5FE5D423AEEE3A8DBF9EDD0C6729256BC49A920A25CF0C48}
[INFO ] 2022-04-05T23:32:24,175Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=f4630845-c363-422d-ac40-d56b57a4a1f3, invocation_id=7903a8ac-3f15-457c-a870-d96b3b479a42, invocation_timestamp=2022-04-05T23:32:24.029Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7903a8ac-3f15-457c-a870-d96b3b479a42, session_timestamp=2022-04-05T23:32:24.029Z, thread-id=790, tx_id=180B2D568F2BB5BB5FE5D423AEEE3A8DBF9EDD0C6729256BC49A920A25CF0C48}
[INFO ] 2022-04-05T23:32:24,181Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=f4630845-c363-422d-ac40-d56b57a4a1f3, invocation_id=7903a8ac-3f15-457c-a870-d96b3b479a42, invocation_timestamp=2022-04-05T23:32:24.029Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7903a8ac-3f15-457c-a870-d96b3b479a42, session_timestamp=2022-04-05T23:32:24.029Z, thread-id=790, tx_id=180B2D568F2BB5BB5FE5D423AEEE3A8DBF9EDD0C6729256BC49A920A25CF0C48}
[INFO ] 2022-04-05T23:32:24,184Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=f4630845-c363-422d-ac40-d56b57a4a1f3, invocation_id=7903a8ac-3f15-457c-a870-d96b3b479a42, invocation_timestamp=2022-04-05T23:32:24.029Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7903a8ac-3f15-457c-a870-d96b3b479a42, session_timestamp=2022-04-05T23:32:24.029Z, thread-id=790, tx_id=180B2D568F2BB5BB5FE5D423AEEE3A8DBF9EDD0C6729256BC49A920A25CF0C48}
[INFO ] 2022-04-05T23:32:24,192Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=f4630845-c363-422d-ac40-d56b57a4a1f3, invocation_id=7903a8ac-3f15-457c-a870-d96b3b479a42, invocation_timestamp=2022-04-05T23:32:24.029Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7903a8ac-3f15-457c-a870-d96b3b479a42, session_timestamp=2022-04-05T23:32:24.029Z, thread-id=790, tx_id=180B2D568F2BB5BB5FE5D423AEEE3A8DBF9EDD0C6729256BC49A920A25CF0C48}
[INFO ] 2022-04-05T23:32:24,200Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=06c39619-f22c-4b60-9820-1622969c29c2, invocation_id=4aab88eb-2bbb-4245-ad86-3c1b3d8e1b46, invocation_timestamp=2022-04-05T23:32:23.955Z, origin=Only For Testing, session_id=4aab88eb-2bbb-4245-ad86-3c1b3d8e1b46, session_timestamp=2022-04-05T23:32:23.955Z, thread-id=790, tx_id=180B2D568F2BB5BB5FE5D423AEEE3A8DBF9EDD0C6729256BC49A920A25CF0C48}
[INFO ] 2022-04-05T23:32:24,200Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=06c39619-f22c-4b60-9820-1622969c29c2, invocation_id=4aab88eb-2bbb-4245-ad86-3c1b3d8e1b46, invocation_timestamp=2022-04-05T23:32:23.955Z, origin=Only For Testing, session_id=4aab88eb-2bbb-4245-ad86-3c1b3d8e1b46, session_timestamp=2022-04-05T23:32:23.955Z, thread-id=790, tx_id=180B2D568F2BB5BB5FE5D423AEEE3A8DBF9EDD0C6729256BC49A920A25CF0C48}
[INFO ] 2022-04-05T23:32:24,255Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-13) {}
[INFO ] 2022-04-05T23:32:24,262Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T23:32:24,262Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:24,264Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-14) {}
[INFO ] 2022-04-05T23:32:24,271Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T23:32:24,271Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:24,273Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-15) {}
[INFO ] 2022-04-05T23:32:24,282Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T23:32:24,282Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:24,359Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-233224.285-7FFD3FE65E413920/nodes/0/cordapps] {}
[INFO ] 2022-04-05T23:32:24,359Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233224.285-7FFD3FE65E413920/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233224.285-7FFD3FE65E413920/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T23:32:24,359Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233224.285-7FFD3FE65E413920/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T23:32:24,370Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233224.285-7FFD3FE65E413920/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T23:32:24,392Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:24,394Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T23:32:24,395Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T23:32:24,399Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T23:32:24,399Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL9BbXwgEcCFDJnmHMNcyf6m3bVRLntUkQ1p3ei3AcUP5E, alias: identity-private-key {}
[INFO ] 2022-04-05T23:32:24,409Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T23:32:24,416Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T23:32:24.285Z
      epoch=1
  } {}
[INFO ] 2022-04-05T23:32:24,910Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T23:32:24,915Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T23:32:24,917Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T23:32:25,051Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-05T23:32:25,056Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T23:32:25,058Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201545056), owningKey=DL9BbXwgEcCFDJnmHMNcyf6m3bVRLntUkQ1p3ei3AcUP5E {}
[INFO ] 2022-04-05T23:32:25,058Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:25,073Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201545056) {}
[INFO ] 2022-04-05T23:32:25,083Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T23:32:25,093Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T23:32:25,093Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T23:32:25,099Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201545056), owningKey=DL9BbXwgEcCFDJnmHMNcyf6m3bVRLntUkQ1p3ei3AcUP5E {}
[INFO ] 2022-04-05T23:32:25,099Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:25,130Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8C0CD38F72A6AEFA285E389BF65A77C5635B6A6DBC3ED2E6825E73406D64DD98 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T23:32:25,133Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2022-04-05T23:32:25,151Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201545056) {}
[INFO ] 2022-04-05T23:32:25,155Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201545056), owningKey=DL9BbXwgEcCFDJnmHMNcyf6m3bVRLntUkQ1p3ei3AcUP5E {}
[INFO ] 2022-04-05T23:32:25,155Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:25,155Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201545056), owningKey=DL9BbXwgEcCFDJnmHMNcyf6m3bVRLntUkQ1p3ei3AcUP5E {}
[INFO ] 2022-04-05T23:32:25,155Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:25,162Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-233224.285-7FFD3FE65E413920/nodes/1/cordapps] {}
[INFO ] 2022-04-05T23:32:25,163Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233224.285-7FFD3FE65E413920/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233224.285-7FFD3FE65E413920/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T23:32:25,163Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233224.285-7FFD3FE65E413920/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T23:32:25,168Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233224.285-7FFD3FE65E413920/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T23:32:25,206Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:25,210Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T23:32:25,211Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T23:32:25,265Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T23:32:25,265Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL72mkhQisuE5yMGCGEkPQ1DhFFuVG6cPS7eGA8cxztsLK, alias: identity-private-key {}
[INFO ] 2022-04-05T23:32:25,283Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T23:32:25,285Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T23:32:24.285Z
      epoch=1
  } {}
[INFO ] 2022-04-05T23:32:25,662Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T23:32:25,663Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:25,663Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:25,748Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:25,753Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T23:32:25,755Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201545753), owningKey=DL72mkhQisuE5yMGCGEkPQ1DhFFuVG6cPS7eGA8cxztsLK {}
[INFO ] 2022-04-05T23:32:25,755Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:25,760Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201545753) {}
[INFO ] 2022-04-05T23:32:25,766Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T23:32:25,767Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T23:32:25,767Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T23:32:25,772Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201545753), owningKey=DL72mkhQisuE5yMGCGEkPQ1DhFFuVG6cPS7eGA8cxztsLK {}
[INFO ] 2022-04-05T23:32:25,772Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:25,802Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8C0CD38F72A6AEFA285E389BF65A77C5635B6A6DBC3ED2E6825E73406D64DD98 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T23:32:25,816Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201545753) {}
[INFO ] 2022-04-05T23:32:25,818Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201545056), owningKey=DL9BbXwgEcCFDJnmHMNcyf6m3bVRLntUkQ1p3ei3AcUP5E {}
[INFO ] 2022-04-05T23:32:25,818Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:25,825Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201545753), owningKey=DL72mkhQisuE5yMGCGEkPQ1DhFFuVG6cPS7eGA8cxztsLK {}
[INFO ] 2022-04-05T23:32:25,825Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:25,835Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201545753), owningKey=DL72mkhQisuE5yMGCGEkPQ1DhFFuVG6cPS7eGA8cxztsLK {}
[INFO ] 2022-04-05T23:32:25,835Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:25,835Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201545753), owningKey=DL72mkhQisuE5yMGCGEkPQ1DhFFuVG6cPS7eGA8cxztsLK {}
[INFO ] 2022-04-05T23:32:25,835Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:25,841Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220405-233224.285-7FFD3FE65E413920/nodes/2/cordapps] {}
[INFO ] 2022-04-05T23:32:25,842Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233224.285-7FFD3FE65E413920/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233224.285-7FFD3FE65E413920/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-05T23:32:25,842Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233224.285-7FFD3FE65E413920/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-05T23:32:25,845Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220405-233224.285-7FFD3FE65E413920/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-05T23:32:25,864Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:25,865Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-05T23:32:25,866Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-05T23:32:25,909Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-05T23:32:25,909Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLAmW1GGWCegR5Low8ttbeMzmvQnSAbbx9ERB2ANcsuuuk, alias: identity-private-key {}
[INFO ] 2022-04-05T23:32:25,916Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-05T23:32:25,917Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-05T23:32:24.285Z
      epoch=1
  } {}
[INFO ] 2022-04-05T23:32:26,350Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-05T23:32:26,353Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:26,353Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:26,452Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-05T23:32:26,456Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-05T23:32:26,458Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201546456), owningKey=DLAmW1GGWCegR5Low8ttbeMzmvQnSAbbx9ERB2ANcsuuuk {}
[INFO ] 2022-04-05T23:32:26,458Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:26,462Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201546456) {}
[INFO ] 2022-04-05T23:32:26,466Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-05T23:32:26,467Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-05T23:32:26,467Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-05T23:32:26,471Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201546456), owningKey=DLAmW1GGWCegR5Low8ttbeMzmvQnSAbbx9ERB2ANcsuuuk {}
[INFO ] 2022-04-05T23:32:26,471Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:26,498Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8C0CD38F72A6AEFA285E389BF65A77C5635B6A6DBC3ED2E6825E73406D64DD98 uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-05T23:32:26,511Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201546456) {}
[INFO ] 2022-04-05T23:32:26,512Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649201545056), owningKey=DL9BbXwgEcCFDJnmHMNcyf6m3bVRLntUkQ1p3ei3AcUP5E {}
[INFO ] 2022-04-05T23:32:26,512Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:26,519Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201546456), owningKey=DLAmW1GGWCegR5Low8ttbeMzmvQnSAbbx9ERB2ANcsuuuk {}
[INFO ] 2022-04-05T23:32:26,519Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:26,526Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649201545753), owningKey=DL72mkhQisuE5yMGCGEkPQ1DhFFuVG6cPS7eGA8cxztsLK {}
[INFO ] 2022-04-05T23:32:26,526Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:26,532Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201546456), owningKey=DLAmW1GGWCegR5Low8ttbeMzmvQnSAbbx9ERB2ANcsuuuk {}
[INFO ] 2022-04-05T23:32:26,532Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-05T23:32:26,538Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201546456), owningKey=DLAmW1GGWCegR5Low8ttbeMzmvQnSAbbx9ERB2ANcsuuuk {}
[INFO ] 2022-04-05T23:32:26,538Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:26,538Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649201546456), owningKey=DLAmW1GGWCegR5Low8ttbeMzmvQnSAbbx9ERB2ANcsuuuk {}
[INFO ] 2022-04-05T23:32:26,538Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-05T23:32:26,639Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=9369c9da-e199-41ce-812f-c24d13e909f5, invocation_id=fde4aa6a-ab0c-4687-a2bb-51cd1349a7d5, invocation_timestamp=2022-04-05T23:32:26.619Z, origin=O=Mock Company 1, L=London, C=GB, session_id=fde4aa6a-ab0c-4687-a2bb-51cd1349a7d5, session_timestamp=2022-04-05T23:32:26.619Z, thread-id=944, tx_id=500D4148B61505D0C0B112FA804FEF642FC150F0F94B2AC53B0BB9542C41B56A}
[INFO ] 2022-04-05T23:32:26,647Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=9369c9da-e199-41ce-812f-c24d13e909f5, invocation_id=fde4aa6a-ab0c-4687-a2bb-51cd1349a7d5, invocation_timestamp=2022-04-05T23:32:26.619Z, origin=O=Mock Company 1, L=London, C=GB, session_id=fde4aa6a-ab0c-4687-a2bb-51cd1349a7d5, session_timestamp=2022-04-05T23:32:26.619Z, thread-id=944, tx_id=500D4148B61505D0C0B112FA804FEF642FC150F0F94B2AC53B0BB9542C41B56A}
[INFO ] 2022-04-05T23:32:26,716Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=765abd25-5749-4274-a564-375a6863f1e7, invocation_id=1be30c32-79c1-4a22-ac44-b9f646341eb9, invocation_timestamp=2022-04-05T23:32:26.541Z, origin=Only For Testing, session_id=1be30c32-79c1-4a22-ac44-b9f646341eb9, session_timestamp=2022-04-05T23:32:26.541Z, thread-id=944, tx_id=500D4148B61505D0C0B112FA804FEF642FC150F0F94B2AC53B0BB9542C41B56A}
[INFO ] 2022-04-05T23:32:26,716Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=765abd25-5749-4274-a564-375a6863f1e7, invocation_id=1be30c32-79c1-4a22-ac44-b9f646341eb9, invocation_timestamp=2022-04-05T23:32:26.541Z, origin=Only For Testing, session_id=1be30c32-79c1-4a22-ac44-b9f646341eb9, session_timestamp=2022-04-05T23:32:26.541Z, thread-id=944, tx_id=500D4148B61505D0C0B112FA804FEF642FC150F0F94B2AC53B0BB9542C41B56A}
[INFO ] 2022-04-05T23:32:26,731Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=765abd25-5749-4274-a564-375a6863f1e7, invocation_id=1be30c32-79c1-4a22-ac44-b9f646341eb9, invocation_timestamp=2022-04-05T23:32:26.541Z, origin=Only For Testing, session_id=1be30c32-79c1-4a22-ac44-b9f646341eb9, session_timestamp=2022-04-05T23:32:26.541Z, thread-id=944, tx_id=500D4148B61505D0C0B112FA804FEF642FC150F0F94B2AC53B0BB9542C41B56A}
[INFO ] 2022-04-05T23:32:26,740Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=9369c9da-e199-41ce-812f-c24d13e909f5, invocation_id=fde4aa6a-ab0c-4687-a2bb-51cd1349a7d5, invocation_timestamp=2022-04-05T23:32:26.619Z, origin=O=Mock Company 1, L=London, C=GB, session_id=fde4aa6a-ab0c-4687-a2bb-51cd1349a7d5, session_timestamp=2022-04-05T23:32:26.619Z, thread-id=944, tx_id=500D4148B61505D0C0B112FA804FEF642FC150F0F94B2AC53B0BB9542C41B56A}
[INFO ] 2022-04-05T23:32:26,746Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=9369c9da-e199-41ce-812f-c24d13e909f5, invocation_id=fde4aa6a-ab0c-4687-a2bb-51cd1349a7d5, invocation_timestamp=2022-04-05T23:32:26.619Z, origin=O=Mock Company 1, L=London, C=GB, session_id=fde4aa6a-ab0c-4687-a2bb-51cd1349a7d5, session_timestamp=2022-04-05T23:32:26.619Z, thread-id=944, tx_id=500D4148B61505D0C0B112FA804FEF642FC150F0F94B2AC53B0BB9542C41B56A}
[INFO ] 2022-04-05T23:32:26,749Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000011, flow-id=9369c9da-e199-41ce-812f-c24d13e909f5, invocation_id=fde4aa6a-ab0c-4687-a2bb-51cd1349a7d5, invocation_timestamp=2022-04-05T23:32:26.619Z, origin=O=Mock Company 1, L=London, C=GB, session_id=fde4aa6a-ab0c-4687-a2bb-51cd1349a7d5, session_timestamp=2022-04-05T23:32:26.619Z, thread-id=944, tx_id=500D4148B61505D0C0B112FA804FEF642FC150F0F94B2AC53B0BB9542C41B56A}
[INFO ] 2022-04-05T23:32:26,757Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000011, flow-id=9369c9da-e199-41ce-812f-c24d13e909f5, invocation_id=fde4aa6a-ab0c-4687-a2bb-51cd1349a7d5, invocation_timestamp=2022-04-05T23:32:26.619Z, origin=O=Mock Company 1, L=London, C=GB, session_id=fde4aa6a-ab0c-4687-a2bb-51cd1349a7d5, session_timestamp=2022-04-05T23:32:26.619Z, thread-id=944, tx_id=500D4148B61505D0C0B112FA804FEF642FC150F0F94B2AC53B0BB9542C41B56A}
[INFO ] 2022-04-05T23:32:26,764Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=765abd25-5749-4274-a564-375a6863f1e7, invocation_id=1be30c32-79c1-4a22-ac44-b9f646341eb9, invocation_timestamp=2022-04-05T23:32:26.541Z, origin=Only For Testing, session_id=1be30c32-79c1-4a22-ac44-b9f646341eb9, session_timestamp=2022-04-05T23:32:26.541Z, thread-id=944, tx_id=500D4148B61505D0C0B112FA804FEF642FC150F0F94B2AC53B0BB9542C41B56A}
[INFO ] 2022-04-05T23:32:26,764Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=765abd25-5749-4274-a564-375a6863f1e7, invocation_id=1be30c32-79c1-4a22-ac44-b9f646341eb9, invocation_timestamp=2022-04-05T23:32:26.541Z, origin=Only For Testing, session_id=1be30c32-79c1-4a22-ac44-b9f646341eb9, session_timestamp=2022-04-05T23:32:26.541Z, thread-id=944, tx_id=500D4148B61505D0C0B112FA804FEF642FC150F0F94B2AC53B0BB9542C41B56A}
[INFO ] 2022-04-05T23:32:26,776Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-16) {}
[INFO ] 2022-04-05T23:32:26,797Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T23:32:26,797Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:26,798Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-17) {}
[INFO ] 2022-04-05T23:32:26,805Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T23:32:26,805Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-05T23:32:26,806Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-18) {}
[INFO ] 2022-04-05T23:32:26,816Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-05T23:32:26,816Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:31:56,165Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows ... {}
[INFO ] 2022-04-06T04:31:56,517Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2022-04-06T04:31:57,910Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2022-04-06T04:31:59,118Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2022-04-06T04:31:59,136Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2022-04-06T04:31:59,137Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2022-04-06T04:31:59,964Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2022-04-06T04:32:00,010Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2022-04-06T04:32:00,781Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2022-04-06T04:32:00,795Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2022-04-06T04:32:00,795Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2022-04-06T04:32:01,060Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2022-04-06T04:32:01,083Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2022-04-06T04:32:02,110Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2022-04-06T04:32:02,462Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2022-04-06T04:32:02,473Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2022-04-06T04:32:02,506Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2022-04-06T04:32:02,507Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2022-04-06T04:32:02,507Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2022-04-06T04:32:03,559Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2022-04-06T04:32:03,560Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2022-04-06T04:32:03,705Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2022-04-06T04:32:03,706Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2022-04-06T04:32:03,751Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2022-04-06T04:32:03,751Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2022-04-06T04:32:03,888Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2022-04-06T04:32:03,888Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2022-04-06T04:32:04,025Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-06T04:32:04,059Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2022-04-06T04:32:04,119Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2022-04-06T04:32:04,197Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2022-04-06T04:32:04,197Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2022-04-06T04:32:04,197Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2022-04-06T04:32:04,220Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2022-04-06T04:32:04,220Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2022-04-06T04:32:04,255Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-06T04:32:04,255Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2022-04-06T04:32:04,255Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-06T04:32:04,255Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2022-04-06T04:32:04,255Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-06T04:32:04,255Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2022-04-06T04:32:04,269Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2022-04-06T04:32:04,311Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2022-04-06T04:32:04,311Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2022-04-06T04:32:04,322Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2022-04-06T04:32:04,322Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2022-04-06T04:32:04,322Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2022-04-06T04:32:04,322Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2022-04-06T04:32:04,322Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2022-04-06T04:32:04,333Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-06T04:32:04,333Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2022-04-06T04:32:04,343Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-06T04:32:04,343Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2022-04-06T04:32:04,356Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2022-04-06T04:32:04,377Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2022-04-06T04:32:04,377Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2022-04-06T04:32:04,378Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2022-04-06T04:32:04,378Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2022-04-06T04:32:04,378Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2022-04-06T04:32:04,400Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-06T04:32:04,401Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2022-04-06T04:32:04,413Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-06T04:32:04,413Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2022-04-06T04:32:04,413Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-06T04:32:04,413Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2022-04-06T04:32:04,413Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2022-04-06T04:32:04,446Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2022-04-06T04:32:04,446Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2022-04-06T04:32:04,446Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2022-04-06T04:32:04,457Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2022-04-06T04:32:04,457Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2022-04-06T04:32:04,457Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2022-04-06T04:32:04,457Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2022-04-06T04:32:04,457Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2022-04-06T04:32:04,457Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2022-04-06T04:32:04,457Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2022-04-06T04:32:04,457Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2022-04-06T04:32:04,457Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-06T04:32:04,457Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2022-04-06T04:32:04,457Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-04-06T04:32:04,467Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2022-04-06T04:32:04,478Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2022-04-06T04:32:04,478Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2022-04-06T04:32:04,480Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2022-04-06T04:32:04,501Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/.gradle {}
[INFO ] 2022-04-06T04:32:04,501Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2022-04-06T04:32:04,545Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2022-04-06T04:32:10,410Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220406-043154.747-4AA518D0C3D2CC64/nodes/0/cordapps] {}
[INFO ] 2022-04-06T04:32:10,428Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043154.747-4AA518D0C3D2CC64/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043154.747-4AA518D0C3D2CC64/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-06T04:32:10,450Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043154.747-4AA518D0C3D2CC64/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-06T04:32:10,565Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043154.747-4AA518D0C3D2CC64/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-06T04:32:11,820Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:12,168Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-06T04:32:12,259Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-06T04:32:12,284Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-06T04:32:12,295Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLCKjUNdMAouWa8U7aKDXRJGD8SZphKe2DmuxJWvBpUbTf, alias: identity-private-key {}
[INFO ] 2022-04-06T04:32:12,456Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-06T04:32:12,557Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-06T04:31:52.608Z
      epoch=1
  } {}
[INFO ] 2022-04-06T04:32:19,832Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-06T04:32:19,912Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-06T04:32:19,918Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-06T04:32:22,971Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-06T04:32:23,226Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-06T04:32:23,237Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219543226), owningKey=DLCKjUNdMAouWa8U7aKDXRJGD8SZphKe2DmuxJWvBpUbTf {}
[INFO ] 2022-04-06T04:32:23,237Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:23,455Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219543226) {}
[INFO ] 2022-04-06T04:32:23,521Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-06T04:32:23,560Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-06T04:32:23,562Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-06T04:32:23,594Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219543226), owningKey=DLCKjUNdMAouWa8U7aKDXRJGD8SZphKe2DmuxJWvBpUbTf {}
[INFO ] 2022-04-06T04:32:23,594Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:23,734Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F205A04A1F0201841C3F475344FC1871245793E3B7970D264C4F47D7B1784D2A uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-06T04:32:23,743Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2022-04-06T04:32:24,299Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219543226) {}
[INFO ] 2022-04-06T04:32:24,314Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219543226), owningKey=DLCKjUNdMAouWa8U7aKDXRJGD8SZphKe2DmuxJWvBpUbTf {}
[INFO ] 2022-04-06T04:32:24,314Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:24,315Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219543226), owningKey=DLCKjUNdMAouWa8U7aKDXRJGD8SZphKe2DmuxJWvBpUbTf {}
[INFO ] 2022-04-06T04:32:24,315Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:24,329Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220406-043154.747-4AA518D0C3D2CC64/nodes/1/cordapps] {}
[INFO ] 2022-04-06T04:32:24,330Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043154.747-4AA518D0C3D2CC64/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043154.747-4AA518D0C3D2CC64/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-06T04:32:24,330Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043154.747-4AA518D0C3D2CC64/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-06T04:32:24,342Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043154.747-4AA518D0C3D2CC64/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-06T04:32:24,385Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:24,386Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-06T04:32:24,387Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-06T04:32:24,451Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-06T04:32:24,451Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLaTJignJKEnSk3Da8Bio2cwYmKzdsecVJB6Y4JVdb7hr, alias: identity-private-key {}
[INFO ] 2022-04-06T04:32:24,468Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-06T04:32:24,472Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-06T04:31:52.608Z
      epoch=1
  } {}
[INFO ] 2022-04-06T04:32:25,091Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-06T04:32:25,093Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:25,093Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:25,292Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:25,300Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-06T04:32:25,308Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219545300), owningKey=DLaTJignJKEnSk3Da8Bio2cwYmKzdsecVJB6Y4JVdb7hr {}
[INFO ] 2022-04-06T04:32:25,308Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:25,321Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219545300) {}
[INFO ] 2022-04-06T04:32:25,330Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-06T04:32:25,333Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-06T04:32:25,333Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-06T04:32:25,339Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219545300), owningKey=DLaTJignJKEnSk3Da8Bio2cwYmKzdsecVJB6Y4JVdb7hr {}
[INFO ] 2022-04-06T04:32:25,339Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:25,377Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F205A04A1F0201841C3F475344FC1871245793E3B7970D264C4F47D7B1784D2A uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-06T04:32:25,405Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219545300) {}
[INFO ] 2022-04-06T04:32:25,409Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219543226), owningKey=DLCKjUNdMAouWa8U7aKDXRJGD8SZphKe2DmuxJWvBpUbTf {}
[INFO ] 2022-04-06T04:32:25,409Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:25,427Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219545300), owningKey=DLaTJignJKEnSk3Da8Bio2cwYmKzdsecVJB6Y4JVdb7hr {}
[INFO ] 2022-04-06T04:32:25,427Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:25,441Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219545300), owningKey=DLaTJignJKEnSk3Da8Bio2cwYmKzdsecVJB6Y4JVdb7hr {}
[INFO ] 2022-04-06T04:32:25,441Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:25,442Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219545300), owningKey=DLaTJignJKEnSk3Da8Bio2cwYmKzdsecVJB6Y4JVdb7hr {}
[INFO ] 2022-04-06T04:32:25,442Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:25,451Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220406-043154.747-4AA518D0C3D2CC64/nodes/2/cordapps] {}
[INFO ] 2022-04-06T04:32:25,451Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043154.747-4AA518D0C3D2CC64/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043154.747-4AA518D0C3D2CC64/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-06T04:32:25,451Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043154.747-4AA518D0C3D2CC64/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-06T04:32:25,458Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043154.747-4AA518D0C3D2CC64/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-06T04:32:25,487Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:25,489Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-06T04:32:25,491Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-06T04:32:25,544Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-06T04:32:25,544Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLDRQpoAJh6cY2r6rUhtoQKkAKSfDy7Qu5MDdfBWGwai99, alias: identity-private-key {}
[INFO ] 2022-04-06T04:32:25,555Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-06T04:32:25,560Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-06T04:31:52.608Z
      epoch=1
  } {}
[INFO ] 2022-04-06T04:32:26,161Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-06T04:32:26,162Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:26,163Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:26,347Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:26,352Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-06T04:32:26,359Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219546352), owningKey=DLDRQpoAJh6cY2r6rUhtoQKkAKSfDy7Qu5MDdfBWGwai99 {}
[INFO ] 2022-04-06T04:32:26,359Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:26,368Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219546352) {}
[INFO ] 2022-04-06T04:32:26,378Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-06T04:32:26,381Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-06T04:32:26,381Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-06T04:32:26,391Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219546352), owningKey=DLDRQpoAJh6cY2r6rUhtoQKkAKSfDy7Qu5MDdfBWGwai99 {}
[INFO ] 2022-04-06T04:32:26,391Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:26,428Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F205A04A1F0201841C3F475344FC1871245793E3B7970D264C4F47D7B1784D2A uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-06T04:32:26,453Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219546352) {}
[INFO ] 2022-04-06T04:32:26,456Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219543226), owningKey=DLCKjUNdMAouWa8U7aKDXRJGD8SZphKe2DmuxJWvBpUbTf {}
[INFO ] 2022-04-06T04:32:26,456Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:26,477Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219546352), owningKey=DLDRQpoAJh6cY2r6rUhtoQKkAKSfDy7Qu5MDdfBWGwai99 {}
[INFO ] 2022-04-06T04:32:26,477Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:26,502Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219545300), owningKey=DLaTJignJKEnSk3Da8Bio2cwYmKzdsecVJB6Y4JVdb7hr {}
[INFO ] 2022-04-06T04:32:26,502Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:26,516Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219546352), owningKey=DLDRQpoAJh6cY2r6rUhtoQKkAKSfDy7Qu5MDdfBWGwai99 {}
[INFO ] 2022-04-06T04:32:26,516Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:26,529Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219546352), owningKey=DLDRQpoAJh6cY2r6rUhtoQKkAKSfDy7Qu5MDdfBWGwai99 {}
[INFO ] 2022-04-06T04:32:26,530Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:26,530Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219546352), owningKey=DLDRQpoAJh6cY2r6rUhtoQKkAKSfDy7Qu5MDdfBWGwai99 {}
[INFO ] 2022-04-06T04:32:26,530Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2022-04-06T04:32:26,859Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8, invocation_id=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, invocation_timestamp=2022-04-06T04:32:26.611Z, origin=Only For Testing, session_id=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, session_timestamp=2022-04-06T04:32:26.611Z, thread-id=178}
[WARN ] 2022-04-06T04:32:26,859Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract net.corda.samples.example.contracts.IOUContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8, invocation_id=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, invocation_timestamp=2022-04-06T04:32:26.611Z, origin=Only For Testing, session_id=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, session_timestamp=2022-04-06T04:32:26.611Z, thread-id=178}
[INFO ] 2022-04-06T04:32:27,542Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=b4872e09-d992-4b3b-85b2-d762e5cc71a5, invocation_id=5e0f5297-d38a-4ce0-a127-5180644720c9, invocation_timestamp=2022-04-06T04:32:27.484Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5e0f5297-d38a-4ce0-a127-5180644720c9, session_timestamp=2022-04-06T04:32:27.484Z, thread-id=178, tx_id=5D19E9D78FDB4A906A43F429F5A7FDAEA526ED5FD957C6028DCABD8E9C0F935B}
[INFO ] 2022-04-06T04:32:27,601Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=b4872e09-d992-4b3b-85b2-d762e5cc71a5, invocation_id=5e0f5297-d38a-4ce0-a127-5180644720c9, invocation_timestamp=2022-04-06T04:32:27.484Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5e0f5297-d38a-4ce0-a127-5180644720c9, session_timestamp=2022-04-06T04:32:27.484Z, thread-id=178, tx_id=5D19E9D78FDB4A906A43F429F5A7FDAEA526ED5FD957C6028DCABD8E9C0F935B}
[INFO ] 2022-04-06T04:32:27,695Z [Mock network] corda.flow. - Flow raised an error: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null. Sending it to flow hospital to be triaged. {fiber-id=10000002, flow-id=b4872e09-d992-4b3b-85b2-d762e5cc71a5, invocation_id=5e0f5297-d38a-4ce0-a127-5180644720c9, invocation_timestamp=2022-04-06T04:32:27.484Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5e0f5297-d38a-4ce0-a127-5180644720c9, session_timestamp=2022-04-06T04:32:27.484Z, thread-id=178, tx_id=5D19E9D78FDB4A906A43F429F5A7FDAEA526ED5FD957C6028DCABD8E9C0F935B}
[INFO ] 2022-04-06T04:32:27,700Z [Mock network] statemachine.StaffedFlowHospital. - Flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=5e0f5297-d38a-4ce0-a127-5180644720c9, timestamp: 2022-04-06T04:32:27.484Z, entityType: Invocation, sessionId=5e0f5297-d38a-4ce0-a127-5180644720c9, timestamp: 2022-04-06T04:32:27.484Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=6481573134519864493)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3826017921811048346), deduplicationSeed=D--3826017921811048346--7719705067965874331)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=6481573134519864493))]), frozenFiber=CEFD48A2D6EF1DB8136798ED819AB24BC67A14E192E2175E17B2FB2AC6E981C1), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=ExampleFlow$Acceptor@4fb79db9, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@748d6c6b], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=33b3cbf8-082c-47a6-b9e3-bde149f932de, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@7cdbb8f8[Permits = 0]) {fiber-id=10000002, flow-id=b4872e09-d992-4b3b-85b2-d762e5cc71a5, invocation_id=5e0f5297-d38a-4ce0-a127-5180644720c9, invocation_timestamp=2022-04-06T04:32:27.484Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5e0f5297-d38a-4ce0-a127-5180644720c9, session_timestamp=2022-04-06T04:32:27.484Z, thread-id=178, tx_id=5D19E9D78FDB4A906A43F429F5A7FDAEA526ED5FD957C6028DCABD8E9C0F935B}
[INFO ] 2022-04-06T04:32:27,704Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {fiber-id=10000002, flow-id=b4872e09-d992-4b3b-85b2-d762e5cc71a5, invocation_id=5e0f5297-d38a-4ce0-a127-5180644720c9, invocation_timestamp=2022-04-06T04:32:27.484Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5e0f5297-d38a-4ce0-a127-5180644720c9, session_timestamp=2022-04-06T04:32:27.484Z, thread-id=178, tx_id=5D19E9D78FDB4A906A43F429F5A7FDAEA526ED5FD957C6028DCABD8E9C0F935B}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[INFO ] 2022-04-06T04:32:27,712Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {fiber-id=10000002, flow-id=b4872e09-d992-4b3b-85b2-d762e5cc71a5, invocation_id=5e0f5297-d38a-4ce0-a127-5180644720c9, invocation_timestamp=2022-04-06T04:32:27.484Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5e0f5297-d38a-4ce0-a127-5180644720c9, session_timestamp=2022-04-06T04:32:27.484Z, thread-id=178, tx_id=5D19E9D78FDB4A906A43F429F5A7FDAEA526ED5FD957C6028DCABD8E9C0F935B}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[WARN ] 2022-04-06T04:32:27,745Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] errored, dumping all transitions:

 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.510Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[b4872e09-d992-4b3b-85b2-d762e5cc71a5], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=5e0f5297-d38a-4ce0-a127-5180644720c9, timestamp: 2022-04-06T04:32:27.484Z, entityType: Invocation, sessionId=5e0f5297-d38a-4ce0-a127-5180644720c9, timestamp: 2022-04-06T04:32:27.484Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=99E7E310CA49723BEDAC21D7B17329CFDC15BB76D4DCBCBB425FF5B15E65EE20), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6594b6d9])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6594b6d9])
    SignalFlowHasStarted(flowId=[b4872e09-d992-4b3b-85b2-d762e5cc71a5])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3826017921811048346), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=6481573134519864493), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--3826017921811048346--7719705067965874331-0-0), senderUUID=33b3cbf8-082c-47a6-b9e3-bde149f932de))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.485Z
    2022-04-06T04:32:27.490Z
checkpoint.checkpointState.sessions.SessionId(toLong=6481573134519864493): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3826017921811048346), deduplicationSeed=D--3826017921811048346--7719705067965874331)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6594b6d9]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.514Z
  Event: EnterSubFlow(subFlowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.490Z
    2022-04-06T04:32:27.514Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.517Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.514Z
    2022-04-06T04:32:27.517Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.536Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=6481573134519864493))]), maySkipCheckpoint=false, fiber=B0C4DC473A6C224AB3DA34A310939F48AC59B8C25CC3936C7649A5FAAD614382, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[b4872e09-d992-4b3b-85b2-d762e5cc71a5], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=5e0f5297-d38a-4ce0-a127-5180644720c9, timestamp: 2022-04-06T04:32:27.484Z, entityType: Invocation, sessionId=5e0f5297-d38a-4ce0-a127-5180644720c9, timestamp: 2022-04-06T04:32:27.484Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=6481573134519864493)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3826017921811048346), deduplicationSeed=D--3826017921811048346--7719705067965874331)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=6481573134519864493))]), frozenFiber=B0C4DC473A6C224AB3DA34A310939F48AC59B8C25CC3936C7649A5FAAD614382), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.517Z
    2022-04-06T04:32:27.532Z
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=99E7E310CA49723BEDAC21D7B17329CFDC15BB76D4DCBCBB425FF5B15E65EE20)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=6481573134519864493))]), frozenFiber=B0C4DC473A6C224AB3DA34A310939F48AC59B8C25CC3936C7649A5FAAD614382)
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.539Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.532Z
    2022-04-06T04:32:27.539Z
checkpoint.checkpointState.sessions.SessionId(toLong=6481573134519864493).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.549Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.539Z
    2022-04-06T04:32:27.549Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.559Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.549Z
    2022-04-06T04:32:27.559Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.564Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.559Z
    2022-04-06T04:32:27.564Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.566Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.564Z
    2022-04-06T04:32:27.566Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.566Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.596Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=6481573134519864493))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=5714083DC679E1A7E6F84AA9A48361ED43C713DF6814B78056447F87F38C5806, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[b4872e09-d992-4b3b-85b2-d762e5cc71a5], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=5e0f5297-d38a-4ce0-a127-5180644720c9, timestamp: 2022-04-06T04:32:27.484Z, entityType: Invocation, sessionId=5e0f5297-d38a-4ce0-a127-5180644720c9, timestamp: 2022-04-06T04:32:27.484Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=6481573134519864493)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3826017921811048346), deduplicationSeed=D--3826017921811048346--7719705067965874331)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=6481573134519864493))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=5714083DC679E1A7E6F84AA9A48361ED43C713DF6814B78056447F87F38C5806), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.566Z
    2022-04-06T04:32:27.593Z
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=6481573134519864493))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=6481573134519864493))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    B0C4DC473A6C224AB3DA34A310939F48AC59B8C25CC3936C7649A5FAAD614382
    5714083DC679E1A7E6F84AA9A48361ED43C713DF6814B78056447F87F38C5806
checkpoint.flowIoRequest: 
    Receive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.601Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3826017921811048346), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--3826017921811048346--7719705067965874331-2-0), senderUUID=33b3cbf8-082c-47a6-b9e3-bde149f932de))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.601Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.598Z
    2022-04-06T04:32:27.601Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.643Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.601Z
    2022-04-06T04:32:27.643Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.649Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=6481573134519864493))]), maySkipCheckpoint=false, fiber=CEFD48A2D6EF1DB8136798ED819AB24BC67A14E192E2175E17B2FB2AC6E981C1, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[b4872e09-d992-4b3b-85b2-d762e5cc71a5], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=5e0f5297-d38a-4ce0-a127-5180644720c9, timestamp: 2022-04-06T04:32:27.484Z, entityType: Invocation, sessionId=5e0f5297-d38a-4ce0-a127-5180644720c9, timestamp: 2022-04-06T04:32:27.484Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=6481573134519864493)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3826017921811048346), deduplicationSeed=D--3826017921811048346--7719705067965874331)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=6481573134519864493))]), frozenFiber=CEFD48A2D6EF1DB8136798ED819AB24BC67A14E192E2175E17B2FB2AC6E981C1), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.643Z
    2022-04-06T04:32:27.646Z
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=6481573134519864493))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=6481573134519864493))])
checkpoint.flowState.frozenFiber.hash: 
    5714083DC679E1A7E6F84AA9A48361ED43C713DF6814B78056447F87F38C5806
    CEFD48A2D6EF1DB8136798ED819AB24BC67A14E192E2175E17B2FB2AC6E981C1
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.649Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.685Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6481573134519864493), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@748d6c6b, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.649Z
    2022-04-06T04:32:27.685Z
checkpoint.checkpointState.sessions.SessionId(toLong=6481573134519864493).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@748d6c6b]


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.685Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=6481573134519864493).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.695Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.685Z
    2022-04-06T04:32:27.695Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.714Z
  Event: Error(exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.695Z
    2022-04-06T04:32:27.699Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=1812760361917884268, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.719Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.720Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.699Z
    2022-04-06T04:32:27.720Z
checkpoint.errorState.propagating: 
    false
    true
 {fiber-id=10000002, flow-id=b4872e09-d992-4b3b-85b2-d762e5cc71a5, invocation_id=5e0f5297-d38a-4ce0-a127-5180644720c9, invocation_timestamp=2022-04-06T04:32:27.484Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5e0f5297-d38a-4ce0-a127-5180644720c9, session_timestamp=2022-04-06T04:32:27.484Z, thread-id=178, tx_id=5D19E9D78FDB4A906A43F429F5A7FDAEA526ED5FD957C6028DCABD8E9C0F935B}
[WARN ] 2022-04-06T04:32:27,745Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] error {fiber-id=10000002, flow-id=b4872e09-d992-4b3b-85b2-d762e5cc71a5, invocation_id=5e0f5297-d38a-4ce0-a127-5180644720c9, invocation_timestamp=2022-04-06T04:32:27.484Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5e0f5297-d38a-4ce0-a127-5180644720c9, session_timestamp=2022-04-06T04:32:27.484Z, thread-id=178, tx_id=5D19E9D78FDB4A906A43F429F5A7FDAEA526ED5FD957C6028DCABD8E9C0F935B}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[WARN ] 2022-04-06T04:32:27,750Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {fiber-id=10000002, flow-id=b4872e09-d992-4b3b-85b2-d762e5cc71a5, invocation_id=5e0f5297-d38a-4ce0-a127-5180644720c9, invocation_timestamp=2022-04-06T04:32:27.484Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5e0f5297-d38a-4ce0-a127-5180644720c9, session_timestamp=2022-04-06T04:32:27.484Z, thread-id=178, tx_id=5D19E9D78FDB4A906A43F429F5A7FDAEA526ED5FD957C6028DCABD8E9C0F935B}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[WARN ] 2022-04-06T04:32:27,890Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] errored, dumping all transitions:

 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.510Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[b4872e09-d992-4b3b-85b2-d762e5cc71a5], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=5e0f5297-d38a-4ce0-a127-5180644720c9, timestamp: 2022-04-06T04:32:27.484Z, entityType: Invocation, sessionId=5e0f5297-d38a-4ce0-a127-5180644720c9, timestamp: 2022-04-06T04:32:27.484Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=99E7E310CA49723BEDAC21D7B17329CFDC15BB76D4DCBCBB425FF5B15E65EE20), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6594b6d9])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6594b6d9])
    SignalFlowHasStarted(flowId=[b4872e09-d992-4b3b-85b2-d762e5cc71a5])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3826017921811048346), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=6481573134519864493), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--3826017921811048346--7719705067965874331-0-0), senderUUID=33b3cbf8-082c-47a6-b9e3-bde149f932de))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.485Z
    2022-04-06T04:32:27.490Z
checkpoint.checkpointState.sessions.SessionId(toLong=6481573134519864493): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3826017921811048346), deduplicationSeed=D--3826017921811048346--7719705067965874331)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6594b6d9]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.514Z
  Event: EnterSubFlow(subFlowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.490Z
    2022-04-06T04:32:27.514Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.517Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.514Z
    2022-04-06T04:32:27.517Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.536Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=6481573134519864493))]), maySkipCheckpoint=false, fiber=B0C4DC473A6C224AB3DA34A310939F48AC59B8C25CC3936C7649A5FAAD614382, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[b4872e09-d992-4b3b-85b2-d762e5cc71a5], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=5e0f5297-d38a-4ce0-a127-5180644720c9, timestamp: 2022-04-06T04:32:27.484Z, entityType: Invocation, sessionId=5e0f5297-d38a-4ce0-a127-5180644720c9, timestamp: 2022-04-06T04:32:27.484Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=6481573134519864493)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3826017921811048346), deduplicationSeed=D--3826017921811048346--7719705067965874331)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=6481573134519864493))]), frozenFiber=B0C4DC473A6C224AB3DA34A310939F48AC59B8C25CC3936C7649A5FAAD614382), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.517Z
    2022-04-06T04:32:27.532Z
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=99E7E310CA49723BEDAC21D7B17329CFDC15BB76D4DCBCBB425FF5B15E65EE20)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=6481573134519864493))]), frozenFiber=B0C4DC473A6C224AB3DA34A310939F48AC59B8C25CC3936C7649A5FAAD614382)
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.539Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.532Z
    2022-04-06T04:32:27.539Z
checkpoint.checkpointState.sessions.SessionId(toLong=6481573134519864493).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.549Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.539Z
    2022-04-06T04:32:27.549Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.559Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.549Z
    2022-04-06T04:32:27.559Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.564Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.559Z
    2022-04-06T04:32:27.564Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.566Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.564Z
    2022-04-06T04:32:27.566Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.566Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.596Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=6481573134519864493))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=5714083DC679E1A7E6F84AA9A48361ED43C713DF6814B78056447F87F38C5806, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[b4872e09-d992-4b3b-85b2-d762e5cc71a5], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=5e0f5297-d38a-4ce0-a127-5180644720c9, timestamp: 2022-04-06T04:32:27.484Z, entityType: Invocation, sessionId=5e0f5297-d38a-4ce0-a127-5180644720c9, timestamp: 2022-04-06T04:32:27.484Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=6481573134519864493)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3826017921811048346), deduplicationSeed=D--3826017921811048346--7719705067965874331)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=6481573134519864493))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=5714083DC679E1A7E6F84AA9A48361ED43C713DF6814B78056447F87F38C5806), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.566Z
    2022-04-06T04:32:27.593Z
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=6481573134519864493))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=6481573134519864493))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    B0C4DC473A6C224AB3DA34A310939F48AC59B8C25CC3936C7649A5FAAD614382
    5714083DC679E1A7E6F84AA9A48361ED43C713DF6814B78056447F87F38C5806
checkpoint.flowIoRequest: 
    Receive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.601Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3826017921811048346), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--3826017921811048346--7719705067965874331-2-0), senderUUID=33b3cbf8-082c-47a6-b9e3-bde149f932de))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.601Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.598Z
    2022-04-06T04:32:27.601Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.643Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.601Z
    2022-04-06T04:32:27.643Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.649Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=6481573134519864493))]), maySkipCheckpoint=false, fiber=CEFD48A2D6EF1DB8136798ED819AB24BC67A14E192E2175E17B2FB2AC6E981C1, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[b4872e09-d992-4b3b-85b2-d762e5cc71a5], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=5e0f5297-d38a-4ce0-a127-5180644720c9, timestamp: 2022-04-06T04:32:27.484Z, entityType: Invocation, sessionId=5e0f5297-d38a-4ce0-a127-5180644720c9, timestamp: 2022-04-06T04:32:27.484Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=6481573134519864493)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3826017921811048346), deduplicationSeed=D--3826017921811048346--7719705067965874331)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=6481573134519864493))]), frozenFiber=CEFD48A2D6EF1DB8136798ED819AB24BC67A14E192E2175E17B2FB2AC6E981C1), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.643Z
    2022-04-06T04:32:27.646Z
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=6481573134519864493))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=6481573134519864493))])
checkpoint.flowState.frozenFiber.hash: 
    5714083DC679E1A7E6F84AA9A48361ED43C713DF6814B78056447F87F38C5806
    CEFD48A2D6EF1DB8136798ED819AB24BC67A14E192E2175E17B2FB2AC6E981C1
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.649Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.685Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6481573134519864493), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@748d6c6b, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.649Z
    2022-04-06T04:32:27.685Z
checkpoint.checkpointState.sessions.SessionId(toLong=6481573134519864493).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@748d6c6b]


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.685Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=6481573134519864493).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.695Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.685Z
    2022-04-06T04:32:27.695Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.714Z
  Event: Error(exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.695Z
    2022-04-06T04:32:27.699Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=1812760361917884268, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.719Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.720Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.699Z
    2022-04-06T04:32:27.720Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] ---
  Timestamp: 2022-04-06T04:32:27.879Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, errorId=1812760361917884268)], sessions=[Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3826017921811048346), deduplicationSeed=D--3826017921811048346--7719705067965874331)], senderUUID=33b3cbf8-082c-47a6-b9e3-bde149f932de)
    CreateTransaction
    RemoveCheckpoint(id=[b4872e09-d992-4b3b-85b2-d762e5cc71a5], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@748d6c6b])
    ReleaseSoftLocks(uuid=b4872e09-d992-4b3b-85b2-d762e5cc71a5)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@748d6c6b])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=6481573134519864493)])
    RemoveFlow(flowId=[b4872e09-d992-4b3b-85b2-d762e5cc71a5], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=1812760361917884268, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=5e0f5297-d38a-4ce0-a127-5180644720c9, timestamp: 2022-04-06T04:32:27.484Z, entityType: Invocation, sessionId=5e0f5297-d38a-4ce0-a127-5180644720c9, timestamp: 2022-04-06T04:32:27.484Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=6481573134519864493)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3826017921811048346), deduplicationSeed=D--3826017921811048346--7719705067965874331)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=5), flowState=net.corda.node.services.statemachine.FlowState$Finished@70b21018, errorState=Errored(errors=[FlowError(errorId=1812760361917884268, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=ExampleFlow$Acceptor@4fb79db9, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=33b3cbf8-082c-47a6-b9e3-bde149f932de, reloadCheckpointAfterSuspendCount=null, numberOfCommits=5, lock=java.util.concurrent.Semaphore@7cdbb8f8[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.720Z
    2022-04-06T04:32:27.746Z
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=6481573134519864493))]), frozenFiber=CEFD48A2D6EF1DB8136798ED819AB24BC67A14E192E2175E17B2FB2AC6E981C1)
    net.corda.node.services.statemachine.FlowState$Finished@70b21018
checkpoint.checkpointState.numberOfCommits: 
    4
    5
numberOfCommits: 
    4
    5
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@748d6c6b]
    []
isRemoved: 
    false
    true
 {fiber-id=10000002, flow-id=b4872e09-d992-4b3b-85b2-d762e5cc71a5, invocation_id=5e0f5297-d38a-4ce0-a127-5180644720c9, invocation_timestamp=2022-04-06T04:32:27.484Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5e0f5297-d38a-4ce0-a127-5180644720c9, session_timestamp=2022-04-06T04:32:27.484Z, thread-id=178, tx_id=5D19E9D78FDB4A906A43F429F5A7FDAEA526ED5FD957C6028DCABD8E9C0F935B}
[WARN ] 2022-04-06T04:32:27,890Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [b4872e09-d992-4b3b-85b2-d762e5cc71a5] error {fiber-id=10000002, flow-id=b4872e09-d992-4b3b-85b2-d762e5cc71a5, invocation_id=5e0f5297-d38a-4ce0-a127-5180644720c9, invocation_timestamp=2022-04-06T04:32:27.484Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5e0f5297-d38a-4ce0-a127-5180644720c9, session_timestamp=2022-04-06T04:32:27.484Z, thread-id=178, tx_id=5D19E9D78FDB4A906A43F429F5A7FDAEA526ED5FD957C6028DCABD8E9C0F935B}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[INFO ] 2022-04-06T04:32:27,910Z [Mock network] corda.flow. - Flow raised an error: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8, invocation_id=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, invocation_timestamp=2022-04-06T04:32:26.611Z, origin=Only For Testing, session_id=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, session_timestamp=2022-04-06T04:32:26.611Z, thread-id=178}
[INFO ] 2022-04-06T04:32:27,921Z [Mock network] statemachine.StaffedFlowHospital. - Flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, timestamp: 2022-04-06T04:32:26.611Z, entityType: Invocation, sessionId=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, timestamp: 2022-04-06T04:32:26.611Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-3826017921811048346)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=6481573134519864493), deduplicationSeed=R--3826017921811048346--7719705067965874331)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))]), frozenFiber=F543D75B0631202B8B8F4AD8E924F5AEB311063BED7C4D6E45962207C8B6A583), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Receive, compatible=true), flowLogic=ExampleFlow$Initiator@3d53ffc0, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@16afc506], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=292cc2eb-b249-4448-9fd3-e83d38b8d5ec, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@3c74e4e6[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8, invocation_id=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, invocation_timestamp=2022-04-06T04:32:26.611Z, origin=Only For Testing, session_id=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, session_timestamp=2022-04-06T04:32:26.611Z, thread-id=178}
[INFO ] 2022-04-06T04:32:27,921Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8, invocation_id=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, invocation_timestamp=2022-04-06T04:32:26.611Z, origin=Only For Testing, session_id=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, session_timestamp=2022-04-06T04:32:26.611Z, thread-id=178}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at Received counter-flow exception from peer O=Mock Company 2, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:257) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:159) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
[INFO ] 2022-04-06T04:32:27,921Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8, invocation_id=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, invocation_timestamp=2022-04-06T04:32:26.611Z, origin=Only For Testing, session_id=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, session_timestamp=2022-04-06T04:32:26.611Z, thread-id=178}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at Received counter-flow exception from peer O=Mock Company 2, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:257) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:159) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
[WARN ] 2022-04-06T04:32:27,944Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] errored, dumping all transitions:

 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:26.816Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, timestamp: 2022-04-06T04:32:26.611Z, entityType: Invocation, sessionId=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, timestamp: 2022-04-06T04:32:26.611Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=38A29B8FBB729BDCF87397C54B2CBF6CD69F02E415CC711C30A777EB263EC8FF), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3afafc2a])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3afafc2a])
    SignalFlowHasStarted(flowId=[1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3afafc2a]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.216Z
  Event: InitiateFlow(destination=O=Mock Company 2, L=London, C=GB, wellKnownParty=O=Mock Company 2, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8], sessionId=SessionId(toLong=-3826017921811048346))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:26.757Z
    2022-04-06T04:32:27.216Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3826017921811048346): 
    null
    Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-3826017921811048346), additionalEntropy=-7719705067965874331)


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.219Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.216Z
    2022-04-06T04:32:27.218Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.233Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.218Z
    2022-04-06T04:32:27.233Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.239Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.233Z
    2022-04-06T04:32:27.239Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.355Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))=6D1B78245C08C2D2356BFC00830FAAD96773F80CF43CF404E2B0F65BDE889708}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=0B2C6F31844614B7ADB5220A1B5211BEFDFEC9EA87951C8535851696AC124BD6, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, timestamp: 2022-04-06T04:32:26.611Z, entityType: Invocation, sessionId=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, timestamp: 2022-04-06T04:32:26.611Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-3826017921811048346)=Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-3826017921811048346), additionalEntropy=-7719705067965874331)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))=6D1B78245C08C2D2356BFC00830FAAD96773F80CF43CF404E2B0F65BDE889708}, shouldRetrySend=false), frozenFiber=0B2C6F31844614B7ADB5220A1B5211BEFDFEC9EA87951C8535851696AC124BD6), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.239Z
    2022-04-06T04:32:27.334Z
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=38A29B8FBB729BDCF87397C54B2CBF6CD69F02E415CC711C30A777EB263EC8FF)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))=6D1B78245C08C2D2356BFC00830FAAD96773F80CF43CF404E2B0F65BDE889708}, shouldRetrySend=false), frozenFiber=0B2C6F31844614B7ADB5220A1B5211BEFDFEC9EA87951C8535851696AC124BD6)
checkpoint.progressStep: 
    null
    Gathering the counterparty's signature.
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.471Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 2, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-3826017921811048346), initiationEntropy=-7719705067965874331, initiatorFlowClassName=ExampleFlow$Initiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--3826017921811048346--7719705067965874331-1-0), senderUUID=292cc2eb-b249-4448-9fd3-e83d38b8d5ec))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.334Z
    2022-04-06T04:32:27.442Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))=6D1B78245C08C2D2356BFC00830FAAD96773F80CF43CF404E2B0F65BDE889708}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))])
checkpoint.checkpointState.sessions.SessionId(toLong=-3826017921811048346): 
    Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-3826017921811048346), additionalEntropy=-7719705067965874331)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--3826017921811048346--7719705067965874331)


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.660Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3826017921811048346), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=6481573134519864493), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@d144f03, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.442Z
    2022-04-06T04:32:27.659Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3826017921811048346): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--3826017921811048346--7719705067965874331)
    Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=6481573134519864493), deduplicationSeed=R--3826017921811048346--7719705067965874331)
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@d144f03]


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.660Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.662Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3826017921811048346), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@65fb3c52, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.660Z
    2022-04-06T04:32:27.662Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3826017921811048346).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@d144f03]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@d144f03, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@65fb3c52]


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.662Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-3826017921811048346).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.662Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.674Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))=490D39DE2AB93D475A96B6FB227521E5C8820ACC862D0CFC2B125B1E8799C640}), maySkipCheckpoint=false, fiber=82C63E1D97D1C5B9D32287FFD873B87A1B0CEA41F5929ACAA05564E5E841138B, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, timestamp: 2022-04-06T04:32:26.611Z, entityType: Invocation, sessionId=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, timestamp: 2022-04-06T04:32:26.611Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-3826017921811048346)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=6481573134519864493), deduplicationSeed=R--3826017921811048346--7719705067965874331)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))=490D39DE2AB93D475A96B6FB227521E5C8820ACC862D0CFC2B125B1E8799C640}), frozenFiber=82C63E1D97D1C5B9D32287FFD873B87A1B0CEA41F5929ACAA05564E5E841138B), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@d144f03, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@65fb3c52])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@d144f03, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@65fb3c52])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.662Z
    2022-04-06T04:32:27.666Z
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))=490D39DE2AB93D475A96B6FB227521E5C8820ACC862D0CFC2B125B1E8799C640})
checkpoint.flowState.frozenFiber.hash: 
    0B2C6F31844614B7ADB5220A1B5211BEFDFEC9EA87951C8535851696AC124BD6
    82C63E1D97D1C5B9D32287FFD873B87A1B0CEA41F5929ACAA05564E5E841138B
checkpoint.flowIoRequest: 
    SendAndReceive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@d144f03, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@65fb3c52]
    []
isFlowResumed: 
    true
    false


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.675Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 2, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6481573134519864493), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--3826017921811048346--7719705067965874331-2-0), senderUUID=292cc2eb-b249-4448-9fd3-e83d38b8d5ec))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.682Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))]), maySkipCheckpoint=false, fiber=F543D75B0631202B8B8F4AD8E924F5AEB311063BED7C4D6E45962207C8B6A583, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, timestamp: 2022-04-06T04:32:26.611Z, entityType: Invocation, sessionId=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, timestamp: 2022-04-06T04:32:26.611Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-3826017921811048346)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=6481573134519864493), deduplicationSeed=R--3826017921811048346--7719705067965874331)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))]), frozenFiber=F543D75B0631202B8B8F4AD8E924F5AEB311063BED7C4D6E45962207C8B6A583), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.674Z
    2022-04-06T04:32:27.679Z
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))=490D39DE2AB93D475A96B6FB227521E5C8820ACC862D0CFC2B125B1E8799C640})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))])
checkpoint.flowState.frozenFiber.hash: 
    82C63E1D97D1C5B9D32287FFD873B87A1B0CEA41F5929ACAA05564E5E841138B
    F543D75B0631202B8B8F4AD8E924F5AEB311063BED7C4D6E45962207C8B6A583
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.682Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.909Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3826017921811048346), payload=ErrorSessionMessage(flowException=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, errorId=1812760361917884268)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@16afc506, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.682Z
    2022-04-06T04:32:27.909Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3826017921811048346).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@16afc506]


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.910Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-3826017921811048346).receivedMessages.isEmpty: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-3826017921811048346).otherSideErrored: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.910Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.909Z
    2022-04-06T04:32:27.910Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.910Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.921Z
  Event: Error(exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.910Z
    2022-04-06T04:32:27.913Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=1812760361917884268, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.922Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.922Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.913Z
    2022-04-06T04:32:27.922Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8, invocation_id=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, invocation_timestamp=2022-04-06T04:32:26.611Z, origin=Only For Testing, session_id=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, session_timestamp=2022-04-06T04:32:26.611Z, thread-id=178}
[WARN ] 2022-04-06T04:32:27,944Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8, invocation_id=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, invocation_timestamp=2022-04-06T04:32:26.611Z, origin=Only For Testing, session_id=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, session_timestamp=2022-04-06T04:32:26.611Z, thread-id=178}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at Received counter-flow exception from peer O=Mock Company 2, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:257) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:159) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
[WARN ] 2022-04-06T04:32:27,944Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8, invocation_id=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, invocation_timestamp=2022-04-06T04:32:26.611Z, origin=Only For Testing, session_id=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, session_timestamp=2022-04-06T04:32:26.611Z, thread-id=178}
[WARN ] 2022-04-06T04:32:27,983Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] errored, dumping all transitions:

 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:26.816Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, timestamp: 2022-04-06T04:32:26.611Z, entityType: Invocation, sessionId=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, timestamp: 2022-04-06T04:32:26.611Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=38A29B8FBB729BDCF87397C54B2CBF6CD69F02E415CC711C30A777EB263EC8FF), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3afafc2a])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3afafc2a])
    SignalFlowHasStarted(flowId=[1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3afafc2a]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.216Z
  Event: InitiateFlow(destination=O=Mock Company 2, L=London, C=GB, wellKnownParty=O=Mock Company 2, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8], sessionId=SessionId(toLong=-3826017921811048346))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:26.757Z
    2022-04-06T04:32:27.216Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3826017921811048346): 
    null
    Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-3826017921811048346), additionalEntropy=-7719705067965874331)


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.219Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.216Z
    2022-04-06T04:32:27.218Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.233Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.218Z
    2022-04-06T04:32:27.233Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.239Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.233Z
    2022-04-06T04:32:27.239Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.355Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))=6D1B78245C08C2D2356BFC00830FAAD96773F80CF43CF404E2B0F65BDE889708}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=0B2C6F31844614B7ADB5220A1B5211BEFDFEC9EA87951C8535851696AC124BD6, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, timestamp: 2022-04-06T04:32:26.611Z, entityType: Invocation, sessionId=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, timestamp: 2022-04-06T04:32:26.611Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-3826017921811048346)=Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-3826017921811048346), additionalEntropy=-7719705067965874331)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))=6D1B78245C08C2D2356BFC00830FAAD96773F80CF43CF404E2B0F65BDE889708}, shouldRetrySend=false), frozenFiber=0B2C6F31844614B7ADB5220A1B5211BEFDFEC9EA87951C8535851696AC124BD6), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.239Z
    2022-04-06T04:32:27.334Z
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=38A29B8FBB729BDCF87397C54B2CBF6CD69F02E415CC711C30A777EB263EC8FF)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))=6D1B78245C08C2D2356BFC00830FAAD96773F80CF43CF404E2B0F65BDE889708}, shouldRetrySend=false), frozenFiber=0B2C6F31844614B7ADB5220A1B5211BEFDFEC9EA87951C8535851696AC124BD6)
checkpoint.progressStep: 
    null
    Gathering the counterparty's signature.
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.471Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 2, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-3826017921811048346), initiationEntropy=-7719705067965874331, initiatorFlowClassName=ExampleFlow$Initiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--3826017921811048346--7719705067965874331-1-0), senderUUID=292cc2eb-b249-4448-9fd3-e83d38b8d5ec))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.334Z
    2022-04-06T04:32:27.442Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))=6D1B78245C08C2D2356BFC00830FAAD96773F80CF43CF404E2B0F65BDE889708}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))])
checkpoint.checkpointState.sessions.SessionId(toLong=-3826017921811048346): 
    Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-3826017921811048346), additionalEntropy=-7719705067965874331)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--3826017921811048346--7719705067965874331)


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.660Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3826017921811048346), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=6481573134519864493), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@d144f03, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.442Z
    2022-04-06T04:32:27.659Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3826017921811048346): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--3826017921811048346--7719705067965874331)
    Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=6481573134519864493), deduplicationSeed=R--3826017921811048346--7719705067965874331)
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@d144f03]


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.660Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.662Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3826017921811048346), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@65fb3c52, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.660Z
    2022-04-06T04:32:27.662Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3826017921811048346).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@d144f03]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@d144f03, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@65fb3c52]


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.662Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-3826017921811048346).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.662Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.674Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))=490D39DE2AB93D475A96B6FB227521E5C8820ACC862D0CFC2B125B1E8799C640}), maySkipCheckpoint=false, fiber=82C63E1D97D1C5B9D32287FFD873B87A1B0CEA41F5929ACAA05564E5E841138B, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, timestamp: 2022-04-06T04:32:26.611Z, entityType: Invocation, sessionId=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, timestamp: 2022-04-06T04:32:26.611Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-3826017921811048346)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=6481573134519864493), deduplicationSeed=R--3826017921811048346--7719705067965874331)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))=490D39DE2AB93D475A96B6FB227521E5C8820ACC862D0CFC2B125B1E8799C640}), frozenFiber=82C63E1D97D1C5B9D32287FFD873B87A1B0CEA41F5929ACAA05564E5E841138B), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@d144f03, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@65fb3c52])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@d144f03, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@65fb3c52])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.662Z
    2022-04-06T04:32:27.666Z
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))=490D39DE2AB93D475A96B6FB227521E5C8820ACC862D0CFC2B125B1E8799C640})
checkpoint.flowState.frozenFiber.hash: 
    0B2C6F31844614B7ADB5220A1B5211BEFDFEC9EA87951C8535851696AC124BD6
    82C63E1D97D1C5B9D32287FFD873B87A1B0CEA41F5929ACAA05564E5E841138B
checkpoint.flowIoRequest: 
    SendAndReceive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@d144f03, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@65fb3c52]
    []
isFlowResumed: 
    true
    false


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.675Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 2, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6481573134519864493), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--3826017921811048346--7719705067965874331-2-0), senderUUID=292cc2eb-b249-4448-9fd3-e83d38b8d5ec))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.682Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))]), maySkipCheckpoint=false, fiber=F543D75B0631202B8B8F4AD8E924F5AEB311063BED7C4D6E45962207C8B6A583, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, timestamp: 2022-04-06T04:32:26.611Z, entityType: Invocation, sessionId=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, timestamp: 2022-04-06T04:32:26.611Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-3826017921811048346)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=6481573134519864493), deduplicationSeed=R--3826017921811048346--7719705067965874331)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))]), frozenFiber=F543D75B0631202B8B8F4AD8E924F5AEB311063BED7C4D6E45962207C8B6A583), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.674Z
    2022-04-06T04:32:27.679Z
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))=490D39DE2AB93D475A96B6FB227521E5C8820ACC862D0CFC2B125B1E8799C640})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))])
checkpoint.flowState.frozenFiber.hash: 
    82C63E1D97D1C5B9D32287FFD873B87A1B0CEA41F5929ACAA05564E5E841138B
    F543D75B0631202B8B8F4AD8E924F5AEB311063BED7C4D6E45962207C8B6A583
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.682Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.909Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3826017921811048346), payload=ErrorSessionMessage(flowException=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, errorId=1812760361917884268)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@16afc506, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.682Z
    2022-04-06T04:32:27.909Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3826017921811048346).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@16afc506]


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.910Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-3826017921811048346).receivedMessages.isEmpty: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-3826017921811048346).otherSideErrored: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.910Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.909Z
    2022-04-06T04:32:27.910Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.910Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.921Z
  Event: Error(exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.910Z
    2022-04-06T04:32:27.913Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=1812760361917884268, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.922Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.922Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.913Z
    2022-04-06T04:32:27.922Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] ---
  Timestamp: 2022-04-06T04:32:27.976Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=1812760361917884268)], sessions=[], senderUUID=292cc2eb-b249-4448-9fd3-e83d38b8d5ec)
    CreateTransaction
    RemoveCheckpoint(id=[1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@16afc506])
    ReleaseSoftLocks(uuid=1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@16afc506])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-3826017921811048346)])
    RemoveFlow(flowId=[1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=1812760361917884268, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, timestamp: 2022-04-06T04:32:26.611Z, entityType: Invocation, sessionId=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, timestamp: 2022-04-06T04:32:26.611Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-3826017921811048346)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=6481573134519864493), deduplicationSeed=R--3826017921811048346--7719705067965874331)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=5), flowState=net.corda.node.services.statemachine.FlowState$Finished@70b21018, errorState=Errored(errors=[FlowError(errorId=1812760361917884268, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Gathering the counterparty's signature., flowIoRequest=Receive, compatible=true), flowLogic=ExampleFlow$Initiator@3d53ffc0, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=292cc2eb-b249-4448-9fd3-e83d38b8d5ec, reloadCheckpointAfterSuspendCount=null, numberOfCommits=5, lock=java.util.concurrent.Semaphore@3c74e4e6[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:27.922Z
    2022-04-06T04:32:27.944Z
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-3826017921811048346))]), frozenFiber=F543D75B0631202B8B8F4AD8E924F5AEB311063BED7C4D6E45962207C8B6A583)
    net.corda.node.services.statemachine.FlowState$Finished@70b21018
checkpoint.checkpointState.numberOfCommits: 
    4
    5
numberOfCommits: 
    4
    5
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@16afc506]
    []
isRemoved: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8, invocation_id=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, invocation_timestamp=2022-04-06T04:32:26.611Z, origin=Only For Testing, session_id=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, session_timestamp=2022-04-06T04:32:26.611Z, thread-id=178}
[WARN ] 2022-04-06T04:32:27,983Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=1ec4b6d7-3ba2-4e3a-bba8-299890e32cd8, invocation_id=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, invocation_timestamp=2022-04-06T04:32:26.611Z, origin=Only For Testing, session_id=b7d9fb87-218a-4ace-bfcb-e10623fda7d7, session_timestamp=2022-04-06T04:32:26.611Z, thread-id=178}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at Received counter-flow exception from peer O=Mock Company 2, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:257) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:159) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
[INFO ] 2022-04-06T04:32:28,010Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2022-04-06T04:32:28,036Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-06T04:32:28,036Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:28,039Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2022-04-06T04:32:28,055Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-06T04:32:28,055Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:28,056Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2022-04-06T04:32:28,069Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-06T04:32:28,069Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:28,186Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220406-043228.081-3491E0F793037AA4/nodes/0/cordapps] {}
[INFO ] 2022-04-06T04:32:28,187Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043228.081-3491E0F793037AA4/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043228.081-3491E0F793037AA4/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-06T04:32:28,187Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043228.081-3491E0F793037AA4/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-06T04:32:28,194Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043228.081-3491E0F793037AA4/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-06T04:32:28,223Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:28,224Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-06T04:32:28,226Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-06T04:32:28,231Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-06T04:32:28,231Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLDVVKyvcmfM8P19LTqHhTGNtAb2PrE4CLjn2L7yXty145, alias: identity-private-key {}
[INFO ] 2022-04-06T04:32:28,240Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-06T04:32:28,247Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-06T04:32:28.081Z
      epoch=1
  } {}
[INFO ] 2022-04-06T04:32:28,869Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-06T04:32:28,872Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-06T04:32:28,873Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-06T04:32:29,045Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-06T04:32:29,050Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-06T04:32:29,053Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219549050), owningKey=DLDVVKyvcmfM8P19LTqHhTGNtAb2PrE4CLjn2L7yXty145 {}
[INFO ] 2022-04-06T04:32:29,053Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:29,070Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219549050) {}
[INFO ] 2022-04-06T04:32:29,081Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-06T04:32:29,082Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-06T04:32:29,082Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-06T04:32:29,088Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219549050), owningKey=DLDVVKyvcmfM8P19LTqHhTGNtAb2PrE4CLjn2L7yXty145 {}
[INFO ] 2022-04-06T04:32:29,088Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:29,115Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F205A04A1F0201841C3F475344FC1871245793E3B7970D264C4F47D7B1784D2A uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-06T04:32:29,117Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2022-04-06T04:32:29,142Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219549050) {}
[INFO ] 2022-04-06T04:32:29,144Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219549050), owningKey=DLDVVKyvcmfM8P19LTqHhTGNtAb2PrE4CLjn2L7yXty145 {}
[INFO ] 2022-04-06T04:32:29,144Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:29,144Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219549050), owningKey=DLDVVKyvcmfM8P19LTqHhTGNtAb2PrE4CLjn2L7yXty145 {}
[INFO ] 2022-04-06T04:32:29,144Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:29,155Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220406-043228.081-3491E0F793037AA4/nodes/1/cordapps] {}
[INFO ] 2022-04-06T04:32:29,155Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043228.081-3491E0F793037AA4/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043228.081-3491E0F793037AA4/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-06T04:32:29,155Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043228.081-3491E0F793037AA4/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-06T04:32:29,160Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043228.081-3491E0F793037AA4/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-06T04:32:29,210Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:29,213Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-06T04:32:29,216Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-06T04:32:29,271Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-06T04:32:29,271Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLEE2wh1n6rYpXbB5uoQFB7oDp4KnqhuHS5pgqyDRUwa1H, alias: identity-private-key {}
[INFO ] 2022-04-06T04:32:29,281Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-06T04:32:29,285Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-06T04:32:28.081Z
      epoch=1
  } {}
[INFO ] 2022-04-06T04:32:29,781Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-06T04:32:29,783Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:29,783Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:29,935Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:29,940Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-06T04:32:29,943Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219549940), owningKey=DLEE2wh1n6rYpXbB5uoQFB7oDp4KnqhuHS5pgqyDRUwa1H {}
[INFO ] 2022-04-06T04:32:29,943Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:29,954Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219549940) {}
[INFO ] 2022-04-06T04:32:29,962Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-06T04:32:29,964Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-06T04:32:29,964Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-06T04:32:29,970Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219549940), owningKey=DLEE2wh1n6rYpXbB5uoQFB7oDp4KnqhuHS5pgqyDRUwa1H {}
[INFO ] 2022-04-06T04:32:29,970Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:29,996Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F205A04A1F0201841C3F475344FC1871245793E3B7970D264C4F47D7B1784D2A uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-06T04:32:30,013Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219549940) {}
[INFO ] 2022-04-06T04:32:30,015Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219549050), owningKey=DLDVVKyvcmfM8P19LTqHhTGNtAb2PrE4CLjn2L7yXty145 {}
[INFO ] 2022-04-06T04:32:30,015Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:30,024Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219549940), owningKey=DLEE2wh1n6rYpXbB5uoQFB7oDp4KnqhuHS5pgqyDRUwa1H {}
[INFO ] 2022-04-06T04:32:30,024Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:30,033Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219549940), owningKey=DLEE2wh1n6rYpXbB5uoQFB7oDp4KnqhuHS5pgqyDRUwa1H {}
[INFO ] 2022-04-06T04:32:30,033Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:30,034Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219549940), owningKey=DLEE2wh1n6rYpXbB5uoQFB7oDp4KnqhuHS5pgqyDRUwa1H {}
[INFO ] 2022-04-06T04:32:30,034Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:30,043Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220406-043228.081-3491E0F793037AA4/nodes/2/cordapps] {}
[INFO ] 2022-04-06T04:32:30,043Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043228.081-3491E0F793037AA4/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043228.081-3491E0F793037AA4/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-06T04:32:30,043Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043228.081-3491E0F793037AA4/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-06T04:32:30,049Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043228.081-3491E0F793037AA4/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-06T04:32:30,074Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:30,075Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-06T04:32:30,076Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-06T04:32:30,112Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-06T04:32:30,112Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLA6HUxQtEAjWGpwMSfAipscESATtBzWpSGmtuZaZoxYdm, alias: identity-private-key {}
[INFO ] 2022-04-06T04:32:30,121Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-06T04:32:30,124Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-06T04:32:28.081Z
      epoch=1
  } {}
[INFO ] 2022-04-06T04:32:30,551Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-06T04:32:30,554Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:30,554Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:30,686Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:30,690Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-06T04:32:30,693Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219550690), owningKey=DLA6HUxQtEAjWGpwMSfAipscESATtBzWpSGmtuZaZoxYdm {}
[INFO ] 2022-04-06T04:32:30,693Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:30,702Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219550690) {}
[INFO ] 2022-04-06T04:32:30,708Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-06T04:32:30,709Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-06T04:32:30,709Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-06T04:32:30,716Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219550690), owningKey=DLA6HUxQtEAjWGpwMSfAipscESATtBzWpSGmtuZaZoxYdm {}
[INFO ] 2022-04-06T04:32:30,716Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:30,744Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F205A04A1F0201841C3F475344FC1871245793E3B7970D264C4F47D7B1784D2A uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-06T04:32:30,766Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219550690) {}
[INFO ] 2022-04-06T04:32:30,769Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219549050), owningKey=DLDVVKyvcmfM8P19LTqHhTGNtAb2PrE4CLjn2L7yXty145 {}
[INFO ] 2022-04-06T04:32:30,769Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:30,781Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219550690), owningKey=DLA6HUxQtEAjWGpwMSfAipscESATtBzWpSGmtuZaZoxYdm {}
[INFO ] 2022-04-06T04:32:30,781Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:30,791Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219549940), owningKey=DLEE2wh1n6rYpXbB5uoQFB7oDp4KnqhuHS5pgqyDRUwa1H {}
[INFO ] 2022-04-06T04:32:30,791Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:30,803Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219550690), owningKey=DLA6HUxQtEAjWGpwMSfAipscESATtBzWpSGmtuZaZoxYdm {}
[INFO ] 2022-04-06T04:32:30,803Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:30,812Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219550690), owningKey=DLA6HUxQtEAjWGpwMSfAipscESATtBzWpSGmtuZaZoxYdm {}
[INFO ] 2022-04-06T04:32:30,812Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:30,812Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219550690), owningKey=DLA6HUxQtEAjWGpwMSfAipscESATtBzWpSGmtuZaZoxYdm {}
[INFO ] 2022-04-06T04:32:30,812Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:30,948Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=46e33efb-4b7d-4a55-b707-86d1429aad4e, invocation_id=f27a3116-c70a-4505-8f5f-b07a63a189ba, invocation_timestamp=2022-04-06T04:32:30.930Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f27a3116-c70a-4505-8f5f-b07a63a189ba, session_timestamp=2022-04-06T04:32:30.930Z, thread-id=336, tx_id=9B05335952D4A9D70576928D9E489930C162B327E5C50A28A83C880584C8F94C}
[INFO ] 2022-04-06T04:32:30,960Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=46e33efb-4b7d-4a55-b707-86d1429aad4e, invocation_id=f27a3116-c70a-4505-8f5f-b07a63a189ba, invocation_timestamp=2022-04-06T04:32:30.930Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f27a3116-c70a-4505-8f5f-b07a63a189ba, session_timestamp=2022-04-06T04:32:30.930Z, thread-id=336, tx_id=9B05335952D4A9D70576928D9E489930C162B327E5C50A28A83C880584C8F94C}
[INFO ] 2022-04-06T04:32:31,033Z [Mock network] corda.flow. - Flow raised an error: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null. Sending it to flow hospital to be triaged. {fiber-id=10000004, flow-id=46e33efb-4b7d-4a55-b707-86d1429aad4e, invocation_id=f27a3116-c70a-4505-8f5f-b07a63a189ba, invocation_timestamp=2022-04-06T04:32:30.930Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f27a3116-c70a-4505-8f5f-b07a63a189ba, session_timestamp=2022-04-06T04:32:30.930Z, thread-id=336, tx_id=9B05335952D4A9D70576928D9E489930C162B327E5C50A28A83C880584C8F94C}
[INFO ] 2022-04-06T04:32:31,033Z [Mock network] statemachine.StaffedFlowHospital. - Flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f27a3116-c70a-4505-8f5f-b07a63a189ba, timestamp: 2022-04-06T04:32:30.930Z, entityType: Invocation, sessionId=f27a3116-c70a-4505-8f5f-b07a63a189ba, timestamp: 2022-04-06T04:32:30.930Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-7344190367674599673)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5659053396962462373), deduplicationSeed=D-5659053396962462373--2075541177030994416)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7344190367674599673))]), frozenFiber=3E9239ACEDC0175A0CFE3CE68B906C0DC05BBCDE5A3C54B0B638854775960141), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=ExampleFlow$Acceptor@6f977a69, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4621a169], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=35ffe8a6-7f33-44bf-ba9d-ee68247e1c78, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@54aa67f9[Permits = 0]) {fiber-id=10000004, flow-id=46e33efb-4b7d-4a55-b707-86d1429aad4e, invocation_id=f27a3116-c70a-4505-8f5f-b07a63a189ba, invocation_timestamp=2022-04-06T04:32:30.930Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f27a3116-c70a-4505-8f5f-b07a63a189ba, session_timestamp=2022-04-06T04:32:30.930Z, thread-id=336, tx_id=9B05335952D4A9D70576928D9E489930C162B327E5C50A28A83C880584C8F94C}
[INFO ] 2022-04-06T04:32:31,033Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {fiber-id=10000004, flow-id=46e33efb-4b7d-4a55-b707-86d1429aad4e, invocation_id=f27a3116-c70a-4505-8f5f-b07a63a189ba, invocation_timestamp=2022-04-06T04:32:30.930Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f27a3116-c70a-4505-8f5f-b07a63a189ba, session_timestamp=2022-04-06T04:32:30.930Z, thread-id=336, tx_id=9B05335952D4A9D70576928D9E489930C162B327E5C50A28A83C880584C8F94C}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[INFO ] 2022-04-06T04:32:31,033Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {fiber-id=10000004, flow-id=46e33efb-4b7d-4a55-b707-86d1429aad4e, invocation_id=f27a3116-c70a-4505-8f5f-b07a63a189ba, invocation_timestamp=2022-04-06T04:32:30.930Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f27a3116-c70a-4505-8f5f-b07a63a189ba, session_timestamp=2022-04-06T04:32:30.930Z, thread-id=336, tx_id=9B05335952D4A9D70576928D9E489930C162B327E5C50A28A83C880584C8F94C}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[WARN ] 2022-04-06T04:32:31,039Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] errored, dumping all transitions:

 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:30.940Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[46e33efb-4b7d-4a55-b707-86d1429aad4e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f27a3116-c70a-4505-8f5f-b07a63a189ba, timestamp: 2022-04-06T04:32:30.930Z, entityType: Invocation, sessionId=f27a3116-c70a-4505-8f5f-b07a63a189ba, timestamp: 2022-04-06T04:32:30.930Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=326E2C04B4AE7C5B6D70F20DACB53C3570A15C479BECBE26E427044643CFCEF0), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3bb3c87b])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3bb3c87b])
    SignalFlowHasStarted(flowId=[46e33efb-4b7d-4a55-b707-86d1429aad4e])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=5659053396962462373), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-7344190367674599673), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-5659053396962462373--2075541177030994416-0-0), senderUUID=35ffe8a6-7f33-44bf-ba9d-ee68247e1c78))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.930Z
    2022-04-06T04:32:30.931Z
checkpoint.checkpointState.sessions.SessionId(toLong=-7344190367674599673): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5659053396962462373), deduplicationSeed=D-5659053396962462373--2075541177030994416)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3bb3c87b]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:30.941Z
  Event: EnterSubFlow(subFlowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.931Z
    2022-04-06T04:32:30.941Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:30.941Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:30.946Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7344190367674599673))]), maySkipCheckpoint=false, fiber=4EA48C7B72525E4E6DC12ED476E117C0C543D362E4BB975AAE83C2C1DDF09B32, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[46e33efb-4b7d-4a55-b707-86d1429aad4e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f27a3116-c70a-4505-8f5f-b07a63a189ba, timestamp: 2022-04-06T04:32:30.930Z, entityType: Invocation, sessionId=f27a3116-c70a-4505-8f5f-b07a63a189ba, timestamp: 2022-04-06T04:32:30.930Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-7344190367674599673)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5659053396962462373), deduplicationSeed=D-5659053396962462373--2075541177030994416)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7344190367674599673))]), frozenFiber=4EA48C7B72525E4E6DC12ED476E117C0C543D362E4BB975AAE83C2C1DDF09B32), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.941Z
    2022-04-06T04:32:30.944Z
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=326E2C04B4AE7C5B6D70F20DACB53C3570A15C479BECBE26E427044643CFCEF0)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7344190367674599673))]), frozenFiber=4EA48C7B72525E4E6DC12ED476E117C0C543D362E4BB975AAE83C2C1DDF09B32)
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:30.946Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.944Z
    2022-04-06T04:32:30.946Z
checkpoint.checkpointState.sessions.SessionId(toLong=-7344190367674599673).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:30.949Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.946Z
    2022-04-06T04:32:30.949Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:30.949Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:30.951Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.949Z
    2022-04-06T04:32:30.951Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:30.951Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:30.952Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:30.958Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7344190367674599673))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=61FC7E7F6F85961557FD5F4CAB0A56649675C529F20A8B7338B72034530C749D, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[46e33efb-4b7d-4a55-b707-86d1429aad4e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f27a3116-c70a-4505-8f5f-b07a63a189ba, timestamp: 2022-04-06T04:32:30.930Z, entityType: Invocation, sessionId=f27a3116-c70a-4505-8f5f-b07a63a189ba, timestamp: 2022-04-06T04:32:30.930Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-7344190367674599673)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5659053396962462373), deduplicationSeed=D-5659053396962462373--2075541177030994416)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7344190367674599673))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=61FC7E7F6F85961557FD5F4CAB0A56649675C529F20A8B7338B72034530C749D), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.951Z
    2022-04-06T04:32:30.956Z
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7344190367674599673))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7344190367674599673))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    4EA48C7B72525E4E6DC12ED476E117C0C543D362E4BB975AAE83C2C1DDF09B32
    61FC7E7F6F85961557FD5F4CAB0A56649675C529F20A8B7338B72034530C749D
checkpoint.flowIoRequest: 
    Receive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:30.960Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=5659053396962462373), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-5659053396962462373--2075541177030994416-2-0), senderUUID=35ffe8a6-7f33-44bf-ba9d-ee68247e1c78))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:30.960Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.958Z
    2022-04-06T04:32:30.960Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:31.001Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.960Z
    2022-04-06T04:32:31.001Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:31.008Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7344190367674599673))]), maySkipCheckpoint=false, fiber=3E9239ACEDC0175A0CFE3CE68B906C0DC05BBCDE5A3C54B0B638854775960141, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[46e33efb-4b7d-4a55-b707-86d1429aad4e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f27a3116-c70a-4505-8f5f-b07a63a189ba, timestamp: 2022-04-06T04:32:30.930Z, entityType: Invocation, sessionId=f27a3116-c70a-4505-8f5f-b07a63a189ba, timestamp: 2022-04-06T04:32:30.930Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-7344190367674599673)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5659053396962462373), deduplicationSeed=D-5659053396962462373--2075541177030994416)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7344190367674599673))]), frozenFiber=3E9239ACEDC0175A0CFE3CE68B906C0DC05BBCDE5A3C54B0B638854775960141), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:31.001Z
    2022-04-06T04:32:31.006Z
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7344190367674599673))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7344190367674599673))])
checkpoint.flowState.frozenFiber.hash: 
    61FC7E7F6F85961557FD5F4CAB0A56649675C529F20A8B7338B72034530C749D
    3E9239ACEDC0175A0CFE3CE68B906C0DC05BBCDE5A3C54B0B638854775960141
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:31.009Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:31.028Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7344190367674599673), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4621a169, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:31.009Z
    2022-04-06T04:32:31.028Z
checkpoint.checkpointState.sessions.SessionId(toLong=-7344190367674599673).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4621a169]


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:31.029Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-7344190367674599673).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:31.032Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:31.028Z
    2022-04-06T04:32:31.032Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:31.034Z
  Event: Error(exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:31.032Z
    2022-04-06T04:32:31.033Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=7508334942481923496, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:31.034Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:31.034Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:31.033Z
    2022-04-06T04:32:31.034Z
checkpoint.errorState.propagating: 
    false
    true
 {fiber-id=10000004, flow-id=46e33efb-4b7d-4a55-b707-86d1429aad4e, invocation_id=f27a3116-c70a-4505-8f5f-b07a63a189ba, invocation_timestamp=2022-04-06T04:32:30.930Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f27a3116-c70a-4505-8f5f-b07a63a189ba, session_timestamp=2022-04-06T04:32:30.930Z, thread-id=336, tx_id=9B05335952D4A9D70576928D9E489930C162B327E5C50A28A83C880584C8F94C}
[WARN ] 2022-04-06T04:32:31,039Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] error {fiber-id=10000004, flow-id=46e33efb-4b7d-4a55-b707-86d1429aad4e, invocation_id=f27a3116-c70a-4505-8f5f-b07a63a189ba, invocation_timestamp=2022-04-06T04:32:30.930Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f27a3116-c70a-4505-8f5f-b07a63a189ba, session_timestamp=2022-04-06T04:32:30.930Z, thread-id=336, tx_id=9B05335952D4A9D70576928D9E489930C162B327E5C50A28A83C880584C8F94C}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[WARN ] 2022-04-06T04:32:31,039Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {fiber-id=10000004, flow-id=46e33efb-4b7d-4a55-b707-86d1429aad4e, invocation_id=f27a3116-c70a-4505-8f5f-b07a63a189ba, invocation_timestamp=2022-04-06T04:32:30.930Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f27a3116-c70a-4505-8f5f-b07a63a189ba, session_timestamp=2022-04-06T04:32:30.930Z, thread-id=336, tx_id=9B05335952D4A9D70576928D9E489930C162B327E5C50A28A83C880584C8F94C}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[WARN ] 2022-04-06T04:32:31,062Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] errored, dumping all transitions:

 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:30.940Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[46e33efb-4b7d-4a55-b707-86d1429aad4e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f27a3116-c70a-4505-8f5f-b07a63a189ba, timestamp: 2022-04-06T04:32:30.930Z, entityType: Invocation, sessionId=f27a3116-c70a-4505-8f5f-b07a63a189ba, timestamp: 2022-04-06T04:32:30.930Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=326E2C04B4AE7C5B6D70F20DACB53C3570A15C479BECBE26E427044643CFCEF0), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3bb3c87b])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3bb3c87b])
    SignalFlowHasStarted(flowId=[46e33efb-4b7d-4a55-b707-86d1429aad4e])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=5659053396962462373), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-7344190367674599673), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-5659053396962462373--2075541177030994416-0-0), senderUUID=35ffe8a6-7f33-44bf-ba9d-ee68247e1c78))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.930Z
    2022-04-06T04:32:30.931Z
checkpoint.checkpointState.sessions.SessionId(toLong=-7344190367674599673): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5659053396962462373), deduplicationSeed=D-5659053396962462373--2075541177030994416)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3bb3c87b]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:30.941Z
  Event: EnterSubFlow(subFlowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.931Z
    2022-04-06T04:32:30.941Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:30.941Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:30.946Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7344190367674599673))]), maySkipCheckpoint=false, fiber=4EA48C7B72525E4E6DC12ED476E117C0C543D362E4BB975AAE83C2C1DDF09B32, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[46e33efb-4b7d-4a55-b707-86d1429aad4e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f27a3116-c70a-4505-8f5f-b07a63a189ba, timestamp: 2022-04-06T04:32:30.930Z, entityType: Invocation, sessionId=f27a3116-c70a-4505-8f5f-b07a63a189ba, timestamp: 2022-04-06T04:32:30.930Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-7344190367674599673)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5659053396962462373), deduplicationSeed=D-5659053396962462373--2075541177030994416)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7344190367674599673))]), frozenFiber=4EA48C7B72525E4E6DC12ED476E117C0C543D362E4BB975AAE83C2C1DDF09B32), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.941Z
    2022-04-06T04:32:30.944Z
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=326E2C04B4AE7C5B6D70F20DACB53C3570A15C479BECBE26E427044643CFCEF0)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7344190367674599673))]), frozenFiber=4EA48C7B72525E4E6DC12ED476E117C0C543D362E4BB975AAE83C2C1DDF09B32)
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:30.946Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.944Z
    2022-04-06T04:32:30.946Z
checkpoint.checkpointState.sessions.SessionId(toLong=-7344190367674599673).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:30.949Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.946Z
    2022-04-06T04:32:30.949Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:30.949Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:30.951Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.949Z
    2022-04-06T04:32:30.951Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:30.951Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:30.952Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:30.958Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7344190367674599673))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=61FC7E7F6F85961557FD5F4CAB0A56649675C529F20A8B7338B72034530C749D, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[46e33efb-4b7d-4a55-b707-86d1429aad4e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f27a3116-c70a-4505-8f5f-b07a63a189ba, timestamp: 2022-04-06T04:32:30.930Z, entityType: Invocation, sessionId=f27a3116-c70a-4505-8f5f-b07a63a189ba, timestamp: 2022-04-06T04:32:30.930Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-7344190367674599673)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5659053396962462373), deduplicationSeed=D-5659053396962462373--2075541177030994416)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7344190367674599673))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=61FC7E7F6F85961557FD5F4CAB0A56649675C529F20A8B7338B72034530C749D), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.951Z
    2022-04-06T04:32:30.956Z
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7344190367674599673))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7344190367674599673))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    4EA48C7B72525E4E6DC12ED476E117C0C543D362E4BB975AAE83C2C1DDF09B32
    61FC7E7F6F85961557FD5F4CAB0A56649675C529F20A8B7338B72034530C749D
checkpoint.flowIoRequest: 
    Receive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:30.960Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=5659053396962462373), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-5659053396962462373--2075541177030994416-2-0), senderUUID=35ffe8a6-7f33-44bf-ba9d-ee68247e1c78))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:30.960Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.958Z
    2022-04-06T04:32:30.960Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:31.001Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.960Z
    2022-04-06T04:32:31.001Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:31.008Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7344190367674599673))]), maySkipCheckpoint=false, fiber=3E9239ACEDC0175A0CFE3CE68B906C0DC05BBCDE5A3C54B0B638854775960141, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[46e33efb-4b7d-4a55-b707-86d1429aad4e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f27a3116-c70a-4505-8f5f-b07a63a189ba, timestamp: 2022-04-06T04:32:30.930Z, entityType: Invocation, sessionId=f27a3116-c70a-4505-8f5f-b07a63a189ba, timestamp: 2022-04-06T04:32:30.930Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-7344190367674599673)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5659053396962462373), deduplicationSeed=D-5659053396962462373--2075541177030994416)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7344190367674599673))]), frozenFiber=3E9239ACEDC0175A0CFE3CE68B906C0DC05BBCDE5A3C54B0B638854775960141), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:31.001Z
    2022-04-06T04:32:31.006Z
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7344190367674599673))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7344190367674599673))])
checkpoint.flowState.frozenFiber.hash: 
    61FC7E7F6F85961557FD5F4CAB0A56649675C529F20A8B7338B72034530C749D
    3E9239ACEDC0175A0CFE3CE68B906C0DC05BBCDE5A3C54B0B638854775960141
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:31.009Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:31.028Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7344190367674599673), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4621a169, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:31.009Z
    2022-04-06T04:32:31.028Z
checkpoint.checkpointState.sessions.SessionId(toLong=-7344190367674599673).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4621a169]


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:31.029Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-7344190367674599673).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:31.032Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:31.028Z
    2022-04-06T04:32:31.032Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:31.034Z
  Event: Error(exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:31.032Z
    2022-04-06T04:32:31.033Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=7508334942481923496, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:31.034Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:31.034Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:31.033Z
    2022-04-06T04:32:31.034Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] ---
  Timestamp: 2022-04-06T04:32:31.058Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, errorId=7508334942481923496)], sessions=[Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5659053396962462373), deduplicationSeed=D-5659053396962462373--2075541177030994416)], senderUUID=35ffe8a6-7f33-44bf-ba9d-ee68247e1c78)
    CreateTransaction
    RemoveCheckpoint(id=[46e33efb-4b7d-4a55-b707-86d1429aad4e], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4621a169])
    ReleaseSoftLocks(uuid=46e33efb-4b7d-4a55-b707-86d1429aad4e)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4621a169])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-7344190367674599673)])
    RemoveFlow(flowId=[46e33efb-4b7d-4a55-b707-86d1429aad4e], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=7508334942481923496, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f27a3116-c70a-4505-8f5f-b07a63a189ba, timestamp: 2022-04-06T04:32:30.930Z, entityType: Invocation, sessionId=f27a3116-c70a-4505-8f5f-b07a63a189ba, timestamp: 2022-04-06T04:32:30.930Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-7344190367674599673)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5659053396962462373), deduplicationSeed=D-5659053396962462373--2075541177030994416)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=5), flowState=net.corda.node.services.statemachine.FlowState$Finished@70b21018, errorState=Errored(errors=[FlowError(errorId=7508334942481923496, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=ExampleFlow$Acceptor@6f977a69, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=35ffe8a6-7f33-44bf-ba9d-ee68247e1c78, reloadCheckpointAfterSuspendCount=null, numberOfCommits=5, lock=java.util.concurrent.Semaphore@54aa67f9[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:31.034Z
    2022-04-06T04:32:31.039Z
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7344190367674599673))]), frozenFiber=3E9239ACEDC0175A0CFE3CE68B906C0DC05BBCDE5A3C54B0B638854775960141)
    net.corda.node.services.statemachine.FlowState$Finished@70b21018
checkpoint.checkpointState.numberOfCommits: 
    4
    5
numberOfCommits: 
    4
    5
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4621a169]
    []
isRemoved: 
    false
    true
 {fiber-id=10000004, flow-id=46e33efb-4b7d-4a55-b707-86d1429aad4e, invocation_id=f27a3116-c70a-4505-8f5f-b07a63a189ba, invocation_timestamp=2022-04-06T04:32:30.930Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f27a3116-c70a-4505-8f5f-b07a63a189ba, session_timestamp=2022-04-06T04:32:30.930Z, thread-id=336, tx_id=9B05335952D4A9D70576928D9E489930C162B327E5C50A28A83C880584C8F94C}
[WARN ] 2022-04-06T04:32:31,062Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [46e33efb-4b7d-4a55-b707-86d1429aad4e] error {fiber-id=10000004, flow-id=46e33efb-4b7d-4a55-b707-86d1429aad4e, invocation_id=f27a3116-c70a-4505-8f5f-b07a63a189ba, invocation_timestamp=2022-04-06T04:32:30.930Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f27a3116-c70a-4505-8f5f-b07a63a189ba, session_timestamp=2022-04-06T04:32:30.930Z, thread-id=336, tx_id=9B05335952D4A9D70576928D9E489930C162B327E5C50A28A83C880584C8F94C}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[INFO ] 2022-04-06T04:32:31,067Z [Mock network] corda.flow. - Flow raised an error: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=53e30aca-84a4-49eb-bfb3-a25475313577, invocation_id=b6dc5ad7-899f-4884-8f35-a3d56b01a577, invocation_timestamp=2022-04-06T04:32:30.815Z, origin=Only For Testing, session_id=b6dc5ad7-899f-4884-8f35-a3d56b01a577, session_timestamp=2022-04-06T04:32:30.815Z, thread-id=336}
[INFO ] 2022-04-06T04:32:31,068Z [Mock network] statemachine.StaffedFlowHospital. - Flow [53e30aca-84a4-49eb-bfb3-a25475313577] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=b6dc5ad7-899f-4884-8f35-a3d56b01a577, timestamp: 2022-04-06T04:32:30.815Z, entityType: Invocation, sessionId=b6dc5ad7-899f-4884-8f35-a3d56b01a577, timestamp: 2022-04-06T04:32:30.815Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=5659053396962462373)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=-7344190367674599673), deduplicationSeed=R-5659053396962462373--2075541177030994416)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))]), frozenFiber=E35B2B16A16777F7619CF4353CABB48BCAD957905115094C6E405E86F07A7BC9), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Receive, compatible=true), flowLogic=ExampleFlow$Initiator@2b4f8ef5, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@56ae2d81], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=2b31e776-39c7-468e-bb12-eda5c8f55afb, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@6af58ed0[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=53e30aca-84a4-49eb-bfb3-a25475313577, invocation_id=b6dc5ad7-899f-4884-8f35-a3d56b01a577, invocation_timestamp=2022-04-06T04:32:30.815Z, origin=Only For Testing, session_id=b6dc5ad7-899f-4884-8f35-a3d56b01a577, session_timestamp=2022-04-06T04:32:30.815Z, thread-id=336}
[INFO ] 2022-04-06T04:32:31,068Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=53e30aca-84a4-49eb-bfb3-a25475313577, invocation_id=b6dc5ad7-899f-4884-8f35-a3d56b01a577, invocation_timestamp=2022-04-06T04:32:30.815Z, origin=Only For Testing, session_id=b6dc5ad7-899f-4884-8f35-a3d56b01a577, session_timestamp=2022-04-06T04:32:30.815Z, thread-id=336}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at Received counter-flow exception from peer O=Mock Company 2, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:257) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:159) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
[INFO ] 2022-04-06T04:32:31,068Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=53e30aca-84a4-49eb-bfb3-a25475313577, invocation_id=b6dc5ad7-899f-4884-8f35-a3d56b01a577, invocation_timestamp=2022-04-06T04:32:30.815Z, origin=Only For Testing, session_id=b6dc5ad7-899f-4884-8f35-a3d56b01a577, session_timestamp=2022-04-06T04:32:30.815Z, thread-id=336}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at Received counter-flow exception from peer O=Mock Company 2, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:257) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:159) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
[WARN ] 2022-04-06T04:32:31,076Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [53e30aca-84a4-49eb-bfb3-a25475313577] errored, dumping all transitions:

 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:30.825Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[53e30aca-84a4-49eb-bfb3-a25475313577], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=b6dc5ad7-899f-4884-8f35-a3d56b01a577, timestamp: 2022-04-06T04:32:30.815Z, entityType: Invocation, sessionId=b6dc5ad7-899f-4884-8f35-a3d56b01a577, timestamp: 2022-04-06T04:32:30.815Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=5016A84AA3ECC262B4577DF843402D372E8A118360A2344DE393A6D3EEBD27AE), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3c4bf887])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3c4bf887])
    SignalFlowHasStarted(flowId=[53e30aca-84a4-49eb-bfb3-a25475313577])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3c4bf887]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:30.901Z
  Event: InitiateFlow(destination=O=Mock Company 2, L=London, C=GB, wellKnownParty=O=Mock Company 2, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[53e30aca-84a4-49eb-bfb3-a25475313577], sessionId=SessionId(toLong=5659053396962462373))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.821Z
    2022-04-06T04:32:30.901Z
checkpoint.checkpointState.sessions.SessionId(toLong=5659053396962462373): 
    null
    Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=5659053396962462373), additionalEntropy=-2075541177030994416)


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:30.902Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.901Z
    2022-04-06T04:32:30.902Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:30.905Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.902Z
    2022-04-06T04:32:30.905Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:30.905Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:30.917Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))=DF6024FC0768BA94D4AD5385E03A2DFD62BE400015FA10DAD393BA5E66A9B2C6}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=4A9EFFB87FF619BFE9B0B2A0B26F3D632448AAD6DF83FA165D058DDC7FA8C1B0, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[53e30aca-84a4-49eb-bfb3-a25475313577], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=b6dc5ad7-899f-4884-8f35-a3d56b01a577, timestamp: 2022-04-06T04:32:30.815Z, entityType: Invocation, sessionId=b6dc5ad7-899f-4884-8f35-a3d56b01a577, timestamp: 2022-04-06T04:32:30.815Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=5659053396962462373)=Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=5659053396962462373), additionalEntropy=-2075541177030994416)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))=DF6024FC0768BA94D4AD5385E03A2DFD62BE400015FA10DAD393BA5E66A9B2C6}, shouldRetrySend=false), frozenFiber=4A9EFFB87FF619BFE9B0B2A0B26F3D632448AAD6DF83FA165D058DDC7FA8C1B0), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.905Z
    2022-04-06T04:32:30.914Z
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=5016A84AA3ECC262B4577DF843402D372E8A118360A2344DE393A6D3EEBD27AE)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))=DF6024FC0768BA94D4AD5385E03A2DFD62BE400015FA10DAD393BA5E66A9B2C6}, shouldRetrySend=false), frozenFiber=4A9EFFB87FF619BFE9B0B2A0B26F3D632448AAD6DF83FA165D058DDC7FA8C1B0)
checkpoint.progressStep: 
    null
    Gathering the counterparty's signature.
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:30.926Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 2, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=5659053396962462373), initiationEntropy=-2075541177030994416, initiatorFlowClassName=ExampleFlow$Initiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-5659053396962462373--2075541177030994416-1-0), senderUUID=2b31e776-39c7-468e-bb12-eda5c8f55afb))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.914Z
    2022-04-06T04:32:30.917Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))=DF6024FC0768BA94D4AD5385E03A2DFD62BE400015FA10DAD393BA5E66A9B2C6}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))])
checkpoint.checkpointState.sessions.SessionId(toLong=5659053396962462373): 
    Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=5659053396962462373), additionalEntropy=-2075541177030994416)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-5659053396962462373--2075541177030994416)


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.012Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=5659053396962462373), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-7344190367674599673), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2faf6a5e, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.917Z
    2022-04-06T04:32:31.012Z
checkpoint.checkpointState.sessions.SessionId(toLong=5659053396962462373): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-5659053396962462373--2075541177030994416)
    Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7344190367674599673), deduplicationSeed=R-5659053396962462373--2075541177030994416)
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2faf6a5e]


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.012Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.015Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=5659053396962462373), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@8ca980f, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:31.012Z
    2022-04-06T04:32:31.015Z
checkpoint.checkpointState.sessions.SessionId(toLong=5659053396962462373).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2faf6a5e]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2faf6a5e, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@8ca980f]


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.016Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=5659053396962462373).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.016Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:31.015Z
    2022-04-06T04:32:31.016Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.021Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))=F00CF99C1F042E8F165EF9F4CFCD747EC095242998F6B19DDE7F17E04A42A08A}), maySkipCheckpoint=false, fiber=961C9CD13E8C8070A51688A951EA9491E676D74B3BB31FDAE474B508D32F44DF, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[53e30aca-84a4-49eb-bfb3-a25475313577], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=b6dc5ad7-899f-4884-8f35-a3d56b01a577, timestamp: 2022-04-06T04:32:30.815Z, entityType: Invocation, sessionId=b6dc5ad7-899f-4884-8f35-a3d56b01a577, timestamp: 2022-04-06T04:32:30.815Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=5659053396962462373)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7344190367674599673), deduplicationSeed=R-5659053396962462373--2075541177030994416)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))=F00CF99C1F042E8F165EF9F4CFCD747EC095242998F6B19DDE7F17E04A42A08A}), frozenFiber=961C9CD13E8C8070A51688A951EA9491E676D74B3BB31FDAE474B508D32F44DF), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2faf6a5e, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@8ca980f])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2faf6a5e, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@8ca980f])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:31.016Z
    2022-04-06T04:32:31.019Z
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))=F00CF99C1F042E8F165EF9F4CFCD747EC095242998F6B19DDE7F17E04A42A08A})
checkpoint.flowState.frozenFiber.hash: 
    4A9EFFB87FF619BFE9B0B2A0B26F3D632448AAD6DF83FA165D058DDC7FA8C1B0
    961C9CD13E8C8070A51688A951EA9491E676D74B3BB31FDAE474B508D32F44DF
checkpoint.flowIoRequest: 
    SendAndReceive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2faf6a5e, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@8ca980f]
    []
isFlowResumed: 
    true
    false


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.022Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 2, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7344190367674599673), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-5659053396962462373--2075541177030994416-2-0), senderUUID=2b31e776-39c7-468e-bb12-eda5c8f55afb))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.027Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))]), maySkipCheckpoint=false, fiber=E35B2B16A16777F7619CF4353CABB48BCAD957905115094C6E405E86F07A7BC9, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[53e30aca-84a4-49eb-bfb3-a25475313577], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=b6dc5ad7-899f-4884-8f35-a3d56b01a577, timestamp: 2022-04-06T04:32:30.815Z, entityType: Invocation, sessionId=b6dc5ad7-899f-4884-8f35-a3d56b01a577, timestamp: 2022-04-06T04:32:30.815Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=5659053396962462373)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7344190367674599673), deduplicationSeed=R-5659053396962462373--2075541177030994416)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))]), frozenFiber=E35B2B16A16777F7619CF4353CABB48BCAD957905115094C6E405E86F07A7BC9), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:31.021Z
    2022-04-06T04:32:31.026Z
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))=F00CF99C1F042E8F165EF9F4CFCD747EC095242998F6B19DDE7F17E04A42A08A})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))])
checkpoint.flowState.frozenFiber.hash: 
    961C9CD13E8C8070A51688A951EA9491E676D74B3BB31FDAE474B508D32F44DF
    E35B2B16A16777F7619CF4353CABB48BCAD957905115094C6E405E86F07A7BC9
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.027Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.066Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=5659053396962462373), payload=ErrorSessionMessage(flowException=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, errorId=7508334942481923496)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@56ae2d81, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:31.027Z
    2022-04-06T04:32:31.066Z
checkpoint.checkpointState.sessions.SessionId(toLong=5659053396962462373).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@56ae2d81]


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.066Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=5659053396962462373).receivedMessages.isEmpty: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=5659053396962462373).otherSideErrored: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.067Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:31.066Z
    2022-04-06T04:32:31.067Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.067Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.068Z
  Event: Error(exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=7508334942481923496, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.068Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.068Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:31.067Z
    2022-04-06T04:32:31.068Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=53e30aca-84a4-49eb-bfb3-a25475313577, invocation_id=b6dc5ad7-899f-4884-8f35-a3d56b01a577, invocation_timestamp=2022-04-06T04:32:30.815Z, origin=Only For Testing, session_id=b6dc5ad7-899f-4884-8f35-a3d56b01a577, session_timestamp=2022-04-06T04:32:30.815Z, thread-id=336}
[WARN ] 2022-04-06T04:32:31,076Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [53e30aca-84a4-49eb-bfb3-a25475313577] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=53e30aca-84a4-49eb-bfb3-a25475313577, invocation_id=b6dc5ad7-899f-4884-8f35-a3d56b01a577, invocation_timestamp=2022-04-06T04:32:30.815Z, origin=Only For Testing, session_id=b6dc5ad7-899f-4884-8f35-a3d56b01a577, session_timestamp=2022-04-06T04:32:30.815Z, thread-id=336}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at Received counter-flow exception from peer O=Mock Company 2, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:257) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:159) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
[WARN ] 2022-04-06T04:32:31,076Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=53e30aca-84a4-49eb-bfb3-a25475313577, invocation_id=b6dc5ad7-899f-4884-8f35-a3d56b01a577, invocation_timestamp=2022-04-06T04:32:30.815Z, origin=Only For Testing, session_id=b6dc5ad7-899f-4884-8f35-a3d56b01a577, session_timestamp=2022-04-06T04:32:30.815Z, thread-id=336}
[WARN ] 2022-04-06T04:32:31,089Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [53e30aca-84a4-49eb-bfb3-a25475313577] errored, dumping all transitions:

 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:30.825Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[53e30aca-84a4-49eb-bfb3-a25475313577], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=b6dc5ad7-899f-4884-8f35-a3d56b01a577, timestamp: 2022-04-06T04:32:30.815Z, entityType: Invocation, sessionId=b6dc5ad7-899f-4884-8f35-a3d56b01a577, timestamp: 2022-04-06T04:32:30.815Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=5016A84AA3ECC262B4577DF843402D372E8A118360A2344DE393A6D3EEBD27AE), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3c4bf887])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3c4bf887])
    SignalFlowHasStarted(flowId=[53e30aca-84a4-49eb-bfb3-a25475313577])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3c4bf887]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:30.901Z
  Event: InitiateFlow(destination=O=Mock Company 2, L=London, C=GB, wellKnownParty=O=Mock Company 2, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[53e30aca-84a4-49eb-bfb3-a25475313577], sessionId=SessionId(toLong=5659053396962462373))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.821Z
    2022-04-06T04:32:30.901Z
checkpoint.checkpointState.sessions.SessionId(toLong=5659053396962462373): 
    null
    Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=5659053396962462373), additionalEntropy=-2075541177030994416)


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:30.902Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.901Z
    2022-04-06T04:32:30.902Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:30.905Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.902Z
    2022-04-06T04:32:30.905Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:30.905Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:30.917Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))=DF6024FC0768BA94D4AD5385E03A2DFD62BE400015FA10DAD393BA5E66A9B2C6}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=4A9EFFB87FF619BFE9B0B2A0B26F3D632448AAD6DF83FA165D058DDC7FA8C1B0, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[53e30aca-84a4-49eb-bfb3-a25475313577], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=b6dc5ad7-899f-4884-8f35-a3d56b01a577, timestamp: 2022-04-06T04:32:30.815Z, entityType: Invocation, sessionId=b6dc5ad7-899f-4884-8f35-a3d56b01a577, timestamp: 2022-04-06T04:32:30.815Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=5659053396962462373)=Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=5659053396962462373), additionalEntropy=-2075541177030994416)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))=DF6024FC0768BA94D4AD5385E03A2DFD62BE400015FA10DAD393BA5E66A9B2C6}, shouldRetrySend=false), frozenFiber=4A9EFFB87FF619BFE9B0B2A0B26F3D632448AAD6DF83FA165D058DDC7FA8C1B0), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.905Z
    2022-04-06T04:32:30.914Z
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=5016A84AA3ECC262B4577DF843402D372E8A118360A2344DE393A6D3EEBD27AE)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))=DF6024FC0768BA94D4AD5385E03A2DFD62BE400015FA10DAD393BA5E66A9B2C6}, shouldRetrySend=false), frozenFiber=4A9EFFB87FF619BFE9B0B2A0B26F3D632448AAD6DF83FA165D058DDC7FA8C1B0)
checkpoint.progressStep: 
    null
    Gathering the counterparty's signature.
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:30.926Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 2, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=5659053396962462373), initiationEntropy=-2075541177030994416, initiatorFlowClassName=ExampleFlow$Initiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-5659053396962462373--2075541177030994416-1-0), senderUUID=2b31e776-39c7-468e-bb12-eda5c8f55afb))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.914Z
    2022-04-06T04:32:30.917Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))=DF6024FC0768BA94D4AD5385E03A2DFD62BE400015FA10DAD393BA5E66A9B2C6}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))])
checkpoint.checkpointState.sessions.SessionId(toLong=5659053396962462373): 
    Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=5659053396962462373), additionalEntropy=-2075541177030994416)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-5659053396962462373--2075541177030994416)


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.012Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=5659053396962462373), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-7344190367674599673), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2faf6a5e, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:30.917Z
    2022-04-06T04:32:31.012Z
checkpoint.checkpointState.sessions.SessionId(toLong=5659053396962462373): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-5659053396962462373--2075541177030994416)
    Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7344190367674599673), deduplicationSeed=R-5659053396962462373--2075541177030994416)
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2faf6a5e]


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.012Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.015Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=5659053396962462373), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@8ca980f, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:31.012Z
    2022-04-06T04:32:31.015Z
checkpoint.checkpointState.sessions.SessionId(toLong=5659053396962462373).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2faf6a5e]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2faf6a5e, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@8ca980f]


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.016Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=5659053396962462373).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.016Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:31.015Z
    2022-04-06T04:32:31.016Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.021Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))=F00CF99C1F042E8F165EF9F4CFCD747EC095242998F6B19DDE7F17E04A42A08A}), maySkipCheckpoint=false, fiber=961C9CD13E8C8070A51688A951EA9491E676D74B3BB31FDAE474B508D32F44DF, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[53e30aca-84a4-49eb-bfb3-a25475313577], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=b6dc5ad7-899f-4884-8f35-a3d56b01a577, timestamp: 2022-04-06T04:32:30.815Z, entityType: Invocation, sessionId=b6dc5ad7-899f-4884-8f35-a3d56b01a577, timestamp: 2022-04-06T04:32:30.815Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=5659053396962462373)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7344190367674599673), deduplicationSeed=R-5659053396962462373--2075541177030994416)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))=F00CF99C1F042E8F165EF9F4CFCD747EC095242998F6B19DDE7F17E04A42A08A}), frozenFiber=961C9CD13E8C8070A51688A951EA9491E676D74B3BB31FDAE474B508D32F44DF), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2faf6a5e, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@8ca980f])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2faf6a5e, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@8ca980f])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:31.016Z
    2022-04-06T04:32:31.019Z
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))=F00CF99C1F042E8F165EF9F4CFCD747EC095242998F6B19DDE7F17E04A42A08A})
checkpoint.flowState.frozenFiber.hash: 
    4A9EFFB87FF619BFE9B0B2A0B26F3D632448AAD6DF83FA165D058DDC7FA8C1B0
    961C9CD13E8C8070A51688A951EA9491E676D74B3BB31FDAE474B508D32F44DF
checkpoint.flowIoRequest: 
    SendAndReceive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2faf6a5e, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@8ca980f]
    []
isFlowResumed: 
    true
    false


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.022Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 2, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7344190367674599673), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-5659053396962462373--2075541177030994416-2-0), senderUUID=2b31e776-39c7-468e-bb12-eda5c8f55afb))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.027Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))]), maySkipCheckpoint=false, fiber=E35B2B16A16777F7619CF4353CABB48BCAD957905115094C6E405E86F07A7BC9, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[53e30aca-84a4-49eb-bfb3-a25475313577], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=b6dc5ad7-899f-4884-8f35-a3d56b01a577, timestamp: 2022-04-06T04:32:30.815Z, entityType: Invocation, sessionId=b6dc5ad7-899f-4884-8f35-a3d56b01a577, timestamp: 2022-04-06T04:32:30.815Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=5659053396962462373)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7344190367674599673), deduplicationSeed=R-5659053396962462373--2075541177030994416)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))]), frozenFiber=E35B2B16A16777F7619CF4353CABB48BCAD957905115094C6E405E86F07A7BC9), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:31.021Z
    2022-04-06T04:32:31.026Z
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))=F00CF99C1F042E8F165EF9F4CFCD747EC095242998F6B19DDE7F17E04A42A08A})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))])
checkpoint.flowState.frozenFiber.hash: 
    961C9CD13E8C8070A51688A951EA9491E676D74B3BB31FDAE474B508D32F44DF
    E35B2B16A16777F7619CF4353CABB48BCAD957905115094C6E405E86F07A7BC9
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.027Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.066Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=5659053396962462373), payload=ErrorSessionMessage(flowException=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, errorId=7508334942481923496)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@56ae2d81, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:31.027Z
    2022-04-06T04:32:31.066Z
checkpoint.checkpointState.sessions.SessionId(toLong=5659053396962462373).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@56ae2d81]


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.066Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=5659053396962462373).receivedMessages.isEmpty: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=5659053396962462373).otherSideErrored: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.067Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:31.066Z
    2022-04-06T04:32:31.067Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.067Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.068Z
  Event: Error(exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=7508334942481923496, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.068Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.068Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:31.067Z
    2022-04-06T04:32:31.068Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [53e30aca-84a4-49eb-bfb3-a25475313577] ---
  Timestamp: 2022-04-06T04:32:31.085Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=7508334942481923496)], sessions=[], senderUUID=2b31e776-39c7-468e-bb12-eda5c8f55afb)
    CreateTransaction
    RemoveCheckpoint(id=[53e30aca-84a4-49eb-bfb3-a25475313577], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@56ae2d81])
    ReleaseSoftLocks(uuid=53e30aca-84a4-49eb-bfb3-a25475313577)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@56ae2d81])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=5659053396962462373)])
    RemoveFlow(flowId=[53e30aca-84a4-49eb-bfb3-a25475313577], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=7508334942481923496, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=b6dc5ad7-899f-4884-8f35-a3d56b01a577, timestamp: 2022-04-06T04:32:30.815Z, entityType: Invocation, sessionId=b6dc5ad7-899f-4884-8f35-a3d56b01a577, timestamp: 2022-04-06T04:32:30.815Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=5659053396962462373)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=-7344190367674599673), deduplicationSeed=R-5659053396962462373--2075541177030994416)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=5), flowState=net.corda.node.services.statemachine.FlowState$Finished@70b21018, errorState=Errored(errors=[FlowError(errorId=7508334942481923496, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Gathering the counterparty's signature., flowIoRequest=Receive, compatible=true), flowLogic=ExampleFlow$Initiator@2b4f8ef5, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=2b31e776-39c7-468e-bb12-eda5c8f55afb, reloadCheckpointAfterSuspendCount=null, numberOfCommits=5, lock=java.util.concurrent.Semaphore@6af58ed0[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:31.068Z
    2022-04-06T04:32:31.076Z
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=5659053396962462373))]), frozenFiber=E35B2B16A16777F7619CF4353CABB48BCAD957905115094C6E405E86F07A7BC9)
    net.corda.node.services.statemachine.FlowState$Finished@70b21018
checkpoint.checkpointState.numberOfCommits: 
    4
    5
numberOfCommits: 
    4
    5
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@56ae2d81]
    []
isRemoved: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=53e30aca-84a4-49eb-bfb3-a25475313577, invocation_id=b6dc5ad7-899f-4884-8f35-a3d56b01a577, invocation_timestamp=2022-04-06T04:32:30.815Z, origin=Only For Testing, session_id=b6dc5ad7-899f-4884-8f35-a3d56b01a577, session_timestamp=2022-04-06T04:32:30.815Z, thread-id=336}
[WARN ] 2022-04-06T04:32:31,089Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [53e30aca-84a4-49eb-bfb3-a25475313577] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=53e30aca-84a4-49eb-bfb3-a25475313577, invocation_id=b6dc5ad7-899f-4884-8f35-a3d56b01a577, invocation_timestamp=2022-04-06T04:32:30.815Z, origin=Only For Testing, session_id=b6dc5ad7-899f-4884-8f35-a3d56b01a577, session_timestamp=2022-04-06T04:32:30.815Z, thread-id=336}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at Received counter-flow exception from peer O=Mock Company 2, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:257) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:159) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
[INFO ] 2022-04-06T04:32:31,093Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2022-04-06T04:32:31,107Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-06T04:32:31,107Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:31,108Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-5) {}
[INFO ] 2022-04-06T04:32:31,121Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-06T04:32:31,121Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:31,123Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-6) {}
[INFO ] 2022-04-06T04:32:31,135Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-06T04:32:31,135Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:31,229Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220406-043231.136-2B023E1D62E50AFC/nodes/0/cordapps] {}
[INFO ] 2022-04-06T04:32:31,229Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043231.136-2B023E1D62E50AFC/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043231.136-2B023E1D62E50AFC/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-06T04:32:31,230Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043231.136-2B023E1D62E50AFC/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-06T04:32:31,235Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043231.136-2B023E1D62E50AFC/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-06T04:32:31,257Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:31,258Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-06T04:32:31,259Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-06T04:32:31,262Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-06T04:32:31,262Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLCpb2Zn1LaiVuHZbQNhzHb11PEuvQVFATW6xebWN42gTV, alias: identity-private-key {}
[INFO ] 2022-04-06T04:32:31,271Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-06T04:32:31,279Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-06T04:32:31.136Z
      epoch=1
  } {}
[INFO ] 2022-04-06T04:32:31,836Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-06T04:32:31,840Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-06T04:32:31,840Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-06T04:32:31,984Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-06T04:32:31,988Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-06T04:32:31,993Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219551989), owningKey=DLCpb2Zn1LaiVuHZbQNhzHb11PEuvQVFATW6xebWN42gTV {}
[INFO ] 2022-04-06T04:32:31,993Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:32,007Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219551989) {}
[INFO ] 2022-04-06T04:32:32,019Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-06T04:32:32,020Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-06T04:32:32,020Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-06T04:32:32,026Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219551989), owningKey=DLCpb2Zn1LaiVuHZbQNhzHb11PEuvQVFATW6xebWN42gTV {}
[INFO ] 2022-04-06T04:32:32,026Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:32,057Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F205A04A1F0201841C3F475344FC1871245793E3B7970D264C4F47D7B1784D2A uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-06T04:32:32,062Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2022-04-06T04:32:32,079Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219551989) {}
[INFO ] 2022-04-06T04:32:32,079Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219551989), owningKey=DLCpb2Zn1LaiVuHZbQNhzHb11PEuvQVFATW6xebWN42gTV {}
[INFO ] 2022-04-06T04:32:32,079Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:32,079Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219551989), owningKey=DLCpb2Zn1LaiVuHZbQNhzHb11PEuvQVFATW6xebWN42gTV {}
[INFO ] 2022-04-06T04:32:32,079Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:32,087Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220406-043231.136-2B023E1D62E50AFC/nodes/1/cordapps] {}
[INFO ] 2022-04-06T04:32:32,087Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043231.136-2B023E1D62E50AFC/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043231.136-2B023E1D62E50AFC/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-06T04:32:32,087Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043231.136-2B023E1D62E50AFC/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-06T04:32:32,093Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043231.136-2B023E1D62E50AFC/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-06T04:32:32,122Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:32,124Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-06T04:32:32,125Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-06T04:32:32,165Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-06T04:32:32,165Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL8fMiVdUfjJnHnR1ftPszwLKzSzLmUykZAfSmzvXVvQQm, alias: identity-private-key {}
[INFO ] 2022-04-06T04:32:32,174Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-06T04:32:32,176Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-06T04:32:31.136Z
      epoch=1
  } {}
[INFO ] 2022-04-06T04:32:32,600Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-06T04:32:32,602Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:32,602Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:32,725Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:32,730Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-06T04:32:32,733Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219552730), owningKey=DL8fMiVdUfjJnHnR1ftPszwLKzSzLmUykZAfSmzvXVvQQm {}
[INFO ] 2022-04-06T04:32:32,733Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:32,739Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219552730) {}
[INFO ] 2022-04-06T04:32:32,744Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-06T04:32:32,745Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-06T04:32:32,745Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-06T04:32:32,750Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219552730), owningKey=DL8fMiVdUfjJnHnR1ftPszwLKzSzLmUykZAfSmzvXVvQQm {}
[INFO ] 2022-04-06T04:32:32,750Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:32,781Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F205A04A1F0201841C3F475344FC1871245793E3B7970D264C4F47D7B1784D2A uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-06T04:32:32,799Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219552730) {}
[INFO ] 2022-04-06T04:32:32,801Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219551989), owningKey=DLCpb2Zn1LaiVuHZbQNhzHb11PEuvQVFATW6xebWN42gTV {}
[INFO ] 2022-04-06T04:32:32,801Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:32,810Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219552730), owningKey=DL8fMiVdUfjJnHnR1ftPszwLKzSzLmUykZAfSmzvXVvQQm {}
[INFO ] 2022-04-06T04:32:32,810Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:32,819Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219552730), owningKey=DL8fMiVdUfjJnHnR1ftPszwLKzSzLmUykZAfSmzvXVvQQm {}
[INFO ] 2022-04-06T04:32:32,819Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:32,819Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219552730), owningKey=DL8fMiVdUfjJnHnR1ftPszwLKzSzLmUykZAfSmzvXVvQQm {}
[INFO ] 2022-04-06T04:32:32,819Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:32,827Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220406-043231.136-2B023E1D62E50AFC/nodes/2/cordapps] {}
[INFO ] 2022-04-06T04:32:32,828Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043231.136-2B023E1D62E50AFC/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043231.136-2B023E1D62E50AFC/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-06T04:32:32,828Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043231.136-2B023E1D62E50AFC/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-06T04:32:32,835Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043231.136-2B023E1D62E50AFC/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-06T04:32:32,859Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:32,860Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-06T04:32:32,862Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-06T04:32:32,905Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-06T04:32:32,905Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLHFikqUENUZgzKGwdcYCT3tvYUrx5XLfVhmtes3af3Cf5, alias: identity-private-key {}
[INFO ] 2022-04-06T04:32:32,911Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-06T04:32:32,913Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-06T04:32:31.136Z
      epoch=1
  } {}
[INFO ] 2022-04-06T04:32:33,319Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-06T04:32:33,320Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:33,320Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:33,494Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:33,507Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-06T04:32:33,509Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219553507), owningKey=DLHFikqUENUZgzKGwdcYCT3tvYUrx5XLfVhmtes3af3Cf5 {}
[INFO ] 2022-04-06T04:32:33,509Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:33,516Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219553507) {}
[INFO ] 2022-04-06T04:32:33,521Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-06T04:32:33,522Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-06T04:32:33,522Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-06T04:32:33,527Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219553507), owningKey=DLHFikqUENUZgzKGwdcYCT3tvYUrx5XLfVhmtes3af3Cf5 {}
[INFO ] 2022-04-06T04:32:33,527Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:33,558Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F205A04A1F0201841C3F475344FC1871245793E3B7970D264C4F47D7B1784D2A uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-06T04:32:33,577Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219553507) {}
[INFO ] 2022-04-06T04:32:33,578Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219551989), owningKey=DLCpb2Zn1LaiVuHZbQNhzHb11PEuvQVFATW6xebWN42gTV {}
[INFO ] 2022-04-06T04:32:33,578Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:33,588Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219553507), owningKey=DLHFikqUENUZgzKGwdcYCT3tvYUrx5XLfVhmtes3af3Cf5 {}
[INFO ] 2022-04-06T04:32:33,588Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:33,598Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219552730), owningKey=DL8fMiVdUfjJnHnR1ftPszwLKzSzLmUykZAfSmzvXVvQQm {}
[INFO ] 2022-04-06T04:32:33,598Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:33,609Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219553507), owningKey=DLHFikqUENUZgzKGwdcYCT3tvYUrx5XLfVhmtes3af3Cf5 {}
[INFO ] 2022-04-06T04:32:33,609Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:33,616Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219553507), owningKey=DLHFikqUENUZgzKGwdcYCT3tvYUrx5XLfVhmtes3af3Cf5 {}
[INFO ] 2022-04-06T04:32:33,616Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:33,616Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219553507), owningKey=DLHFikqUENUZgzKGwdcYCT3tvYUrx5XLfVhmtes3af3Cf5 {}
[INFO ] 2022-04-06T04:32:33,616Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:33,725Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000006, flow-id=554f21b6-b132-4087-9512-4d55a8763c81, invocation_id=79788999-8a8b-435b-aa75-51bf491ed4c2, invocation_timestamp=2022-04-06T04:32:33.707Z, origin=O=Mock Company 1, L=London, C=GB, session_id=79788999-8a8b-435b-aa75-51bf491ed4c2, session_timestamp=2022-04-06T04:32:33.707Z, thread-id=490, tx_id=E6083BE603146C533CD478B33798B3052212A3C40313D15669D8BAA668D4976E}
[INFO ] 2022-04-06T04:32:33,736Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=554f21b6-b132-4087-9512-4d55a8763c81, invocation_id=79788999-8a8b-435b-aa75-51bf491ed4c2, invocation_timestamp=2022-04-06T04:32:33.707Z, origin=O=Mock Company 1, L=London, C=GB, session_id=79788999-8a8b-435b-aa75-51bf491ed4c2, session_timestamp=2022-04-06T04:32:33.707Z, thread-id=490, tx_id=E6083BE603146C533CD478B33798B3052212A3C40313D15669D8BAA668D4976E}
[INFO ] 2022-04-06T04:32:33,798Z [Mock network] corda.flow. - Flow raised an error: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null. Sending it to flow hospital to be triaged. {fiber-id=10000006, flow-id=554f21b6-b132-4087-9512-4d55a8763c81, invocation_id=79788999-8a8b-435b-aa75-51bf491ed4c2, invocation_timestamp=2022-04-06T04:32:33.707Z, origin=O=Mock Company 1, L=London, C=GB, session_id=79788999-8a8b-435b-aa75-51bf491ed4c2, session_timestamp=2022-04-06T04:32:33.707Z, thread-id=490, tx_id=E6083BE603146C533CD478B33798B3052212A3C40313D15669D8BAA668D4976E}
[INFO ] 2022-04-06T04:32:33,798Z [Mock network] statemachine.StaffedFlowHospital. - Flow [554f21b6-b132-4087-9512-4d55a8763c81] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=79788999-8a8b-435b-aa75-51bf491ed4c2, timestamp: 2022-04-06T04:32:33.707Z, entityType: Invocation, sessionId=79788999-8a8b-435b-aa75-51bf491ed4c2, timestamp: 2022-04-06T04:32:33.707Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=3975198822564720704)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7721588229647102489), deduplicationSeed=D-7721588229647102489--3111425330441931230)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3975198822564720704))]), frozenFiber=2E0743E50CBE9581AE335C239FBECB04A1FD3F74C4182A93C261F16BC6E0B7F6), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=ExampleFlow$Acceptor@6c3ec554, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@50383467], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=693523d6-4129-4e9d-aac8-b76c681d036a, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@86f2e1b[Permits = 0]) {fiber-id=10000006, flow-id=554f21b6-b132-4087-9512-4d55a8763c81, invocation_id=79788999-8a8b-435b-aa75-51bf491ed4c2, invocation_timestamp=2022-04-06T04:32:33.707Z, origin=O=Mock Company 1, L=London, C=GB, session_id=79788999-8a8b-435b-aa75-51bf491ed4c2, session_timestamp=2022-04-06T04:32:33.707Z, thread-id=490, tx_id=E6083BE603146C533CD478B33798B3052212A3C40313D15669D8BAA668D4976E}
[INFO ] 2022-04-06T04:32:33,798Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {fiber-id=10000006, flow-id=554f21b6-b132-4087-9512-4d55a8763c81, invocation_id=79788999-8a8b-435b-aa75-51bf491ed4c2, invocation_timestamp=2022-04-06T04:32:33.707Z, origin=O=Mock Company 1, L=London, C=GB, session_id=79788999-8a8b-435b-aa75-51bf491ed4c2, session_timestamp=2022-04-06T04:32:33.707Z, thread-id=490, tx_id=E6083BE603146C533CD478B33798B3052212A3C40313D15669D8BAA668D4976E}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[INFO ] 2022-04-06T04:32:33,798Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {fiber-id=10000006, flow-id=554f21b6-b132-4087-9512-4d55a8763c81, invocation_id=79788999-8a8b-435b-aa75-51bf491ed4c2, invocation_timestamp=2022-04-06T04:32:33.707Z, origin=O=Mock Company 1, L=London, C=GB, session_id=79788999-8a8b-435b-aa75-51bf491ed4c2, session_timestamp=2022-04-06T04:32:33.707Z, thread-id=490, tx_id=E6083BE603146C533CD478B33798B3052212A3C40313D15669D8BAA668D4976E}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[WARN ] 2022-04-06T04:32:33,803Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [554f21b6-b132-4087-9512-4d55a8763c81] errored, dumping all transitions:

 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.716Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[554f21b6-b132-4087-9512-4d55a8763c81], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=79788999-8a8b-435b-aa75-51bf491ed4c2, timestamp: 2022-04-06T04:32:33.707Z, entityType: Invocation, sessionId=79788999-8a8b-435b-aa75-51bf491ed4c2, timestamp: 2022-04-06T04:32:33.707Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=F168A9B34C335A9E88F9245E65AC7E23D7CBDD212AE82B073E07B21A37D6B371), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@c246aa3])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@c246aa3])
    SignalFlowHasStarted(flowId=[554f21b6-b132-4087-9512-4d55a8763c81])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7721588229647102489), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=3975198822564720704), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-7721588229647102489--3111425330441931230-0-0), senderUUID=693523d6-4129-4e9d-aac8-b76c681d036a))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.707Z
    2022-04-06T04:32:33.708Z
checkpoint.checkpointState.sessions.SessionId(toLong=3975198822564720704): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7721588229647102489), deduplicationSeed=D-7721588229647102489--3111425330441931230)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@c246aa3]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.717Z
  Event: EnterSubFlow(subFlowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.708Z
    2022-04-06T04:32:33.717Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.717Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.723Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3975198822564720704))]), maySkipCheckpoint=false, fiber=D0793F5CC169C63A5F800AAB50783A24551AC011157EDCD9217024AB04A4BF27, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[554f21b6-b132-4087-9512-4d55a8763c81], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=79788999-8a8b-435b-aa75-51bf491ed4c2, timestamp: 2022-04-06T04:32:33.707Z, entityType: Invocation, sessionId=79788999-8a8b-435b-aa75-51bf491ed4c2, timestamp: 2022-04-06T04:32:33.707Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=3975198822564720704)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7721588229647102489), deduplicationSeed=D-7721588229647102489--3111425330441931230)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3975198822564720704))]), frozenFiber=D0793F5CC169C63A5F800AAB50783A24551AC011157EDCD9217024AB04A4BF27), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.717Z
    2022-04-06T04:32:33.721Z
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=F168A9B34C335A9E88F9245E65AC7E23D7CBDD212AE82B073E07B21A37D6B371)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3975198822564720704))]), frozenFiber=D0793F5CC169C63A5F800AAB50783A24551AC011157EDCD9217024AB04A4BF27)
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.723Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.721Z
    2022-04-06T04:32:33.723Z
checkpoint.checkpointState.sessions.SessionId(toLong=3975198822564720704).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.725Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.723Z
    2022-04-06T04:32:33.725Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.726Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.725Z
    2022-04-06T04:32:33.726Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.727Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.726Z
    2022-04-06T04:32:33.727Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.727Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.728Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.727Z
    2022-04-06T04:32:33.728Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.734Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3975198822564720704))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=8119A3F265F04792CFE1D3D724483DA3C2D8450F8B09F3FDCA645B4737972939, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[554f21b6-b132-4087-9512-4d55a8763c81], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=79788999-8a8b-435b-aa75-51bf491ed4c2, timestamp: 2022-04-06T04:32:33.707Z, entityType: Invocation, sessionId=79788999-8a8b-435b-aa75-51bf491ed4c2, timestamp: 2022-04-06T04:32:33.707Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=3975198822564720704)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7721588229647102489), deduplicationSeed=D-7721588229647102489--3111425330441931230)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3975198822564720704))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=8119A3F265F04792CFE1D3D724483DA3C2D8450F8B09F3FDCA645B4737972939), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.728Z
    2022-04-06T04:32:33.732Z
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3975198822564720704))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3975198822564720704))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    D0793F5CC169C63A5F800AAB50783A24551AC011157EDCD9217024AB04A4BF27
    8119A3F265F04792CFE1D3D724483DA3C2D8450F8B09F3FDCA645B4737972939
checkpoint.flowIoRequest: 
    Receive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.735Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7721588229647102489), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-7721588229647102489--3111425330441931230-2-0), senderUUID=693523d6-4129-4e9d-aac8-b76c681d036a))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.736Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.734Z
    2022-04-06T04:32:33.736Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.769Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.736Z
    2022-04-06T04:32:33.769Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.775Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3975198822564720704))]), maySkipCheckpoint=false, fiber=2E0743E50CBE9581AE335C239FBECB04A1FD3F74C4182A93C261F16BC6E0B7F6, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[554f21b6-b132-4087-9512-4d55a8763c81], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=79788999-8a8b-435b-aa75-51bf491ed4c2, timestamp: 2022-04-06T04:32:33.707Z, entityType: Invocation, sessionId=79788999-8a8b-435b-aa75-51bf491ed4c2, timestamp: 2022-04-06T04:32:33.707Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=3975198822564720704)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7721588229647102489), deduplicationSeed=D-7721588229647102489--3111425330441931230)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3975198822564720704))]), frozenFiber=2E0743E50CBE9581AE335C239FBECB04A1FD3F74C4182A93C261F16BC6E0B7F6), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.769Z
    2022-04-06T04:32:33.772Z
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3975198822564720704))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3975198822564720704))])
checkpoint.flowState.frozenFiber.hash: 
    8119A3F265F04792CFE1D3D724483DA3C2D8450F8B09F3FDCA645B4737972939
    2E0743E50CBE9581AE335C239FBECB04A1FD3F74C4182A93C261F16BC6E0B7F6
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.775Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.793Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3975198822564720704), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@50383467, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.775Z
    2022-04-06T04:32:33.793Z
checkpoint.checkpointState.sessions.SessionId(toLong=3975198822564720704).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@50383467]


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.794Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.793Z
    2022-04-06T04:32:33.794Z
checkpoint.checkpointState.sessions.SessionId(toLong=3975198822564720704).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.797Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.794Z
    2022-04-06T04:32:33.797Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.799Z
  Event: Error(exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.797Z
    2022-04-06T04:32:33.798Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-835204703456708077, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.799Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.799Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.798Z
    2022-04-06T04:32:33.799Z
checkpoint.errorState.propagating: 
    false
    true
 {fiber-id=10000006, flow-id=554f21b6-b132-4087-9512-4d55a8763c81, invocation_id=79788999-8a8b-435b-aa75-51bf491ed4c2, invocation_timestamp=2022-04-06T04:32:33.707Z, origin=O=Mock Company 1, L=London, C=GB, session_id=79788999-8a8b-435b-aa75-51bf491ed4c2, session_timestamp=2022-04-06T04:32:33.707Z, thread-id=490, tx_id=E6083BE603146C533CD478B33798B3052212A3C40313D15669D8BAA668D4976E}
[WARN ] 2022-04-06T04:32:33,803Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [554f21b6-b132-4087-9512-4d55a8763c81] error {fiber-id=10000006, flow-id=554f21b6-b132-4087-9512-4d55a8763c81, invocation_id=79788999-8a8b-435b-aa75-51bf491ed4c2, invocation_timestamp=2022-04-06T04:32:33.707Z, origin=O=Mock Company 1, L=London, C=GB, session_id=79788999-8a8b-435b-aa75-51bf491ed4c2, session_timestamp=2022-04-06T04:32:33.707Z, thread-id=490, tx_id=E6083BE603146C533CD478B33798B3052212A3C40313D15669D8BAA668D4976E}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[WARN ] 2022-04-06T04:32:33,804Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {fiber-id=10000006, flow-id=554f21b6-b132-4087-9512-4d55a8763c81, invocation_id=79788999-8a8b-435b-aa75-51bf491ed4c2, invocation_timestamp=2022-04-06T04:32:33.707Z, origin=O=Mock Company 1, L=London, C=GB, session_id=79788999-8a8b-435b-aa75-51bf491ed4c2, session_timestamp=2022-04-06T04:32:33.707Z, thread-id=490, tx_id=E6083BE603146C533CD478B33798B3052212A3C40313D15669D8BAA668D4976E}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[WARN ] 2022-04-06T04:32:33,822Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [554f21b6-b132-4087-9512-4d55a8763c81] errored, dumping all transitions:

 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.716Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[554f21b6-b132-4087-9512-4d55a8763c81], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=79788999-8a8b-435b-aa75-51bf491ed4c2, timestamp: 2022-04-06T04:32:33.707Z, entityType: Invocation, sessionId=79788999-8a8b-435b-aa75-51bf491ed4c2, timestamp: 2022-04-06T04:32:33.707Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=F168A9B34C335A9E88F9245E65AC7E23D7CBDD212AE82B073E07B21A37D6B371), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@c246aa3])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@c246aa3])
    SignalFlowHasStarted(flowId=[554f21b6-b132-4087-9512-4d55a8763c81])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7721588229647102489), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=3975198822564720704), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-7721588229647102489--3111425330441931230-0-0), senderUUID=693523d6-4129-4e9d-aac8-b76c681d036a))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.707Z
    2022-04-06T04:32:33.708Z
checkpoint.checkpointState.sessions.SessionId(toLong=3975198822564720704): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7721588229647102489), deduplicationSeed=D-7721588229647102489--3111425330441931230)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@c246aa3]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.717Z
  Event: EnterSubFlow(subFlowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.708Z
    2022-04-06T04:32:33.717Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.717Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.723Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3975198822564720704))]), maySkipCheckpoint=false, fiber=D0793F5CC169C63A5F800AAB50783A24551AC011157EDCD9217024AB04A4BF27, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[554f21b6-b132-4087-9512-4d55a8763c81], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=79788999-8a8b-435b-aa75-51bf491ed4c2, timestamp: 2022-04-06T04:32:33.707Z, entityType: Invocation, sessionId=79788999-8a8b-435b-aa75-51bf491ed4c2, timestamp: 2022-04-06T04:32:33.707Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=3975198822564720704)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7721588229647102489), deduplicationSeed=D-7721588229647102489--3111425330441931230)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3975198822564720704))]), frozenFiber=D0793F5CC169C63A5F800AAB50783A24551AC011157EDCD9217024AB04A4BF27), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.717Z
    2022-04-06T04:32:33.721Z
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=F168A9B34C335A9E88F9245E65AC7E23D7CBDD212AE82B073E07B21A37D6B371)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3975198822564720704))]), frozenFiber=D0793F5CC169C63A5F800AAB50783A24551AC011157EDCD9217024AB04A4BF27)
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.723Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.721Z
    2022-04-06T04:32:33.723Z
checkpoint.checkpointState.sessions.SessionId(toLong=3975198822564720704).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.725Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.723Z
    2022-04-06T04:32:33.725Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.726Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.725Z
    2022-04-06T04:32:33.726Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.727Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.726Z
    2022-04-06T04:32:33.727Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.727Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.728Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.727Z
    2022-04-06T04:32:33.728Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.734Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3975198822564720704))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=8119A3F265F04792CFE1D3D724483DA3C2D8450F8B09F3FDCA645B4737972939, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[554f21b6-b132-4087-9512-4d55a8763c81], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=79788999-8a8b-435b-aa75-51bf491ed4c2, timestamp: 2022-04-06T04:32:33.707Z, entityType: Invocation, sessionId=79788999-8a8b-435b-aa75-51bf491ed4c2, timestamp: 2022-04-06T04:32:33.707Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=3975198822564720704)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7721588229647102489), deduplicationSeed=D-7721588229647102489--3111425330441931230)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3975198822564720704))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=8119A3F265F04792CFE1D3D724483DA3C2D8450F8B09F3FDCA645B4737972939), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.728Z
    2022-04-06T04:32:33.732Z
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3975198822564720704))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3975198822564720704))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    D0793F5CC169C63A5F800AAB50783A24551AC011157EDCD9217024AB04A4BF27
    8119A3F265F04792CFE1D3D724483DA3C2D8450F8B09F3FDCA645B4737972939
checkpoint.flowIoRequest: 
    Receive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.735Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7721588229647102489), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-7721588229647102489--3111425330441931230-2-0), senderUUID=693523d6-4129-4e9d-aac8-b76c681d036a))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.736Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.734Z
    2022-04-06T04:32:33.736Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.769Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.736Z
    2022-04-06T04:32:33.769Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.775Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3975198822564720704))]), maySkipCheckpoint=false, fiber=2E0743E50CBE9581AE335C239FBECB04A1FD3F74C4182A93C261F16BC6E0B7F6, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[554f21b6-b132-4087-9512-4d55a8763c81], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=79788999-8a8b-435b-aa75-51bf491ed4c2, timestamp: 2022-04-06T04:32:33.707Z, entityType: Invocation, sessionId=79788999-8a8b-435b-aa75-51bf491ed4c2, timestamp: 2022-04-06T04:32:33.707Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=3975198822564720704)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7721588229647102489), deduplicationSeed=D-7721588229647102489--3111425330441931230)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3975198822564720704))]), frozenFiber=2E0743E50CBE9581AE335C239FBECB04A1FD3F74C4182A93C261F16BC6E0B7F6), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.769Z
    2022-04-06T04:32:33.772Z
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3975198822564720704))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3975198822564720704))])
checkpoint.flowState.frozenFiber.hash: 
    8119A3F265F04792CFE1D3D724483DA3C2D8450F8B09F3FDCA645B4737972939
    2E0743E50CBE9581AE335C239FBECB04A1FD3F74C4182A93C261F16BC6E0B7F6
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.775Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.793Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3975198822564720704), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@50383467, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.775Z
    2022-04-06T04:32:33.793Z
checkpoint.checkpointState.sessions.SessionId(toLong=3975198822564720704).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@50383467]


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.794Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.793Z
    2022-04-06T04:32:33.794Z
checkpoint.checkpointState.sessions.SessionId(toLong=3975198822564720704).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.797Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.794Z
    2022-04-06T04:32:33.797Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.799Z
  Event: Error(exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.797Z
    2022-04-06T04:32:33.798Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-835204703456708077, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.799Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.799Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.798Z
    2022-04-06T04:32:33.799Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [554f21b6-b132-4087-9512-4d55a8763c81] ---
  Timestamp: 2022-04-06T04:32:33.818Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, errorId=-835204703456708077)], sessions=[Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7721588229647102489), deduplicationSeed=D-7721588229647102489--3111425330441931230)], senderUUID=693523d6-4129-4e9d-aac8-b76c681d036a)
    CreateTransaction
    RemoveCheckpoint(id=[554f21b6-b132-4087-9512-4d55a8763c81], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@50383467])
    ReleaseSoftLocks(uuid=554f21b6-b132-4087-9512-4d55a8763c81)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@50383467])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=3975198822564720704)])
    RemoveFlow(flowId=[554f21b6-b132-4087-9512-4d55a8763c81], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-835204703456708077, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=79788999-8a8b-435b-aa75-51bf491ed4c2, timestamp: 2022-04-06T04:32:33.707Z, entityType: Invocation, sessionId=79788999-8a8b-435b-aa75-51bf491ed4c2, timestamp: 2022-04-06T04:32:33.707Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=3975198822564720704)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7721588229647102489), deduplicationSeed=D-7721588229647102489--3111425330441931230)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=5), flowState=net.corda.node.services.statemachine.FlowState$Finished@70b21018, errorState=Errored(errors=[FlowError(errorId=-835204703456708077, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=ExampleFlow$Acceptor@6c3ec554, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=693523d6-4129-4e9d-aac8-b76c681d036a, reloadCheckpointAfterSuspendCount=null, numberOfCommits=5, lock=java.util.concurrent.Semaphore@86f2e1b[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.799Z
    2022-04-06T04:32:33.804Z
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=3975198822564720704))]), frozenFiber=2E0743E50CBE9581AE335C239FBECB04A1FD3F74C4182A93C261F16BC6E0B7F6)
    net.corda.node.services.statemachine.FlowState$Finished@70b21018
checkpoint.checkpointState.numberOfCommits: 
    4
    5
numberOfCommits: 
    4
    5
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@50383467]
    []
isRemoved: 
    false
    true
 {fiber-id=10000006, flow-id=554f21b6-b132-4087-9512-4d55a8763c81, invocation_id=79788999-8a8b-435b-aa75-51bf491ed4c2, invocation_timestamp=2022-04-06T04:32:33.707Z, origin=O=Mock Company 1, L=London, C=GB, session_id=79788999-8a8b-435b-aa75-51bf491ed4c2, session_timestamp=2022-04-06T04:32:33.707Z, thread-id=490, tx_id=E6083BE603146C533CD478B33798B3052212A3C40313D15669D8BAA668D4976E}
[WARN ] 2022-04-06T04:32:33,822Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [554f21b6-b132-4087-9512-4d55a8763c81] error {fiber-id=10000006, flow-id=554f21b6-b132-4087-9512-4d55a8763c81, invocation_id=79788999-8a8b-435b-aa75-51bf491ed4c2, invocation_timestamp=2022-04-06T04:32:33.707Z, origin=O=Mock Company 1, L=London, C=GB, session_id=79788999-8a8b-435b-aa75-51bf491ed4c2, session_timestamp=2022-04-06T04:32:33.707Z, thread-id=490, tx_id=E6083BE603146C533CD478B33798B3052212A3C40313D15669D8BAA668D4976E}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[INFO ] 2022-04-06T04:32:33,827Z [Mock network] corda.flow. - Flow raised an error: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=97f996c5-dd6a-473f-a52f-7745fd463d99, invocation_id=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, invocation_timestamp=2022-04-06T04:32:33.619Z, origin=Only For Testing, session_id=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, session_timestamp=2022-04-06T04:32:33.619Z, thread-id=490}
[INFO ] 2022-04-06T04:32:33,828Z [Mock network] statemachine.StaffedFlowHospital. - Flow [97f996c5-dd6a-473f-a52f-7745fd463d99] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, timestamp: 2022-04-06T04:32:33.619Z, entityType: Invocation, sessionId=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, timestamp: 2022-04-06T04:32:33.619Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=7721588229647102489)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=3975198822564720704), deduplicationSeed=R-7721588229647102489--3111425330441931230)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))]), frozenFiber=5A25E81FBD944A72886DE89C2CC787DDEC2151F8F4A071CDDF9340714541110A), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Receive, compatible=true), flowLogic=ExampleFlow$Initiator@13c9ec43, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2574cbf6], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=bfed9be8-7430-4f1a-a41b-636cc5c8d685, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@420c8c4d[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=97f996c5-dd6a-473f-a52f-7745fd463d99, invocation_id=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, invocation_timestamp=2022-04-06T04:32:33.619Z, origin=Only For Testing, session_id=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, session_timestamp=2022-04-06T04:32:33.619Z, thread-id=490}
[INFO ] 2022-04-06T04:32:33,828Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=97f996c5-dd6a-473f-a52f-7745fd463d99, invocation_id=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, invocation_timestamp=2022-04-06T04:32:33.619Z, origin=Only For Testing, session_id=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, session_timestamp=2022-04-06T04:32:33.619Z, thread-id=490}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at Received counter-flow exception from peer O=Mock Company 2, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:257) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:159) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
[INFO ] 2022-04-06T04:32:33,828Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=97f996c5-dd6a-473f-a52f-7745fd463d99, invocation_id=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, invocation_timestamp=2022-04-06T04:32:33.619Z, origin=Only For Testing, session_id=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, session_timestamp=2022-04-06T04:32:33.619Z, thread-id=490}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at Received counter-flow exception from peer O=Mock Company 2, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:257) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:159) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
[WARN ] 2022-04-06T04:32:33,833Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [97f996c5-dd6a-473f-a52f-7745fd463d99] errored, dumping all transitions:

 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.624Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[97f996c5-dd6a-473f-a52f-7745fd463d99], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, timestamp: 2022-04-06T04:32:33.619Z, entityType: Invocation, sessionId=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, timestamp: 2022-04-06T04:32:33.619Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=D13A1ECB7195C98A3BC1C4981E393800AD4FB3DBE46EFA5E18DD4771960F3688), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@133c6743])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@133c6743])
    SignalFlowHasStarted(flowId=[97f996c5-dd6a-473f-a52f-7745fd463d99])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@133c6743]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.684Z
  Event: InitiateFlow(destination=O=Mock Company 2, L=London, C=GB, wellKnownParty=O=Mock Company 2, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[97f996c5-dd6a-473f-a52f-7745fd463d99], sessionId=SessionId(toLong=7721588229647102489))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.620Z
    2022-04-06T04:32:33.684Z
checkpoint.checkpointState.sessions.SessionId(toLong=7721588229647102489): 
    null
    Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=7721588229647102489), additionalEntropy=-3111425330441931230)


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.685Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.684Z
    2022-04-06T04:32:33.685Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.687Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.685Z
    2022-04-06T04:32:33.687Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.687Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.698Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))=8C30B6F3E202E2BC560B01444105EA67ADC96AF8B395176BA3BE6BD729AA3DAF}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=DA36AF0113517FE32F7A2CDD694C8B57302A77C99BE7C84336EA945B0E23BD78, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[97f996c5-dd6a-473f-a52f-7745fd463d99], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, timestamp: 2022-04-06T04:32:33.619Z, entityType: Invocation, sessionId=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, timestamp: 2022-04-06T04:32:33.619Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=7721588229647102489)=Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=7721588229647102489), additionalEntropy=-3111425330441931230)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))=8C30B6F3E202E2BC560B01444105EA67ADC96AF8B395176BA3BE6BD729AA3DAF}, shouldRetrySend=false), frozenFiber=DA36AF0113517FE32F7A2CDD694C8B57302A77C99BE7C84336EA945B0E23BD78), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.687Z
    2022-04-06T04:32:33.696Z
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=D13A1ECB7195C98A3BC1C4981E393800AD4FB3DBE46EFA5E18DD4771960F3688)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))=8C30B6F3E202E2BC560B01444105EA67ADC96AF8B395176BA3BE6BD729AA3DAF}, shouldRetrySend=false), frozenFiber=DA36AF0113517FE32F7A2CDD694C8B57302A77C99BE7C84336EA945B0E23BD78)
checkpoint.progressStep: 
    null
    Gathering the counterparty's signature.
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.703Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 2, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=7721588229647102489), initiationEntropy=-3111425330441931230, initiatorFlowClassName=ExampleFlow$Initiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-7721588229647102489--3111425330441931230-1-0), senderUUID=bfed9be8-7430-4f1a-a41b-636cc5c8d685))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.696Z
    2022-04-06T04:32:33.699Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))=8C30B6F3E202E2BC560B01444105EA67ADC96AF8B395176BA3BE6BD729AA3DAF}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))])
checkpoint.checkpointState.sessions.SessionId(toLong=7721588229647102489): 
    Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=7721588229647102489), additionalEntropy=-3111425330441931230)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-7721588229647102489--3111425330441931230)


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.778Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7721588229647102489), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=3975198822564720704), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@617bdac4, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.699Z
    2022-04-06T04:32:33.778Z
checkpoint.checkpointState.sessions.SessionId(toLong=7721588229647102489): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-7721588229647102489--3111425330441931230)
    Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3975198822564720704), deduplicationSeed=R-7721588229647102489--3111425330441931230)
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@617bdac4]


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.778Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.781Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7721588229647102489), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62d39666, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.778Z
    2022-04-06T04:32:33.781Z
checkpoint.checkpointState.sessions.SessionId(toLong=7721588229647102489).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@617bdac4]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@617bdac4, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62d39666]


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.781Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=7721588229647102489).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.781Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.786Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))=3B401F19010C9B827EF19CBD483CE27F54F275E14A61D7C8E3E847A9FB3FC9A1}), maySkipCheckpoint=false, fiber=743B8EF6DCBEB55ADD9491AC8F3618F208458754FFAF2C6DE12F50C51B14C592, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[97f996c5-dd6a-473f-a52f-7745fd463d99], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, timestamp: 2022-04-06T04:32:33.619Z, entityType: Invocation, sessionId=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, timestamp: 2022-04-06T04:32:33.619Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=7721588229647102489)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3975198822564720704), deduplicationSeed=R-7721588229647102489--3111425330441931230)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))=3B401F19010C9B827EF19CBD483CE27F54F275E14A61D7C8E3E847A9FB3FC9A1}), frozenFiber=743B8EF6DCBEB55ADD9491AC8F3618F208458754FFAF2C6DE12F50C51B14C592), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@617bdac4, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62d39666])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@617bdac4, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62d39666])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.781Z
    2022-04-06T04:32:33.784Z
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))=3B401F19010C9B827EF19CBD483CE27F54F275E14A61D7C8E3E847A9FB3FC9A1})
checkpoint.flowState.frozenFiber.hash: 
    DA36AF0113517FE32F7A2CDD694C8B57302A77C99BE7C84336EA945B0E23BD78
    743B8EF6DCBEB55ADD9491AC8F3618F208458754FFAF2C6DE12F50C51B14C592
checkpoint.flowIoRequest: 
    SendAndReceive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@617bdac4, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62d39666]
    []
isFlowResumed: 
    true
    false


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.787Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 2, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3975198822564720704), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-7721588229647102489--3111425330441931230-2-0), senderUUID=bfed9be8-7430-4f1a-a41b-636cc5c8d685))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.792Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))]), maySkipCheckpoint=false, fiber=5A25E81FBD944A72886DE89C2CC787DDEC2151F8F4A071CDDF9340714541110A, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[97f996c5-dd6a-473f-a52f-7745fd463d99], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, timestamp: 2022-04-06T04:32:33.619Z, entityType: Invocation, sessionId=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, timestamp: 2022-04-06T04:32:33.619Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=7721588229647102489)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3975198822564720704), deduplicationSeed=R-7721588229647102489--3111425330441931230)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))]), frozenFiber=5A25E81FBD944A72886DE89C2CC787DDEC2151F8F4A071CDDF9340714541110A), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.786Z
    2022-04-06T04:32:33.789Z
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))=3B401F19010C9B827EF19CBD483CE27F54F275E14A61D7C8E3E847A9FB3FC9A1})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))])
checkpoint.flowState.frozenFiber.hash: 
    743B8EF6DCBEB55ADD9491AC8F3618F208458754FFAF2C6DE12F50C51B14C592
    5A25E81FBD944A72886DE89C2CC787DDEC2151F8F4A071CDDF9340714541110A
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.792Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.827Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7721588229647102489), payload=ErrorSessionMessage(flowException=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, errorId=-835204703456708077)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2574cbf6, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.792Z
    2022-04-06T04:32:33.827Z
checkpoint.checkpointState.sessions.SessionId(toLong=7721588229647102489).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2574cbf6]


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.827Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=7721588229647102489).receivedMessages.isEmpty: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=7721588229647102489).otherSideErrored: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.827Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.827Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.828Z
  Event: Error(exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.827Z
    2022-04-06T04:32:33.828Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-835204703456708077, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.828Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.829Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.828Z
    2022-04-06T04:32:33.829Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=97f996c5-dd6a-473f-a52f-7745fd463d99, invocation_id=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, invocation_timestamp=2022-04-06T04:32:33.619Z, origin=Only For Testing, session_id=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, session_timestamp=2022-04-06T04:32:33.619Z, thread-id=490}
[WARN ] 2022-04-06T04:32:33,833Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [97f996c5-dd6a-473f-a52f-7745fd463d99] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=97f996c5-dd6a-473f-a52f-7745fd463d99, invocation_id=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, invocation_timestamp=2022-04-06T04:32:33.619Z, origin=Only For Testing, session_id=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, session_timestamp=2022-04-06T04:32:33.619Z, thread-id=490}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at Received counter-flow exception from peer O=Mock Company 2, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:257) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:159) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
[WARN ] 2022-04-06T04:32:33,833Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=97f996c5-dd6a-473f-a52f-7745fd463d99, invocation_id=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, invocation_timestamp=2022-04-06T04:32:33.619Z, origin=Only For Testing, session_id=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, session_timestamp=2022-04-06T04:32:33.619Z, thread-id=490}
[WARN ] 2022-04-06T04:32:33,845Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [97f996c5-dd6a-473f-a52f-7745fd463d99] errored, dumping all transitions:

 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.624Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[97f996c5-dd6a-473f-a52f-7745fd463d99], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, timestamp: 2022-04-06T04:32:33.619Z, entityType: Invocation, sessionId=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, timestamp: 2022-04-06T04:32:33.619Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=D13A1ECB7195C98A3BC1C4981E393800AD4FB3DBE46EFA5E18DD4771960F3688), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@133c6743])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@133c6743])
    SignalFlowHasStarted(flowId=[97f996c5-dd6a-473f-a52f-7745fd463d99])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@133c6743]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.684Z
  Event: InitiateFlow(destination=O=Mock Company 2, L=London, C=GB, wellKnownParty=O=Mock Company 2, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[97f996c5-dd6a-473f-a52f-7745fd463d99], sessionId=SessionId(toLong=7721588229647102489))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.620Z
    2022-04-06T04:32:33.684Z
checkpoint.checkpointState.sessions.SessionId(toLong=7721588229647102489): 
    null
    Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=7721588229647102489), additionalEntropy=-3111425330441931230)


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.685Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.684Z
    2022-04-06T04:32:33.685Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.687Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.685Z
    2022-04-06T04:32:33.687Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.687Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.698Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))=8C30B6F3E202E2BC560B01444105EA67ADC96AF8B395176BA3BE6BD729AA3DAF}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=DA36AF0113517FE32F7A2CDD694C8B57302A77C99BE7C84336EA945B0E23BD78, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[97f996c5-dd6a-473f-a52f-7745fd463d99], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, timestamp: 2022-04-06T04:32:33.619Z, entityType: Invocation, sessionId=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, timestamp: 2022-04-06T04:32:33.619Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=7721588229647102489)=Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=7721588229647102489), additionalEntropy=-3111425330441931230)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))=8C30B6F3E202E2BC560B01444105EA67ADC96AF8B395176BA3BE6BD729AA3DAF}, shouldRetrySend=false), frozenFiber=DA36AF0113517FE32F7A2CDD694C8B57302A77C99BE7C84336EA945B0E23BD78), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.687Z
    2022-04-06T04:32:33.696Z
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=D13A1ECB7195C98A3BC1C4981E393800AD4FB3DBE46EFA5E18DD4771960F3688)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))=8C30B6F3E202E2BC560B01444105EA67ADC96AF8B395176BA3BE6BD729AA3DAF}, shouldRetrySend=false), frozenFiber=DA36AF0113517FE32F7A2CDD694C8B57302A77C99BE7C84336EA945B0E23BD78)
checkpoint.progressStep: 
    null
    Gathering the counterparty's signature.
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.703Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 2, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=7721588229647102489), initiationEntropy=-3111425330441931230, initiatorFlowClassName=ExampleFlow$Initiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-7721588229647102489--3111425330441931230-1-0), senderUUID=bfed9be8-7430-4f1a-a41b-636cc5c8d685))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.696Z
    2022-04-06T04:32:33.699Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))=8C30B6F3E202E2BC560B01444105EA67ADC96AF8B395176BA3BE6BD729AA3DAF}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))])
checkpoint.checkpointState.sessions.SessionId(toLong=7721588229647102489): 
    Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=7721588229647102489), additionalEntropy=-3111425330441931230)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-7721588229647102489--3111425330441931230)


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.778Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7721588229647102489), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=3975198822564720704), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@617bdac4, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.699Z
    2022-04-06T04:32:33.778Z
checkpoint.checkpointState.sessions.SessionId(toLong=7721588229647102489): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-7721588229647102489--3111425330441931230)
    Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3975198822564720704), deduplicationSeed=R-7721588229647102489--3111425330441931230)
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@617bdac4]


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.778Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.781Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7721588229647102489), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62d39666, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.778Z
    2022-04-06T04:32:33.781Z
checkpoint.checkpointState.sessions.SessionId(toLong=7721588229647102489).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@617bdac4]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@617bdac4, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62d39666]


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.781Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=7721588229647102489).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.781Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.786Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))=3B401F19010C9B827EF19CBD483CE27F54F275E14A61D7C8E3E847A9FB3FC9A1}), maySkipCheckpoint=false, fiber=743B8EF6DCBEB55ADD9491AC8F3618F208458754FFAF2C6DE12F50C51B14C592, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[97f996c5-dd6a-473f-a52f-7745fd463d99], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, timestamp: 2022-04-06T04:32:33.619Z, entityType: Invocation, sessionId=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, timestamp: 2022-04-06T04:32:33.619Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=7721588229647102489)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3975198822564720704), deduplicationSeed=R-7721588229647102489--3111425330441931230)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))=3B401F19010C9B827EF19CBD483CE27F54F275E14A61D7C8E3E847A9FB3FC9A1}), frozenFiber=743B8EF6DCBEB55ADD9491AC8F3618F208458754FFAF2C6DE12F50C51B14C592), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@617bdac4, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62d39666])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@617bdac4, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62d39666])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.781Z
    2022-04-06T04:32:33.784Z
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))=3B401F19010C9B827EF19CBD483CE27F54F275E14A61D7C8E3E847A9FB3FC9A1})
checkpoint.flowState.frozenFiber.hash: 
    DA36AF0113517FE32F7A2CDD694C8B57302A77C99BE7C84336EA945B0E23BD78
    743B8EF6DCBEB55ADD9491AC8F3618F208458754FFAF2C6DE12F50C51B14C592
checkpoint.flowIoRequest: 
    SendAndReceive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@617bdac4, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62d39666]
    []
isFlowResumed: 
    true
    false


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.787Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 2, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3975198822564720704), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-7721588229647102489--3111425330441931230-2-0), senderUUID=bfed9be8-7430-4f1a-a41b-636cc5c8d685))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.792Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))]), maySkipCheckpoint=false, fiber=5A25E81FBD944A72886DE89C2CC787DDEC2151F8F4A071CDDF9340714541110A, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[97f996c5-dd6a-473f-a52f-7745fd463d99], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, timestamp: 2022-04-06T04:32:33.619Z, entityType: Invocation, sessionId=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, timestamp: 2022-04-06T04:32:33.619Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=7721588229647102489)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3975198822564720704), deduplicationSeed=R-7721588229647102489--3111425330441931230)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))]), frozenFiber=5A25E81FBD944A72886DE89C2CC787DDEC2151F8F4A071CDDF9340714541110A), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.786Z
    2022-04-06T04:32:33.789Z
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))=3B401F19010C9B827EF19CBD483CE27F54F275E14A61D7C8E3E847A9FB3FC9A1})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))])
checkpoint.flowState.frozenFiber.hash: 
    743B8EF6DCBEB55ADD9491AC8F3618F208458754FFAF2C6DE12F50C51B14C592
    5A25E81FBD944A72886DE89C2CC787DDEC2151F8F4A071CDDF9340714541110A
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.792Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.827Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7721588229647102489), payload=ErrorSessionMessage(flowException=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, errorId=-835204703456708077)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2574cbf6, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.792Z
    2022-04-06T04:32:33.827Z
checkpoint.checkpointState.sessions.SessionId(toLong=7721588229647102489).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2574cbf6]


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.827Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=7721588229647102489).receivedMessages.isEmpty: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=7721588229647102489).otherSideErrored: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.827Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.827Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.828Z
  Event: Error(exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.827Z
    2022-04-06T04:32:33.828Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-835204703456708077, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.828Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.829Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.828Z
    2022-04-06T04:32:33.829Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [97f996c5-dd6a-473f-a52f-7745fd463d99] ---
  Timestamp: 2022-04-06T04:32:33.840Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-835204703456708077)], sessions=[], senderUUID=bfed9be8-7430-4f1a-a41b-636cc5c8d685)
    CreateTransaction
    RemoveCheckpoint(id=[97f996c5-dd6a-473f-a52f-7745fd463d99], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2574cbf6])
    ReleaseSoftLocks(uuid=97f996c5-dd6a-473f-a52f-7745fd463d99)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2574cbf6])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=7721588229647102489)])
    RemoveFlow(flowId=[97f996c5-dd6a-473f-a52f-7745fd463d99], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-835204703456708077, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, timestamp: 2022-04-06T04:32:33.619Z, entityType: Invocation, sessionId=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, timestamp: 2022-04-06T04:32:33.619Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=7721588229647102489)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=3975198822564720704), deduplicationSeed=R-7721588229647102489--3111425330441931230)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=5), flowState=net.corda.node.services.statemachine.FlowState$Finished@70b21018, errorState=Errored(errors=[FlowError(errorId=-835204703456708077, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Gathering the counterparty's signature., flowIoRequest=Receive, compatible=true), flowLogic=ExampleFlow$Initiator@13c9ec43, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=bfed9be8-7430-4f1a-a41b-636cc5c8d685, reloadCheckpointAfterSuspendCount=null, numberOfCommits=5, lock=java.util.concurrent.Semaphore@420c8c4d[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:33.829Z
    2022-04-06T04:32:33.833Z
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=7721588229647102489))]), frozenFiber=5A25E81FBD944A72886DE89C2CC787DDEC2151F8F4A071CDDF9340714541110A)
    net.corda.node.services.statemachine.FlowState$Finished@70b21018
checkpoint.checkpointState.numberOfCommits: 
    4
    5
numberOfCommits: 
    4
    5
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2574cbf6]
    []
isRemoved: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=97f996c5-dd6a-473f-a52f-7745fd463d99, invocation_id=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, invocation_timestamp=2022-04-06T04:32:33.619Z, origin=Only For Testing, session_id=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, session_timestamp=2022-04-06T04:32:33.619Z, thread-id=490}
[WARN ] 2022-04-06T04:32:33,845Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [97f996c5-dd6a-473f-a52f-7745fd463d99] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=97f996c5-dd6a-473f-a52f-7745fd463d99, invocation_id=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, invocation_timestamp=2022-04-06T04:32:33.619Z, origin=Only For Testing, session_id=bc6eea7f-913d-4f8f-a622-9cc2b0caba45, session_timestamp=2022-04-06T04:32:33.619Z, thread-id=490}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at Received counter-flow exception from peer O=Mock Company 2, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:257) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:159) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
[INFO ] 2022-04-06T04:32:33,848Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-7) {}
[INFO ] 2022-04-06T04:32:33,860Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-06T04:32:33,860Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:33,862Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-8) {}
[INFO ] 2022-04-06T04:32:33,872Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-06T04:32:33,872Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:33,874Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-9) {}
[INFO ] 2022-04-06T04:32:33,886Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-06T04:32:33,886Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:33,984Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220406-043233.889-5071B238CA1C9C06/nodes/0/cordapps] {}
[INFO ] 2022-04-06T04:32:33,984Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043233.889-5071B238CA1C9C06/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043233.889-5071B238CA1C9C06/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-06T04:32:33,984Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043233.889-5071B238CA1C9C06/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-06T04:32:34,005Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043233.889-5071B238CA1C9C06/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-06T04:32:34,028Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:34,029Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-06T04:32:34,030Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-06T04:32:34,034Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-06T04:32:34,035Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL8nZLFu3q1noibhL3sJHBvBpu3zTkLrQNCCBPadEYN7X1, alias: identity-private-key {}
[INFO ] 2022-04-06T04:32:34,044Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-06T04:32:34,050Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-06T04:32:33.889Z
      epoch=1
  } {}
[INFO ] 2022-04-06T04:32:34,541Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-06T04:32:34,542Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-06T04:32:34,542Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-06T04:32:34,661Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-06T04:32:34,665Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-06T04:32:34,667Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219554665), owningKey=DL8nZLFu3q1noibhL3sJHBvBpu3zTkLrQNCCBPadEYN7X1 {}
[INFO ] 2022-04-06T04:32:34,667Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:34,679Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219554665) {}
[INFO ] 2022-04-06T04:32:34,687Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-06T04:32:34,687Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-06T04:32:34,687Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-06T04:32:34,693Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219554665), owningKey=DL8nZLFu3q1noibhL3sJHBvBpu3zTkLrQNCCBPadEYN7X1 {}
[INFO ] 2022-04-06T04:32:34,693Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:34,728Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F205A04A1F0201841C3F475344FC1871245793E3B7970D264C4F47D7B1784D2A uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-06T04:32:34,732Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2022-04-06T04:32:34,755Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219554665) {}
[INFO ] 2022-04-06T04:32:34,756Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219554665), owningKey=DL8nZLFu3q1noibhL3sJHBvBpu3zTkLrQNCCBPadEYN7X1 {}
[INFO ] 2022-04-06T04:32:34,756Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:34,758Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219554665), owningKey=DL8nZLFu3q1noibhL3sJHBvBpu3zTkLrQNCCBPadEYN7X1 {}
[INFO ] 2022-04-06T04:32:34,758Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:34,766Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220406-043233.889-5071B238CA1C9C06/nodes/1/cordapps] {}
[INFO ] 2022-04-06T04:32:34,766Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043233.889-5071B238CA1C9C06/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043233.889-5071B238CA1C9C06/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-06T04:32:34,766Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043233.889-5071B238CA1C9C06/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-06T04:32:34,791Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043233.889-5071B238CA1C9C06/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-06T04:32:34,816Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:34,817Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-06T04:32:34,834Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-06T04:32:34,869Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-06T04:32:34,870Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLBYQZShwUumhLmRSofGgyRmnGF66Meizygdr1squXnbJ4, alias: identity-private-key {}
[INFO ] 2022-04-06T04:32:34,879Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-06T04:32:34,881Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-06T04:32:33.889Z
      epoch=1
  } {}
[INFO ] 2022-04-06T04:32:35,296Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-06T04:32:35,297Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:35,297Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:35,417Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:35,422Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-06T04:32:35,426Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219555422), owningKey=DLBYQZShwUumhLmRSofGgyRmnGF66Meizygdr1squXnbJ4 {}
[INFO ] 2022-04-06T04:32:35,426Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:35,432Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219555422) {}
[INFO ] 2022-04-06T04:32:35,438Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-06T04:32:35,440Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-06T04:32:35,440Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-06T04:32:35,444Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219555422), owningKey=DLBYQZShwUumhLmRSofGgyRmnGF66Meizygdr1squXnbJ4 {}
[INFO ] 2022-04-06T04:32:35,444Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:35,478Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F205A04A1F0201841C3F475344FC1871245793E3B7970D264C4F47D7B1784D2A uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-06T04:32:35,498Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219555422) {}
[INFO ] 2022-04-06T04:32:35,500Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219554665), owningKey=DL8nZLFu3q1noibhL3sJHBvBpu3zTkLrQNCCBPadEYN7X1 {}
[INFO ] 2022-04-06T04:32:35,500Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:35,510Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219555422), owningKey=DLBYQZShwUumhLmRSofGgyRmnGF66Meizygdr1squXnbJ4 {}
[INFO ] 2022-04-06T04:32:35,510Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:35,517Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219555422), owningKey=DLBYQZShwUumhLmRSofGgyRmnGF66Meizygdr1squXnbJ4 {}
[INFO ] 2022-04-06T04:32:35,517Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:35,517Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219555422), owningKey=DLBYQZShwUumhLmRSofGgyRmnGF66Meizygdr1squXnbJ4 {}
[INFO ] 2022-04-06T04:32:35,517Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:35,525Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220406-043233.889-5071B238CA1C9C06/nodes/2/cordapps] {}
[INFO ] 2022-04-06T04:32:35,525Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043233.889-5071B238CA1C9C06/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043233.889-5071B238CA1C9C06/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-06T04:32:35,525Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043233.889-5071B238CA1C9C06/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-06T04:32:35,533Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043233.889-5071B238CA1C9C06/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-06T04:32:35,562Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:35,562Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-06T04:32:35,563Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-06T04:32:35,605Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-06T04:32:35,605Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL8c1qAm6bAeQDtoyr6J97KkjNsHefFHudDttxBY3Tm6xh, alias: identity-private-key {}
[INFO ] 2022-04-06T04:32:35,612Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-06T04:32:35,614Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-06T04:32:33.889Z
      epoch=1
  } {}
[INFO ] 2022-04-06T04:32:36,002Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-06T04:32:36,003Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:36,003Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:36,109Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:36,113Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-06T04:32:36,116Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219556113), owningKey=DL8c1qAm6bAeQDtoyr6J97KkjNsHefFHudDttxBY3Tm6xh {}
[INFO ] 2022-04-06T04:32:36,116Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:36,122Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219556113) {}
[INFO ] 2022-04-06T04:32:36,128Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-06T04:32:36,130Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-06T04:32:36,130Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-06T04:32:36,135Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219556113), owningKey=DL8c1qAm6bAeQDtoyr6J97KkjNsHefFHudDttxBY3Tm6xh {}
[INFO ] 2022-04-06T04:32:36,135Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:36,164Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F205A04A1F0201841C3F475344FC1871245793E3B7970D264C4F47D7B1784D2A uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-06T04:32:36,179Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219556113) {}
[INFO ] 2022-04-06T04:32:36,181Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219554665), owningKey=DL8nZLFu3q1noibhL3sJHBvBpu3zTkLrQNCCBPadEYN7X1 {}
[INFO ] 2022-04-06T04:32:36,181Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:36,189Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219556113), owningKey=DL8c1qAm6bAeQDtoyr6J97KkjNsHefFHudDttxBY3Tm6xh {}
[INFO ] 2022-04-06T04:32:36,189Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:36,198Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219555422), owningKey=DLBYQZShwUumhLmRSofGgyRmnGF66Meizygdr1squXnbJ4 {}
[INFO ] 2022-04-06T04:32:36,198Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:36,207Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219556113), owningKey=DL8c1qAm6bAeQDtoyr6J97KkjNsHefFHudDttxBY3Tm6xh {}
[INFO ] 2022-04-06T04:32:36,207Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:36,218Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219556113), owningKey=DL8c1qAm6bAeQDtoyr6J97KkjNsHefFHudDttxBY3Tm6xh {}
[INFO ] 2022-04-06T04:32:36,218Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:36,218Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219556113), owningKey=DL8c1qAm6bAeQDtoyr6J97KkjNsHefFHudDttxBY3Tm6xh {}
[INFO ] 2022-04-06T04:32:36,218Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:36,330Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000008, flow-id=0c84c321-9b7c-45f3-81f0-1778c08b4ab8, invocation_id=543de02e-1fb5-4d6f-a845-f88aff28b33d, invocation_timestamp=2022-04-06T04:32:36.313Z, origin=O=Mock Company 1, L=London, C=GB, session_id=543de02e-1fb5-4d6f-a845-f88aff28b33d, session_timestamp=2022-04-06T04:32:36.313Z, thread-id=644, tx_id=5F5F50110840FED6E51A5D756C6DF6BE5A988258C71033C63D24F527586F1241}
[INFO ] 2022-04-06T04:32:36,340Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=0c84c321-9b7c-45f3-81f0-1778c08b4ab8, invocation_id=543de02e-1fb5-4d6f-a845-f88aff28b33d, invocation_timestamp=2022-04-06T04:32:36.313Z, origin=O=Mock Company 1, L=London, C=GB, session_id=543de02e-1fb5-4d6f-a845-f88aff28b33d, session_timestamp=2022-04-06T04:32:36.313Z, thread-id=644, tx_id=5F5F50110840FED6E51A5D756C6DF6BE5A988258C71033C63D24F527586F1241}
[INFO ] 2022-04-06T04:32:36,470Z [Mock network] corda.flow. - Flow raised an error: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null. Sending it to flow hospital to be triaged. {fiber-id=10000008, flow-id=0c84c321-9b7c-45f3-81f0-1778c08b4ab8, invocation_id=543de02e-1fb5-4d6f-a845-f88aff28b33d, invocation_timestamp=2022-04-06T04:32:36.313Z, origin=O=Mock Company 1, L=London, C=GB, session_id=543de02e-1fb5-4d6f-a845-f88aff28b33d, session_timestamp=2022-04-06T04:32:36.313Z, thread-id=644, tx_id=5F5F50110840FED6E51A5D756C6DF6BE5A988258C71033C63D24F527586F1241}
[INFO ] 2022-04-06T04:32:36,471Z [Mock network] statemachine.StaffedFlowHospital. - Flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=543de02e-1fb5-4d6f-a845-f88aff28b33d, timestamp: 2022-04-06T04:32:36.313Z, entityType: Invocation, sessionId=543de02e-1fb5-4d6f-a845-f88aff28b33d, timestamp: 2022-04-06T04:32:36.313Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=8084212941198787008)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2332295046310424186), deduplicationSeed=D-2332295046310424186--9061871203344720759)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8084212941198787008))]), frozenFiber=997820B1C305EB3E774BC59C2EC732E9E5C39D50A69691395FC77C8CEBD058A7), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=ExampleFlow$Acceptor@1fbb2b20, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6f27cb17], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=e6a553c8-0fcd-4ed1-8d8d-fc86c0552d90, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@4466748c[Permits = 0]) {fiber-id=10000008, flow-id=0c84c321-9b7c-45f3-81f0-1778c08b4ab8, invocation_id=543de02e-1fb5-4d6f-a845-f88aff28b33d, invocation_timestamp=2022-04-06T04:32:36.313Z, origin=O=Mock Company 1, L=London, C=GB, session_id=543de02e-1fb5-4d6f-a845-f88aff28b33d, session_timestamp=2022-04-06T04:32:36.313Z, thread-id=644, tx_id=5F5F50110840FED6E51A5D756C6DF6BE5A988258C71033C63D24F527586F1241}
[INFO ] 2022-04-06T04:32:36,471Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {fiber-id=10000008, flow-id=0c84c321-9b7c-45f3-81f0-1778c08b4ab8, invocation_id=543de02e-1fb5-4d6f-a845-f88aff28b33d, invocation_timestamp=2022-04-06T04:32:36.313Z, origin=O=Mock Company 1, L=London, C=GB, session_id=543de02e-1fb5-4d6f-a845-f88aff28b33d, session_timestamp=2022-04-06T04:32:36.313Z, thread-id=644, tx_id=5F5F50110840FED6E51A5D756C6DF6BE5A988258C71033C63D24F527586F1241}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[INFO ] 2022-04-06T04:32:36,471Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {fiber-id=10000008, flow-id=0c84c321-9b7c-45f3-81f0-1778c08b4ab8, invocation_id=543de02e-1fb5-4d6f-a845-f88aff28b33d, invocation_timestamp=2022-04-06T04:32:36.313Z, origin=O=Mock Company 1, L=London, C=GB, session_id=543de02e-1fb5-4d6f-a845-f88aff28b33d, session_timestamp=2022-04-06T04:32:36.313Z, thread-id=644, tx_id=5F5F50110840FED6E51A5D756C6DF6BE5A988258C71033C63D24F527586F1241}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[WARN ] 2022-04-06T04:32:36,476Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] errored, dumping all transitions:

 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.323Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[0c84c321-9b7c-45f3-81f0-1778c08b4ab8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=543de02e-1fb5-4d6f-a845-f88aff28b33d, timestamp: 2022-04-06T04:32:36.313Z, entityType: Invocation, sessionId=543de02e-1fb5-4d6f-a845-f88aff28b33d, timestamp: 2022-04-06T04:32:36.313Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=4AEF390011B50C5C9DA3155D397F15098909BDC9067F830117B990CEDA0FDD7E), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@47a7e02a])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@47a7e02a])
    SignalFlowHasStarted(flowId=[0c84c321-9b7c-45f3-81f0-1778c08b4ab8])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=2332295046310424186), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=8084212941198787008), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-2332295046310424186--9061871203344720759-0-0), senderUUID=e6a553c8-0fcd-4ed1-8d8d-fc86c0552d90))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.313Z
    2022-04-06T04:32:36.314Z
checkpoint.checkpointState.sessions.SessionId(toLong=8084212941198787008): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2332295046310424186), deduplicationSeed=D-2332295046310424186--9061871203344720759)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@47a7e02a]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.323Z
  Event: EnterSubFlow(subFlowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.314Z
    2022-04-06T04:32:36.323Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.323Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.328Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8084212941198787008))]), maySkipCheckpoint=false, fiber=780ABA74808DA7B70FF6A499EA0FC710E88DB002CFF42D2936BB9F30EBC6AFB9, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[0c84c321-9b7c-45f3-81f0-1778c08b4ab8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=543de02e-1fb5-4d6f-a845-f88aff28b33d, timestamp: 2022-04-06T04:32:36.313Z, entityType: Invocation, sessionId=543de02e-1fb5-4d6f-a845-f88aff28b33d, timestamp: 2022-04-06T04:32:36.313Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=8084212941198787008)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2332295046310424186), deduplicationSeed=D-2332295046310424186--9061871203344720759)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8084212941198787008))]), frozenFiber=780ABA74808DA7B70FF6A499EA0FC710E88DB002CFF42D2936BB9F30EBC6AFB9), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.323Z
    2022-04-06T04:32:36.326Z
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=4AEF390011B50C5C9DA3155D397F15098909BDC9067F830117B990CEDA0FDD7E)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8084212941198787008))]), frozenFiber=780ABA74808DA7B70FF6A499EA0FC710E88DB002CFF42D2936BB9F30EBC6AFB9)
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.328Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.326Z
    2022-04-06T04:32:36.328Z
checkpoint.checkpointState.sessions.SessionId(toLong=8084212941198787008).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.330Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.328Z
    2022-04-06T04:32:36.330Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.330Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.332Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.330Z
    2022-04-06T04:32:36.332Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.332Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.332Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.338Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8084212941198787008))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=67B557612E6289A0AA7445192138EB36BB3D8A74D7E88C043FD3A138F8D8D743, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[0c84c321-9b7c-45f3-81f0-1778c08b4ab8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=543de02e-1fb5-4d6f-a845-f88aff28b33d, timestamp: 2022-04-06T04:32:36.313Z, entityType: Invocation, sessionId=543de02e-1fb5-4d6f-a845-f88aff28b33d, timestamp: 2022-04-06T04:32:36.313Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=8084212941198787008)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2332295046310424186), deduplicationSeed=D-2332295046310424186--9061871203344720759)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8084212941198787008))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=67B557612E6289A0AA7445192138EB36BB3D8A74D7E88C043FD3A138F8D8D743), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.332Z
    2022-04-06T04:32:36.336Z
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8084212941198787008))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8084212941198787008))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    780ABA74808DA7B70FF6A499EA0FC710E88DB002CFF42D2936BB9F30EBC6AFB9
    67B557612E6289A0AA7445192138EB36BB3D8A74D7E88C043FD3A138F8D8D743
checkpoint.flowIoRequest: 
    Receive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.340Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=2332295046310424186), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-2332295046310424186--9061871203344720759-2-0), senderUUID=e6a553c8-0fcd-4ed1-8d8d-fc86c0552d90))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.340Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.338Z
    2022-04-06T04:32:36.340Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.438Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.340Z
    2022-04-06T04:32:36.438Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.442Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8084212941198787008))]), maySkipCheckpoint=false, fiber=997820B1C305EB3E774BC59C2EC732E9E5C39D50A69691395FC77C8CEBD058A7, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[0c84c321-9b7c-45f3-81f0-1778c08b4ab8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=543de02e-1fb5-4d6f-a845-f88aff28b33d, timestamp: 2022-04-06T04:32:36.313Z, entityType: Invocation, sessionId=543de02e-1fb5-4d6f-a845-f88aff28b33d, timestamp: 2022-04-06T04:32:36.313Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=8084212941198787008)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2332295046310424186), deduplicationSeed=D-2332295046310424186--9061871203344720759)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8084212941198787008))]), frozenFiber=997820B1C305EB3E774BC59C2EC732E9E5C39D50A69691395FC77C8CEBD058A7), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.438Z
    2022-04-06T04:32:36.440Z
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8084212941198787008))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8084212941198787008))])
checkpoint.flowState.frozenFiber.hash: 
    67B557612E6289A0AA7445192138EB36BB3D8A74D7E88C043FD3A138F8D8D743
    997820B1C305EB3E774BC59C2EC732E9E5C39D50A69691395FC77C8CEBD058A7
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.443Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.466Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=8084212941198787008), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6f27cb17, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.443Z
    2022-04-06T04:32:36.466Z
checkpoint.checkpointState.sessions.SessionId(toLong=8084212941198787008).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6f27cb17]


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.466Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=8084212941198787008).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.470Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.466Z
    2022-04-06T04:32:36.470Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.471Z
  Event: Error(exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=4973913363267729022, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.471Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.471Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.470Z
    2022-04-06T04:32:36.471Z
checkpoint.errorState.propagating: 
    false
    true
 {fiber-id=10000008, flow-id=0c84c321-9b7c-45f3-81f0-1778c08b4ab8, invocation_id=543de02e-1fb5-4d6f-a845-f88aff28b33d, invocation_timestamp=2022-04-06T04:32:36.313Z, origin=O=Mock Company 1, L=London, C=GB, session_id=543de02e-1fb5-4d6f-a845-f88aff28b33d, session_timestamp=2022-04-06T04:32:36.313Z, thread-id=644, tx_id=5F5F50110840FED6E51A5D756C6DF6BE5A988258C71033C63D24F527586F1241}
[WARN ] 2022-04-06T04:32:36,476Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] error {fiber-id=10000008, flow-id=0c84c321-9b7c-45f3-81f0-1778c08b4ab8, invocation_id=543de02e-1fb5-4d6f-a845-f88aff28b33d, invocation_timestamp=2022-04-06T04:32:36.313Z, origin=O=Mock Company 1, L=London, C=GB, session_id=543de02e-1fb5-4d6f-a845-f88aff28b33d, session_timestamp=2022-04-06T04:32:36.313Z, thread-id=644, tx_id=5F5F50110840FED6E51A5D756C6DF6BE5A988258C71033C63D24F527586F1241}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[WARN ] 2022-04-06T04:32:36,476Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {fiber-id=10000008, flow-id=0c84c321-9b7c-45f3-81f0-1778c08b4ab8, invocation_id=543de02e-1fb5-4d6f-a845-f88aff28b33d, invocation_timestamp=2022-04-06T04:32:36.313Z, origin=O=Mock Company 1, L=London, C=GB, session_id=543de02e-1fb5-4d6f-a845-f88aff28b33d, session_timestamp=2022-04-06T04:32:36.313Z, thread-id=644, tx_id=5F5F50110840FED6E51A5D756C6DF6BE5A988258C71033C63D24F527586F1241}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[WARN ] 2022-04-06T04:32:36,493Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] errored, dumping all transitions:

 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.323Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[0c84c321-9b7c-45f3-81f0-1778c08b4ab8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=543de02e-1fb5-4d6f-a845-f88aff28b33d, timestamp: 2022-04-06T04:32:36.313Z, entityType: Invocation, sessionId=543de02e-1fb5-4d6f-a845-f88aff28b33d, timestamp: 2022-04-06T04:32:36.313Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=4AEF390011B50C5C9DA3155D397F15098909BDC9067F830117B990CEDA0FDD7E), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@47a7e02a])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@47a7e02a])
    SignalFlowHasStarted(flowId=[0c84c321-9b7c-45f3-81f0-1778c08b4ab8])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=2332295046310424186), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=8084212941198787008), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-2332295046310424186--9061871203344720759-0-0), senderUUID=e6a553c8-0fcd-4ed1-8d8d-fc86c0552d90))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.313Z
    2022-04-06T04:32:36.314Z
checkpoint.checkpointState.sessions.SessionId(toLong=8084212941198787008): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2332295046310424186), deduplicationSeed=D-2332295046310424186--9061871203344720759)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@47a7e02a]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.323Z
  Event: EnterSubFlow(subFlowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.314Z
    2022-04-06T04:32:36.323Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.323Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.328Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8084212941198787008))]), maySkipCheckpoint=false, fiber=780ABA74808DA7B70FF6A499EA0FC710E88DB002CFF42D2936BB9F30EBC6AFB9, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[0c84c321-9b7c-45f3-81f0-1778c08b4ab8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=543de02e-1fb5-4d6f-a845-f88aff28b33d, timestamp: 2022-04-06T04:32:36.313Z, entityType: Invocation, sessionId=543de02e-1fb5-4d6f-a845-f88aff28b33d, timestamp: 2022-04-06T04:32:36.313Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=8084212941198787008)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2332295046310424186), deduplicationSeed=D-2332295046310424186--9061871203344720759)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8084212941198787008))]), frozenFiber=780ABA74808DA7B70FF6A499EA0FC710E88DB002CFF42D2936BB9F30EBC6AFB9), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.323Z
    2022-04-06T04:32:36.326Z
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=4AEF390011B50C5C9DA3155D397F15098909BDC9067F830117B990CEDA0FDD7E)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8084212941198787008))]), frozenFiber=780ABA74808DA7B70FF6A499EA0FC710E88DB002CFF42D2936BB9F30EBC6AFB9)
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.328Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.326Z
    2022-04-06T04:32:36.328Z
checkpoint.checkpointState.sessions.SessionId(toLong=8084212941198787008).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.330Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.328Z
    2022-04-06T04:32:36.330Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.330Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.332Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.330Z
    2022-04-06T04:32:36.332Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.332Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.332Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.338Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8084212941198787008))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=67B557612E6289A0AA7445192138EB36BB3D8A74D7E88C043FD3A138F8D8D743, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[0c84c321-9b7c-45f3-81f0-1778c08b4ab8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=543de02e-1fb5-4d6f-a845-f88aff28b33d, timestamp: 2022-04-06T04:32:36.313Z, entityType: Invocation, sessionId=543de02e-1fb5-4d6f-a845-f88aff28b33d, timestamp: 2022-04-06T04:32:36.313Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=8084212941198787008)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2332295046310424186), deduplicationSeed=D-2332295046310424186--9061871203344720759)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8084212941198787008))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=67B557612E6289A0AA7445192138EB36BB3D8A74D7E88C043FD3A138F8D8D743), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.332Z
    2022-04-06T04:32:36.336Z
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8084212941198787008))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8084212941198787008))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    780ABA74808DA7B70FF6A499EA0FC710E88DB002CFF42D2936BB9F30EBC6AFB9
    67B557612E6289A0AA7445192138EB36BB3D8A74D7E88C043FD3A138F8D8D743
checkpoint.flowIoRequest: 
    Receive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.340Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=2332295046310424186), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-2332295046310424186--9061871203344720759-2-0), senderUUID=e6a553c8-0fcd-4ed1-8d8d-fc86c0552d90))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.340Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.338Z
    2022-04-06T04:32:36.340Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.438Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.340Z
    2022-04-06T04:32:36.438Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.442Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8084212941198787008))]), maySkipCheckpoint=false, fiber=997820B1C305EB3E774BC59C2EC732E9E5C39D50A69691395FC77C8CEBD058A7, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[0c84c321-9b7c-45f3-81f0-1778c08b4ab8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=543de02e-1fb5-4d6f-a845-f88aff28b33d, timestamp: 2022-04-06T04:32:36.313Z, entityType: Invocation, sessionId=543de02e-1fb5-4d6f-a845-f88aff28b33d, timestamp: 2022-04-06T04:32:36.313Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=8084212941198787008)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2332295046310424186), deduplicationSeed=D-2332295046310424186--9061871203344720759)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8084212941198787008))]), frozenFiber=997820B1C305EB3E774BC59C2EC732E9E5C39D50A69691395FC77C8CEBD058A7), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.438Z
    2022-04-06T04:32:36.440Z
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8084212941198787008))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8084212941198787008))])
checkpoint.flowState.frozenFiber.hash: 
    67B557612E6289A0AA7445192138EB36BB3D8A74D7E88C043FD3A138F8D8D743
    997820B1C305EB3E774BC59C2EC732E9E5C39D50A69691395FC77C8CEBD058A7
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.443Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.466Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=8084212941198787008), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6f27cb17, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.443Z
    2022-04-06T04:32:36.466Z
checkpoint.checkpointState.sessions.SessionId(toLong=8084212941198787008).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6f27cb17]


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.466Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=8084212941198787008).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.470Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.466Z
    2022-04-06T04:32:36.470Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.471Z
  Event: Error(exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=4973913363267729022, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.471Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.471Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.470Z
    2022-04-06T04:32:36.471Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] ---
  Timestamp: 2022-04-06T04:32:36.491Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, errorId=4973913363267729022)], sessions=[Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2332295046310424186), deduplicationSeed=D-2332295046310424186--9061871203344720759)], senderUUID=e6a553c8-0fcd-4ed1-8d8d-fc86c0552d90)
    CreateTransaction
    RemoveCheckpoint(id=[0c84c321-9b7c-45f3-81f0-1778c08b4ab8], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6f27cb17])
    ReleaseSoftLocks(uuid=0c84c321-9b7c-45f3-81f0-1778c08b4ab8)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6f27cb17])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=8084212941198787008)])
    RemoveFlow(flowId=[0c84c321-9b7c-45f3-81f0-1778c08b4ab8], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=4973913363267729022, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=543de02e-1fb5-4d6f-a845-f88aff28b33d, timestamp: 2022-04-06T04:32:36.313Z, entityType: Invocation, sessionId=543de02e-1fb5-4d6f-a845-f88aff28b33d, timestamp: 2022-04-06T04:32:36.313Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=8084212941198787008)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2332295046310424186), deduplicationSeed=D-2332295046310424186--9061871203344720759)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=5), flowState=net.corda.node.services.statemachine.FlowState$Finished@70b21018, errorState=Errored(errors=[FlowError(errorId=4973913363267729022, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=ExampleFlow$Acceptor@1fbb2b20, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=e6a553c8-0fcd-4ed1-8d8d-fc86c0552d90, reloadCheckpointAfterSuspendCount=null, numberOfCommits=5, lock=java.util.concurrent.Semaphore@4466748c[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.471Z
    2022-04-06T04:32:36.476Z
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8084212941198787008))]), frozenFiber=997820B1C305EB3E774BC59C2EC732E9E5C39D50A69691395FC77C8CEBD058A7)
    net.corda.node.services.statemachine.FlowState$Finished@70b21018
checkpoint.checkpointState.numberOfCommits: 
    4
    5
numberOfCommits: 
    4
    5
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6f27cb17]
    []
isRemoved: 
    false
    true
 {fiber-id=10000008, flow-id=0c84c321-9b7c-45f3-81f0-1778c08b4ab8, invocation_id=543de02e-1fb5-4d6f-a845-f88aff28b33d, invocation_timestamp=2022-04-06T04:32:36.313Z, origin=O=Mock Company 1, L=London, C=GB, session_id=543de02e-1fb5-4d6f-a845-f88aff28b33d, session_timestamp=2022-04-06T04:32:36.313Z, thread-id=644, tx_id=5F5F50110840FED6E51A5D756C6DF6BE5A988258C71033C63D24F527586F1241}
[WARN ] 2022-04-06T04:32:36,493Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [0c84c321-9b7c-45f3-81f0-1778c08b4ab8] error {fiber-id=10000008, flow-id=0c84c321-9b7c-45f3-81f0-1778c08b4ab8, invocation_id=543de02e-1fb5-4d6f-a845-f88aff28b33d, invocation_timestamp=2022-04-06T04:32:36.313Z, origin=O=Mock Company 1, L=London, C=GB, session_id=543de02e-1fb5-4d6f-a845-f88aff28b33d, session_timestamp=2022-04-06T04:32:36.313Z, thread-id=644, tx_id=5F5F50110840FED6E51A5D756C6DF6BE5A988258C71033C63D24F527586F1241}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[INFO ] 2022-04-06T04:32:36,499Z [Mock network] corda.flow. - Flow raised an error: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=1518bf28-243b-4849-a601-61458af8a297, invocation_id=c5f38e87-ad3d-4f40-b662-ae1db2d49142, invocation_timestamp=2022-04-06T04:32:36.221Z, origin=Only For Testing, session_id=c5f38e87-ad3d-4f40-b662-ae1db2d49142, session_timestamp=2022-04-06T04:32:36.221Z, thread-id=644}
[INFO ] 2022-04-06T04:32:36,500Z [Mock network] statemachine.StaffedFlowHospital. - Flow [1518bf28-243b-4849-a601-61458af8a297] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=c5f38e87-ad3d-4f40-b662-ae1db2d49142, timestamp: 2022-04-06T04:32:36.221Z, entityType: Invocation, sessionId=c5f38e87-ad3d-4f40-b662-ae1db2d49142, timestamp: 2022-04-06T04:32:36.221Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=2332295046310424186)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=8084212941198787008), deduplicationSeed=R-2332295046310424186--9061871203344720759)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))]), frozenFiber=9DC30EA7669A423B874D1030370FB40BFB83AFAD99A9AC13D2CFA8890CEC8DCB), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Receive, compatible=true), flowLogic=ExampleFlow$Initiator@16564428, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@379f882c], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=bf352eb4-a06b-49e8-9de8-fa04ad05e653, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@74217ac5[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=1518bf28-243b-4849-a601-61458af8a297, invocation_id=c5f38e87-ad3d-4f40-b662-ae1db2d49142, invocation_timestamp=2022-04-06T04:32:36.221Z, origin=Only For Testing, session_id=c5f38e87-ad3d-4f40-b662-ae1db2d49142, session_timestamp=2022-04-06T04:32:36.221Z, thread-id=644}
[INFO ] 2022-04-06T04:32:36,500Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=1518bf28-243b-4849-a601-61458af8a297, invocation_id=c5f38e87-ad3d-4f40-b662-ae1db2d49142, invocation_timestamp=2022-04-06T04:32:36.221Z, origin=Only For Testing, session_id=c5f38e87-ad3d-4f40-b662-ae1db2d49142, session_timestamp=2022-04-06T04:32:36.221Z, thread-id=644}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at Received counter-flow exception from peer O=Mock Company 2, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:257) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:159) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
[INFO ] 2022-04-06T04:32:36,500Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=1518bf28-243b-4849-a601-61458af8a297, invocation_id=c5f38e87-ad3d-4f40-b662-ae1db2d49142, invocation_timestamp=2022-04-06T04:32:36.221Z, origin=Only For Testing, session_id=c5f38e87-ad3d-4f40-b662-ae1db2d49142, session_timestamp=2022-04-06T04:32:36.221Z, thread-id=644}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at Received counter-flow exception from peer O=Mock Company 2, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:257) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:159) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
[WARN ] 2022-04-06T04:32:36,505Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [1518bf28-243b-4849-a601-61458af8a297] errored, dumping all transitions:

 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.226Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[1518bf28-243b-4849-a601-61458af8a297], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=c5f38e87-ad3d-4f40-b662-ae1db2d49142, timestamp: 2022-04-06T04:32:36.221Z, entityType: Invocation, sessionId=c5f38e87-ad3d-4f40-b662-ae1db2d49142, timestamp: 2022-04-06T04:32:36.221Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=96D69F16D461CB50505A131C668FFABE6AB4D308A503B8883900258D1EF5C23D), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@c4f9d5f])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@c4f9d5f])
    SignalFlowHasStarted(flowId=[1518bf28-243b-4849-a601-61458af8a297])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@c4f9d5f]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.291Z
  Event: InitiateFlow(destination=O=Mock Company 2, L=London, C=GB, wellKnownParty=O=Mock Company 2, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[1518bf28-243b-4849-a601-61458af8a297], sessionId=SessionId(toLong=2332295046310424186))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.222Z
    2022-04-06T04:32:36.291Z
checkpoint.checkpointState.sessions.SessionId(toLong=2332295046310424186): 
    null
    Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=2332295046310424186), additionalEntropy=-9061871203344720759)


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.292Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.291Z
    2022-04-06T04:32:36.292Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.294Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.292Z
    2022-04-06T04:32:36.293Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.294Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.293Z
    2022-04-06T04:32:36.294Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.305Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))=7BA2777FAE64C0359FCA7206D2C098261D0A1BC81FE0D52BD5F4B68F4BFFF923}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=37B69C4815665254D7AD98E2958B616922A80976D0D601949A70D8473CF80165, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[1518bf28-243b-4849-a601-61458af8a297], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=c5f38e87-ad3d-4f40-b662-ae1db2d49142, timestamp: 2022-04-06T04:32:36.221Z, entityType: Invocation, sessionId=c5f38e87-ad3d-4f40-b662-ae1db2d49142, timestamp: 2022-04-06T04:32:36.221Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=2332295046310424186)=Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=2332295046310424186), additionalEntropy=-9061871203344720759)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))=7BA2777FAE64C0359FCA7206D2C098261D0A1BC81FE0D52BD5F4B68F4BFFF923}, shouldRetrySend=false), frozenFiber=37B69C4815665254D7AD98E2958B616922A80976D0D601949A70D8473CF80165), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.294Z
    2022-04-06T04:32:36.302Z
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=96D69F16D461CB50505A131C668FFABE6AB4D308A503B8883900258D1EF5C23D)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))=7BA2777FAE64C0359FCA7206D2C098261D0A1BC81FE0D52BD5F4B68F4BFFF923}, shouldRetrySend=false), frozenFiber=37B69C4815665254D7AD98E2958B616922A80976D0D601949A70D8473CF80165)
checkpoint.progressStep: 
    null
    Gathering the counterparty's signature.
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.310Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 2, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=2332295046310424186), initiationEntropy=-9061871203344720759, initiatorFlowClassName=ExampleFlow$Initiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-2332295046310424186--9061871203344720759-1-0), senderUUID=bf352eb4-a06b-49e8-9de8-fa04ad05e653))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.302Z
    2022-04-06T04:32:36.305Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))=7BA2777FAE64C0359FCA7206D2C098261D0A1BC81FE0D52BD5F4B68F4BFFF923}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))])
checkpoint.checkpointState.sessions.SessionId(toLong=2332295046310424186): 
    Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=2332295046310424186), additionalEntropy=-9061871203344720759)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-2332295046310424186--9061871203344720759)


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.449Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=2332295046310424186), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=8084212941198787008), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48abf307, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.305Z
    2022-04-06T04:32:36.449Z
checkpoint.checkpointState.sessions.SessionId(toLong=2332295046310424186): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-2332295046310424186--9061871203344720759)
    Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=8084212941198787008), deduplicationSeed=R-2332295046310424186--9061871203344720759)
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48abf307]


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.449Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.451Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=2332295046310424186), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@33edcd6, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.449Z
    2022-04-06T04:32:36.451Z
checkpoint.checkpointState.sessions.SessionId(toLong=2332295046310424186).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48abf307]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48abf307, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@33edcd6]


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.451Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=2332295046310424186).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.451Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.456Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))=E7AE2B44D1E4EC4CA22F8DD1A42D24A25EF36E3E6B3F4558330855EEEC10125C}), maySkipCheckpoint=false, fiber=E9AE66CE30861F76A607269E1CE68F41018E6256F02FCA5D78414E731BE27B99, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[1518bf28-243b-4849-a601-61458af8a297], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=c5f38e87-ad3d-4f40-b662-ae1db2d49142, timestamp: 2022-04-06T04:32:36.221Z, entityType: Invocation, sessionId=c5f38e87-ad3d-4f40-b662-ae1db2d49142, timestamp: 2022-04-06T04:32:36.221Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=2332295046310424186)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=8084212941198787008), deduplicationSeed=R-2332295046310424186--9061871203344720759)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))=E7AE2B44D1E4EC4CA22F8DD1A42D24A25EF36E3E6B3F4558330855EEEC10125C}), frozenFiber=E9AE66CE30861F76A607269E1CE68F41018E6256F02FCA5D78414E731BE27B99), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48abf307, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@33edcd6])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48abf307, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@33edcd6])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.451Z
    2022-04-06T04:32:36.454Z
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))=E7AE2B44D1E4EC4CA22F8DD1A42D24A25EF36E3E6B3F4558330855EEEC10125C})
checkpoint.flowState.frozenFiber.hash: 
    37B69C4815665254D7AD98E2958B616922A80976D0D601949A70D8473CF80165
    E9AE66CE30861F76A607269E1CE68F41018E6256F02FCA5D78414E731BE27B99
checkpoint.flowIoRequest: 
    SendAndReceive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48abf307, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@33edcd6]
    []
isFlowResumed: 
    true
    false


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.457Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 2, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=8084212941198787008), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-2332295046310424186--9061871203344720759-2-0), senderUUID=bf352eb4-a06b-49e8-9de8-fa04ad05e653))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.463Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))]), maySkipCheckpoint=false, fiber=9DC30EA7669A423B874D1030370FB40BFB83AFAD99A9AC13D2CFA8890CEC8DCB, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[1518bf28-243b-4849-a601-61458af8a297], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=c5f38e87-ad3d-4f40-b662-ae1db2d49142, timestamp: 2022-04-06T04:32:36.221Z, entityType: Invocation, sessionId=c5f38e87-ad3d-4f40-b662-ae1db2d49142, timestamp: 2022-04-06T04:32:36.221Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=2332295046310424186)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=8084212941198787008), deduplicationSeed=R-2332295046310424186--9061871203344720759)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))]), frozenFiber=9DC30EA7669A423B874D1030370FB40BFB83AFAD99A9AC13D2CFA8890CEC8DCB), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.456Z
    2022-04-06T04:32:36.461Z
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))=E7AE2B44D1E4EC4CA22F8DD1A42D24A25EF36E3E6B3F4558330855EEEC10125C})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))])
checkpoint.flowState.frozenFiber.hash: 
    E9AE66CE30861F76A607269E1CE68F41018E6256F02FCA5D78414E731BE27B99
    9DC30EA7669A423B874D1030370FB40BFB83AFAD99A9AC13D2CFA8890CEC8DCB
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.463Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.499Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=2332295046310424186), payload=ErrorSessionMessage(flowException=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, errorId=4973913363267729022)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@379f882c, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.463Z
    2022-04-06T04:32:36.499Z
checkpoint.checkpointState.sessions.SessionId(toLong=2332295046310424186).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@379f882c]


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.499Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=2332295046310424186).receivedMessages.isEmpty: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=2332295046310424186).otherSideErrored: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.499Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.499Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.500Z
  Event: Error(exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=4973913363267729022, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.501Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.501Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.499Z
    2022-04-06T04:32:36.501Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=1518bf28-243b-4849-a601-61458af8a297, invocation_id=c5f38e87-ad3d-4f40-b662-ae1db2d49142, invocation_timestamp=2022-04-06T04:32:36.221Z, origin=Only For Testing, session_id=c5f38e87-ad3d-4f40-b662-ae1db2d49142, session_timestamp=2022-04-06T04:32:36.221Z, thread-id=644}
[WARN ] 2022-04-06T04:32:36,505Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [1518bf28-243b-4849-a601-61458af8a297] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=1518bf28-243b-4849-a601-61458af8a297, invocation_id=c5f38e87-ad3d-4f40-b662-ae1db2d49142, invocation_timestamp=2022-04-06T04:32:36.221Z, origin=Only For Testing, session_id=c5f38e87-ad3d-4f40-b662-ae1db2d49142, session_timestamp=2022-04-06T04:32:36.221Z, thread-id=644}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at Received counter-flow exception from peer O=Mock Company 2, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:257) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:159) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
[WARN ] 2022-04-06T04:32:36,506Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=1518bf28-243b-4849-a601-61458af8a297, invocation_id=c5f38e87-ad3d-4f40-b662-ae1db2d49142, invocation_timestamp=2022-04-06T04:32:36.221Z, origin=Only For Testing, session_id=c5f38e87-ad3d-4f40-b662-ae1db2d49142, session_timestamp=2022-04-06T04:32:36.221Z, thread-id=644}
[WARN ] 2022-04-06T04:32:36,516Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [1518bf28-243b-4849-a601-61458af8a297] errored, dumping all transitions:

 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.226Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[1518bf28-243b-4849-a601-61458af8a297], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=c5f38e87-ad3d-4f40-b662-ae1db2d49142, timestamp: 2022-04-06T04:32:36.221Z, entityType: Invocation, sessionId=c5f38e87-ad3d-4f40-b662-ae1db2d49142, timestamp: 2022-04-06T04:32:36.221Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=96D69F16D461CB50505A131C668FFABE6AB4D308A503B8883900258D1EF5C23D), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@c4f9d5f])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@c4f9d5f])
    SignalFlowHasStarted(flowId=[1518bf28-243b-4849-a601-61458af8a297])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@c4f9d5f]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.291Z
  Event: InitiateFlow(destination=O=Mock Company 2, L=London, C=GB, wellKnownParty=O=Mock Company 2, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[1518bf28-243b-4849-a601-61458af8a297], sessionId=SessionId(toLong=2332295046310424186))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.222Z
    2022-04-06T04:32:36.291Z
checkpoint.checkpointState.sessions.SessionId(toLong=2332295046310424186): 
    null
    Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=2332295046310424186), additionalEntropy=-9061871203344720759)


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.292Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.291Z
    2022-04-06T04:32:36.292Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.294Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.292Z
    2022-04-06T04:32:36.293Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.294Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.293Z
    2022-04-06T04:32:36.294Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.305Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))=7BA2777FAE64C0359FCA7206D2C098261D0A1BC81FE0D52BD5F4B68F4BFFF923}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=37B69C4815665254D7AD98E2958B616922A80976D0D601949A70D8473CF80165, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[1518bf28-243b-4849-a601-61458af8a297], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=c5f38e87-ad3d-4f40-b662-ae1db2d49142, timestamp: 2022-04-06T04:32:36.221Z, entityType: Invocation, sessionId=c5f38e87-ad3d-4f40-b662-ae1db2d49142, timestamp: 2022-04-06T04:32:36.221Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=2332295046310424186)=Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=2332295046310424186), additionalEntropy=-9061871203344720759)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))=7BA2777FAE64C0359FCA7206D2C098261D0A1BC81FE0D52BD5F4B68F4BFFF923}, shouldRetrySend=false), frozenFiber=37B69C4815665254D7AD98E2958B616922A80976D0D601949A70D8473CF80165), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.294Z
    2022-04-06T04:32:36.302Z
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=96D69F16D461CB50505A131C668FFABE6AB4D308A503B8883900258D1EF5C23D)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))=7BA2777FAE64C0359FCA7206D2C098261D0A1BC81FE0D52BD5F4B68F4BFFF923}, shouldRetrySend=false), frozenFiber=37B69C4815665254D7AD98E2958B616922A80976D0D601949A70D8473CF80165)
checkpoint.progressStep: 
    null
    Gathering the counterparty's signature.
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.310Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 2, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=2332295046310424186), initiationEntropy=-9061871203344720759, initiatorFlowClassName=ExampleFlow$Initiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-2332295046310424186--9061871203344720759-1-0), senderUUID=bf352eb4-a06b-49e8-9de8-fa04ad05e653))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.302Z
    2022-04-06T04:32:36.305Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))=7BA2777FAE64C0359FCA7206D2C098261D0A1BC81FE0D52BD5F4B68F4BFFF923}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))])
checkpoint.checkpointState.sessions.SessionId(toLong=2332295046310424186): 
    Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=2332295046310424186), additionalEntropy=-9061871203344720759)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-2332295046310424186--9061871203344720759)


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.449Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=2332295046310424186), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=8084212941198787008), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48abf307, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.305Z
    2022-04-06T04:32:36.449Z
checkpoint.checkpointState.sessions.SessionId(toLong=2332295046310424186): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-2332295046310424186--9061871203344720759)
    Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=8084212941198787008), deduplicationSeed=R-2332295046310424186--9061871203344720759)
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48abf307]


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.449Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.451Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=2332295046310424186), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@33edcd6, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.449Z
    2022-04-06T04:32:36.451Z
checkpoint.checkpointState.sessions.SessionId(toLong=2332295046310424186).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48abf307]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48abf307, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@33edcd6]


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.451Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=2332295046310424186).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.451Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.456Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))=E7AE2B44D1E4EC4CA22F8DD1A42D24A25EF36E3E6B3F4558330855EEEC10125C}), maySkipCheckpoint=false, fiber=E9AE66CE30861F76A607269E1CE68F41018E6256F02FCA5D78414E731BE27B99, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[1518bf28-243b-4849-a601-61458af8a297], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=c5f38e87-ad3d-4f40-b662-ae1db2d49142, timestamp: 2022-04-06T04:32:36.221Z, entityType: Invocation, sessionId=c5f38e87-ad3d-4f40-b662-ae1db2d49142, timestamp: 2022-04-06T04:32:36.221Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=2332295046310424186)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=8084212941198787008), deduplicationSeed=R-2332295046310424186--9061871203344720759)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))=E7AE2B44D1E4EC4CA22F8DD1A42D24A25EF36E3E6B3F4558330855EEEC10125C}), frozenFiber=E9AE66CE30861F76A607269E1CE68F41018E6256F02FCA5D78414E731BE27B99), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48abf307, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@33edcd6])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48abf307, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@33edcd6])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.451Z
    2022-04-06T04:32:36.454Z
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))=E7AE2B44D1E4EC4CA22F8DD1A42D24A25EF36E3E6B3F4558330855EEEC10125C})
checkpoint.flowState.frozenFiber.hash: 
    37B69C4815665254D7AD98E2958B616922A80976D0D601949A70D8473CF80165
    E9AE66CE30861F76A607269E1CE68F41018E6256F02FCA5D78414E731BE27B99
checkpoint.flowIoRequest: 
    SendAndReceive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48abf307, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@33edcd6]
    []
isFlowResumed: 
    true
    false


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.457Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 2, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=8084212941198787008), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-2332295046310424186--9061871203344720759-2-0), senderUUID=bf352eb4-a06b-49e8-9de8-fa04ad05e653))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.463Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))]), maySkipCheckpoint=false, fiber=9DC30EA7669A423B874D1030370FB40BFB83AFAD99A9AC13D2CFA8890CEC8DCB, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[1518bf28-243b-4849-a601-61458af8a297], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=c5f38e87-ad3d-4f40-b662-ae1db2d49142, timestamp: 2022-04-06T04:32:36.221Z, entityType: Invocation, sessionId=c5f38e87-ad3d-4f40-b662-ae1db2d49142, timestamp: 2022-04-06T04:32:36.221Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=2332295046310424186)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=8084212941198787008), deduplicationSeed=R-2332295046310424186--9061871203344720759)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))]), frozenFiber=9DC30EA7669A423B874D1030370FB40BFB83AFAD99A9AC13D2CFA8890CEC8DCB), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.456Z
    2022-04-06T04:32:36.461Z
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))=E7AE2B44D1E4EC4CA22F8DD1A42D24A25EF36E3E6B3F4558330855EEEC10125C})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))])
checkpoint.flowState.frozenFiber.hash: 
    E9AE66CE30861F76A607269E1CE68F41018E6256F02FCA5D78414E731BE27B99
    9DC30EA7669A423B874D1030370FB40BFB83AFAD99A9AC13D2CFA8890CEC8DCB
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.463Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.499Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=2332295046310424186), payload=ErrorSessionMessage(flowException=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, errorId=4973913363267729022)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@379f882c, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.463Z
    2022-04-06T04:32:36.499Z
checkpoint.checkpointState.sessions.SessionId(toLong=2332295046310424186).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@379f882c]


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.499Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=2332295046310424186).receivedMessages.isEmpty: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=2332295046310424186).otherSideErrored: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.499Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.499Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.500Z
  Event: Error(exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=4973913363267729022, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.501Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.501Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.499Z
    2022-04-06T04:32:36.501Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [1518bf28-243b-4849-a601-61458af8a297] ---
  Timestamp: 2022-04-06T04:32:36.513Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=4973913363267729022)], sessions=[], senderUUID=bf352eb4-a06b-49e8-9de8-fa04ad05e653)
    CreateTransaction
    RemoveCheckpoint(id=[1518bf28-243b-4849-a601-61458af8a297], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@379f882c])
    ReleaseSoftLocks(uuid=1518bf28-243b-4849-a601-61458af8a297)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@379f882c])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=2332295046310424186)])
    RemoveFlow(flowId=[1518bf28-243b-4849-a601-61458af8a297], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=4973913363267729022, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=c5f38e87-ad3d-4f40-b662-ae1db2d49142, timestamp: 2022-04-06T04:32:36.221Z, entityType: Invocation, sessionId=c5f38e87-ad3d-4f40-b662-ae1db2d49142, timestamp: 2022-04-06T04:32:36.221Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=2332295046310424186)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=8084212941198787008), deduplicationSeed=R-2332295046310424186--9061871203344720759)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=5), flowState=net.corda.node.services.statemachine.FlowState$Finished@70b21018, errorState=Errored(errors=[FlowError(errorId=4973913363267729022, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Gathering the counterparty's signature., flowIoRequest=Receive, compatible=true), flowLogic=ExampleFlow$Initiator@16564428, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=bf352eb4-a06b-49e8-9de8-fa04ad05e653, reloadCheckpointAfterSuspendCount=null, numberOfCommits=5, lock=java.util.concurrent.Semaphore@74217ac5[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:36.501Z
    2022-04-06T04:32:36.506Z
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=2332295046310424186))]), frozenFiber=9DC30EA7669A423B874D1030370FB40BFB83AFAD99A9AC13D2CFA8890CEC8DCB)
    net.corda.node.services.statemachine.FlowState$Finished@70b21018
checkpoint.checkpointState.numberOfCommits: 
    4
    5
numberOfCommits: 
    4
    5
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@379f882c]
    []
isRemoved: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=1518bf28-243b-4849-a601-61458af8a297, invocation_id=c5f38e87-ad3d-4f40-b662-ae1db2d49142, invocation_timestamp=2022-04-06T04:32:36.221Z, origin=Only For Testing, session_id=c5f38e87-ad3d-4f40-b662-ae1db2d49142, session_timestamp=2022-04-06T04:32:36.221Z, thread-id=644}
[WARN ] 2022-04-06T04:32:36,516Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [1518bf28-243b-4849-a601-61458af8a297] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=1518bf28-243b-4849-a601-61458af8a297, invocation_id=c5f38e87-ad3d-4f40-b662-ae1db2d49142, invocation_timestamp=2022-04-06T04:32:36.221Z, origin=Only For Testing, session_id=c5f38e87-ad3d-4f40-b662-ae1db2d49142, session_timestamp=2022-04-06T04:32:36.221Z, thread-id=644}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at Received counter-flow exception from peer O=Mock Company 2, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:257) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:159) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
[INFO ] 2022-04-06T04:32:36,520Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-10) {}
[INFO ] 2022-04-06T04:32:36,530Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-06T04:32:36,530Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:36,533Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-11) {}
[INFO ] 2022-04-06T04:32:36,543Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-06T04:32:36,543Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:36,544Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-12) {}
[INFO ] 2022-04-06T04:32:36,562Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-06T04:32:36,562Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:36,646Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220406-043236.564-476128582DAC6676/nodes/0/cordapps] {}
[INFO ] 2022-04-06T04:32:36,647Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043236.564-476128582DAC6676/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043236.564-476128582DAC6676/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-06T04:32:36,647Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043236.564-476128582DAC6676/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-06T04:32:36,652Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043236.564-476128582DAC6676/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-06T04:32:36,675Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:36,676Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-06T04:32:36,676Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-06T04:32:36,680Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-06T04:32:36,680Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGZwZkWwMEkGgo9iBKd1csJzKwFapysu8D9LQyBN261zs, alias: identity-private-key {}
[INFO ] 2022-04-06T04:32:36,690Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-06T04:32:36,697Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-06T04:32:36.563Z
      epoch=1
  } {}
[INFO ] 2022-04-06T04:32:37,203Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-06T04:32:37,204Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-06T04:32:37,204Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-06T04:32:37,634Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-06T04:32:37,639Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-06T04:32:37,642Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219557639), owningKey=DLGZwZkWwMEkGgo9iBKd1csJzKwFapysu8D9LQyBN261zs {}
[INFO ] 2022-04-06T04:32:37,642Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:37,659Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219557639) {}
[INFO ] 2022-04-06T04:32:37,670Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-06T04:32:37,671Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-06T04:32:37,673Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-06T04:32:37,676Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219557639), owningKey=DLGZwZkWwMEkGgo9iBKd1csJzKwFapysu8D9LQyBN261zs {}
[INFO ] 2022-04-06T04:32:37,676Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:37,711Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F205A04A1F0201841C3F475344FC1871245793E3B7970D264C4F47D7B1784D2A uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-06T04:32:37,715Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2022-04-06T04:32:37,728Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219557639) {}
[INFO ] 2022-04-06T04:32:37,729Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219557639), owningKey=DLGZwZkWwMEkGgo9iBKd1csJzKwFapysu8D9LQyBN261zs {}
[INFO ] 2022-04-06T04:32:37,729Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:37,729Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219557639), owningKey=DLGZwZkWwMEkGgo9iBKd1csJzKwFapysu8D9LQyBN261zs {}
[INFO ] 2022-04-06T04:32:37,729Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:37,738Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220406-043236.564-476128582DAC6676/nodes/1/cordapps] {}
[INFO ] 2022-04-06T04:32:37,739Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043236.564-476128582DAC6676/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043236.564-476128582DAC6676/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-06T04:32:37,739Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043236.564-476128582DAC6676/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-06T04:32:37,745Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043236.564-476128582DAC6676/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-06T04:32:37,767Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:37,768Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-06T04:32:37,769Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-06T04:32:37,810Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-06T04:32:37,810Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL22F7rNLBrLCNHaQ7mAhABS5eYZvGcY9pEtzZC7n1q9TL, alias: identity-private-key {}
[INFO ] 2022-04-06T04:32:37,827Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-06T04:32:37,829Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-06T04:32:36.563Z
      epoch=1
  } {}
[INFO ] 2022-04-06T04:32:38,228Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-06T04:32:38,230Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:38,230Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:38,352Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:38,356Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-06T04:32:38,358Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219558356), owningKey=DL22F7rNLBrLCNHaQ7mAhABS5eYZvGcY9pEtzZC7n1q9TL {}
[INFO ] 2022-04-06T04:32:38,358Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:38,363Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219558356) {}
[INFO ] 2022-04-06T04:32:38,368Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-06T04:32:38,369Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-06T04:32:38,369Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-06T04:32:38,373Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219558356), owningKey=DL22F7rNLBrLCNHaQ7mAhABS5eYZvGcY9pEtzZC7n1q9TL {}
[INFO ] 2022-04-06T04:32:38,373Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:38,411Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F205A04A1F0201841C3F475344FC1871245793E3B7970D264C4F47D7B1784D2A uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-06T04:32:38,425Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219558356) {}
[INFO ] 2022-04-06T04:32:38,426Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219557639), owningKey=DLGZwZkWwMEkGgo9iBKd1csJzKwFapysu8D9LQyBN261zs {}
[INFO ] 2022-04-06T04:32:38,426Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:38,435Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219558356), owningKey=DL22F7rNLBrLCNHaQ7mAhABS5eYZvGcY9pEtzZC7n1q9TL {}
[INFO ] 2022-04-06T04:32:38,435Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:38,442Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219558356), owningKey=DL22F7rNLBrLCNHaQ7mAhABS5eYZvGcY9pEtzZC7n1q9TL {}
[INFO ] 2022-04-06T04:32:38,442Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:38,442Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219558356), owningKey=DL22F7rNLBrLCNHaQ7mAhABS5eYZvGcY9pEtzZC7n1q9TL {}
[INFO ] 2022-04-06T04:32:38,442Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:38,448Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220406-043236.564-476128582DAC6676/nodes/2/cordapps] {}
[INFO ] 2022-04-06T04:32:38,449Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043236.564-476128582DAC6676/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043236.564-476128582DAC6676/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-06T04:32:38,449Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043236.564-476128582DAC6676/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-06T04:32:38,453Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043236.564-476128582DAC6676/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-06T04:32:38,486Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:38,487Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-06T04:32:38,488Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-06T04:32:38,524Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-06T04:32:38,524Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLH2PbU73bcGnwcFyeJmQv7UmBf62eTem8eYtbdmfjX8hx, alias: identity-private-key {}
[INFO ] 2022-04-06T04:32:38,533Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-06T04:32:38,535Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-06T04:32:36.563Z
      epoch=1
  } {}
[INFO ] 2022-04-06T04:32:38,907Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-06T04:32:38,909Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:38,909Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:39,023Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:39,027Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-06T04:32:39,029Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219559027), owningKey=DLH2PbU73bcGnwcFyeJmQv7UmBf62eTem8eYtbdmfjX8hx {}
[INFO ] 2022-04-06T04:32:39,029Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:39,034Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219559027) {}
[INFO ] 2022-04-06T04:32:39,039Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-06T04:32:39,039Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-06T04:32:39,039Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-06T04:32:39,044Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219559027), owningKey=DLH2PbU73bcGnwcFyeJmQv7UmBf62eTem8eYtbdmfjX8hx {}
[INFO ] 2022-04-06T04:32:39,045Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:39,071Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F205A04A1F0201841C3F475344FC1871245793E3B7970D264C4F47D7B1784D2A uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-06T04:32:39,085Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219559027) {}
[INFO ] 2022-04-06T04:32:39,087Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219557639), owningKey=DLGZwZkWwMEkGgo9iBKd1csJzKwFapysu8D9LQyBN261zs {}
[INFO ] 2022-04-06T04:32:39,087Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:39,096Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219559027), owningKey=DLH2PbU73bcGnwcFyeJmQv7UmBf62eTem8eYtbdmfjX8hx {}
[INFO ] 2022-04-06T04:32:39,096Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:39,109Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219558356), owningKey=DL22F7rNLBrLCNHaQ7mAhABS5eYZvGcY9pEtzZC7n1q9TL {}
[INFO ] 2022-04-06T04:32:39,109Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:39,118Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219559027), owningKey=DLH2PbU73bcGnwcFyeJmQv7UmBf62eTem8eYtbdmfjX8hx {}
[INFO ] 2022-04-06T04:32:39,118Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:39,126Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219559027), owningKey=DLH2PbU73bcGnwcFyeJmQv7UmBf62eTem8eYtbdmfjX8hx {}
[INFO ] 2022-04-06T04:32:39,126Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:39,126Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219559027), owningKey=DLH2PbU73bcGnwcFyeJmQv7UmBf62eTem8eYtbdmfjX8hx {}
[INFO ] 2022-04-06T04:32:39,126Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:39,225Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000010, flow-id=566f3f91-3e94-4e2c-840c-2dc4584a39be, invocation_id=d2300fd0-44f0-4d3c-8125-8f9132636d85, invocation_timestamp=2022-04-06T04:32:39.205Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d2300fd0-44f0-4d3c-8125-8f9132636d85, session_timestamp=2022-04-06T04:32:39.205Z, thread-id=798, tx_id=492B9C0DE8332D122C38FADB46EC0C61A0E92D6C2101B1A2B1CDD901EA776205}
[INFO ] 2022-04-06T04:32:39,234Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=566f3f91-3e94-4e2c-840c-2dc4584a39be, invocation_id=d2300fd0-44f0-4d3c-8125-8f9132636d85, invocation_timestamp=2022-04-06T04:32:39.205Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d2300fd0-44f0-4d3c-8125-8f9132636d85, session_timestamp=2022-04-06T04:32:39.205Z, thread-id=798, tx_id=492B9C0DE8332D122C38FADB46EC0C61A0E92D6C2101B1A2B1CDD901EA776205}
[INFO ] 2022-04-06T04:32:39,291Z [Mock network] corda.flow. - Flow raised an error: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null. Sending it to flow hospital to be triaged. {fiber-id=10000010, flow-id=566f3f91-3e94-4e2c-840c-2dc4584a39be, invocation_id=d2300fd0-44f0-4d3c-8125-8f9132636d85, invocation_timestamp=2022-04-06T04:32:39.205Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d2300fd0-44f0-4d3c-8125-8f9132636d85, session_timestamp=2022-04-06T04:32:39.205Z, thread-id=798, tx_id=492B9C0DE8332D122C38FADB46EC0C61A0E92D6C2101B1A2B1CDD901EA776205}
[INFO ] 2022-04-06T04:32:39,292Z [Mock network] statemachine.StaffedFlowHospital. - Flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=d2300fd0-44f0-4d3c-8125-8f9132636d85, timestamp: 2022-04-06T04:32:39.205Z, entityType: Invocation, sessionId=d2300fd0-44f0-4d3c-8125-8f9132636d85, timestamp: 2022-04-06T04:32:39.205Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-3724593894426588994)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-1147942696549799219), deduplicationSeed=D--1147942696549799219--8036564667662262831)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3724593894426588994))]), frozenFiber=2FE4CDBF0A369752698869386773CAD8FCF704AB2C7C920DE8D63B027DC077F0), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=ExampleFlow$Acceptor@7ae49b09, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@79d9ac80], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=8d393ceb-91bd-4c7a-8c7f-ba0fae9c5dea, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@4d263645[Permits = 0]) {fiber-id=10000010, flow-id=566f3f91-3e94-4e2c-840c-2dc4584a39be, invocation_id=d2300fd0-44f0-4d3c-8125-8f9132636d85, invocation_timestamp=2022-04-06T04:32:39.205Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d2300fd0-44f0-4d3c-8125-8f9132636d85, session_timestamp=2022-04-06T04:32:39.205Z, thread-id=798, tx_id=492B9C0DE8332D122C38FADB46EC0C61A0E92D6C2101B1A2B1CDD901EA776205}
[INFO ] 2022-04-06T04:32:39,292Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {fiber-id=10000010, flow-id=566f3f91-3e94-4e2c-840c-2dc4584a39be, invocation_id=d2300fd0-44f0-4d3c-8125-8f9132636d85, invocation_timestamp=2022-04-06T04:32:39.205Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d2300fd0-44f0-4d3c-8125-8f9132636d85, session_timestamp=2022-04-06T04:32:39.205Z, thread-id=798, tx_id=492B9C0DE8332D122C38FADB46EC0C61A0E92D6C2101B1A2B1CDD901EA776205}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[INFO ] 2022-04-06T04:32:39,292Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {fiber-id=10000010, flow-id=566f3f91-3e94-4e2c-840c-2dc4584a39be, invocation_id=d2300fd0-44f0-4d3c-8125-8f9132636d85, invocation_timestamp=2022-04-06T04:32:39.205Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d2300fd0-44f0-4d3c-8125-8f9132636d85, session_timestamp=2022-04-06T04:32:39.205Z, thread-id=798, tx_id=492B9C0DE8332D122C38FADB46EC0C61A0E92D6C2101B1A2B1CDD901EA776205}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[WARN ] 2022-04-06T04:32:39,297Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] errored, dumping all transitions:

 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.219Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[566f3f91-3e94-4e2c-840c-2dc4584a39be], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=d2300fd0-44f0-4d3c-8125-8f9132636d85, timestamp: 2022-04-06T04:32:39.205Z, entityType: Invocation, sessionId=d2300fd0-44f0-4d3c-8125-8f9132636d85, timestamp: 2022-04-06T04:32:39.205Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=B0A21FA49526E1D0395C7156F556016A605B9E05706F276D426A189774123194), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1380c7d8])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1380c7d8])
    SignalFlowHasStarted(flowId=[566f3f91-3e94-4e2c-840c-2dc4584a39be])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-1147942696549799219), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-3724593894426588994), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--1147942696549799219--8036564667662262831-0-0), senderUUID=8d393ceb-91bd-4c7a-8c7f-ba0fae9c5dea))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.206Z
    2022-04-06T04:32:39.207Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3724593894426588994): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-1147942696549799219), deduplicationSeed=D--1147942696549799219--8036564667662262831)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1380c7d8]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.219Z
  Event: EnterSubFlow(subFlowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.207Z
    2022-04-06T04:32:39.219Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.220Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.219Z
    2022-04-06T04:32:39.220Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.224Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3724593894426588994))]), maySkipCheckpoint=false, fiber=E12982CA45FFCF79DB619D7D96FC71787728DC1DA8D0B639E3847F2A9219952A, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[566f3f91-3e94-4e2c-840c-2dc4584a39be], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=d2300fd0-44f0-4d3c-8125-8f9132636d85, timestamp: 2022-04-06T04:32:39.205Z, entityType: Invocation, sessionId=d2300fd0-44f0-4d3c-8125-8f9132636d85, timestamp: 2022-04-06T04:32:39.205Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-3724593894426588994)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-1147942696549799219), deduplicationSeed=D--1147942696549799219--8036564667662262831)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3724593894426588994))]), frozenFiber=E12982CA45FFCF79DB619D7D96FC71787728DC1DA8D0B639E3847F2A9219952A), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.220Z
    2022-04-06T04:32:39.222Z
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=B0A21FA49526E1D0395C7156F556016A605B9E05706F276D426A189774123194)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3724593894426588994))]), frozenFiber=E12982CA45FFCF79DB619D7D96FC71787728DC1DA8D0B639E3847F2A9219952A)
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.224Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.222Z
    2022-04-06T04:32:39.224Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3724593894426588994).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.225Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.224Z
    2022-04-06T04:32:39.225Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.226Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.225Z
    2022-04-06T04:32:39.226Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.228Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.226Z
    2022-04-06T04:32:39.228Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.228Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.228Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.233Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3724593894426588994))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=2872F704AB0C5F6A2CD130BFFA70265F77A950E1ECCB379D07715859D9A48DDE, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[566f3f91-3e94-4e2c-840c-2dc4584a39be], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=d2300fd0-44f0-4d3c-8125-8f9132636d85, timestamp: 2022-04-06T04:32:39.205Z, entityType: Invocation, sessionId=d2300fd0-44f0-4d3c-8125-8f9132636d85, timestamp: 2022-04-06T04:32:39.205Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-3724593894426588994)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-1147942696549799219), deduplicationSeed=D--1147942696549799219--8036564667662262831)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3724593894426588994))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=2872F704AB0C5F6A2CD130BFFA70265F77A950E1ECCB379D07715859D9A48DDE), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.228Z
    2022-04-06T04:32:39.231Z
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3724593894426588994))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3724593894426588994))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    E12982CA45FFCF79DB619D7D96FC71787728DC1DA8D0B639E3847F2A9219952A
    2872F704AB0C5F6A2CD130BFFA70265F77A950E1ECCB379D07715859D9A48DDE
checkpoint.flowIoRequest: 
    Receive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.234Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-1147942696549799219), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--1147942696549799219--8036564667662262831-2-0), senderUUID=8d393ceb-91bd-4c7a-8c7f-ba0fae9c5dea))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.234Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.233Z
    2022-04-06T04:32:39.234Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.266Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.234Z
    2022-04-06T04:32:39.266Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.272Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3724593894426588994))]), maySkipCheckpoint=false, fiber=2FE4CDBF0A369752698869386773CAD8FCF704AB2C7C920DE8D63B027DC077F0, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[566f3f91-3e94-4e2c-840c-2dc4584a39be], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=d2300fd0-44f0-4d3c-8125-8f9132636d85, timestamp: 2022-04-06T04:32:39.205Z, entityType: Invocation, sessionId=d2300fd0-44f0-4d3c-8125-8f9132636d85, timestamp: 2022-04-06T04:32:39.205Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-3724593894426588994)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-1147942696549799219), deduplicationSeed=D--1147942696549799219--8036564667662262831)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3724593894426588994))]), frozenFiber=2FE4CDBF0A369752698869386773CAD8FCF704AB2C7C920DE8D63B027DC077F0), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.266Z
    2022-04-06T04:32:39.268Z
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3724593894426588994))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3724593894426588994))])
checkpoint.flowState.frozenFiber.hash: 
    2872F704AB0C5F6A2CD130BFFA70265F77A950E1ECCB379D07715859D9A48DDE
    2FE4CDBF0A369752698869386773CAD8FCF704AB2C7C920DE8D63B027DC077F0
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.272Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.288Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3724593894426588994), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@79d9ac80, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.272Z
    2022-04-06T04:32:39.288Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3724593894426588994).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@79d9ac80]


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.288Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-3724593894426588994).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.291Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.288Z
    2022-04-06T04:32:39.291Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.292Z
  Event: Error(exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=7448707390443040717, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.292Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.292Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.291Z
    2022-04-06T04:32:39.292Z
checkpoint.errorState.propagating: 
    false
    true
 {fiber-id=10000010, flow-id=566f3f91-3e94-4e2c-840c-2dc4584a39be, invocation_id=d2300fd0-44f0-4d3c-8125-8f9132636d85, invocation_timestamp=2022-04-06T04:32:39.205Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d2300fd0-44f0-4d3c-8125-8f9132636d85, session_timestamp=2022-04-06T04:32:39.205Z, thread-id=798, tx_id=492B9C0DE8332D122C38FADB46EC0C61A0E92D6C2101B1A2B1CDD901EA776205}
[WARN ] 2022-04-06T04:32:39,297Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] error {fiber-id=10000010, flow-id=566f3f91-3e94-4e2c-840c-2dc4584a39be, invocation_id=d2300fd0-44f0-4d3c-8125-8f9132636d85, invocation_timestamp=2022-04-06T04:32:39.205Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d2300fd0-44f0-4d3c-8125-8f9132636d85, session_timestamp=2022-04-06T04:32:39.205Z, thread-id=798, tx_id=492B9C0DE8332D122C38FADB46EC0C61A0E92D6C2101B1A2B1CDD901EA776205}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[WARN ] 2022-04-06T04:32:39,297Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {fiber-id=10000010, flow-id=566f3f91-3e94-4e2c-840c-2dc4584a39be, invocation_id=d2300fd0-44f0-4d3c-8125-8f9132636d85, invocation_timestamp=2022-04-06T04:32:39.205Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d2300fd0-44f0-4d3c-8125-8f9132636d85, session_timestamp=2022-04-06T04:32:39.205Z, thread-id=798, tx_id=492B9C0DE8332D122C38FADB46EC0C61A0E92D6C2101B1A2B1CDD901EA776205}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[WARN ] 2022-04-06T04:32:39,312Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] errored, dumping all transitions:

 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.219Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[566f3f91-3e94-4e2c-840c-2dc4584a39be], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=d2300fd0-44f0-4d3c-8125-8f9132636d85, timestamp: 2022-04-06T04:32:39.205Z, entityType: Invocation, sessionId=d2300fd0-44f0-4d3c-8125-8f9132636d85, timestamp: 2022-04-06T04:32:39.205Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=B0A21FA49526E1D0395C7156F556016A605B9E05706F276D426A189774123194), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1380c7d8])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1380c7d8])
    SignalFlowHasStarted(flowId=[566f3f91-3e94-4e2c-840c-2dc4584a39be])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-1147942696549799219), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-3724593894426588994), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--1147942696549799219--8036564667662262831-0-0), senderUUID=8d393ceb-91bd-4c7a-8c7f-ba0fae9c5dea))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.206Z
    2022-04-06T04:32:39.207Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3724593894426588994): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-1147942696549799219), deduplicationSeed=D--1147942696549799219--8036564667662262831)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1380c7d8]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.219Z
  Event: EnterSubFlow(subFlowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.207Z
    2022-04-06T04:32:39.219Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.220Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.219Z
    2022-04-06T04:32:39.220Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.224Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3724593894426588994))]), maySkipCheckpoint=false, fiber=E12982CA45FFCF79DB619D7D96FC71787728DC1DA8D0B639E3847F2A9219952A, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[566f3f91-3e94-4e2c-840c-2dc4584a39be], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=d2300fd0-44f0-4d3c-8125-8f9132636d85, timestamp: 2022-04-06T04:32:39.205Z, entityType: Invocation, sessionId=d2300fd0-44f0-4d3c-8125-8f9132636d85, timestamp: 2022-04-06T04:32:39.205Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-3724593894426588994)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-1147942696549799219), deduplicationSeed=D--1147942696549799219--8036564667662262831)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3724593894426588994))]), frozenFiber=E12982CA45FFCF79DB619D7D96FC71787728DC1DA8D0B639E3847F2A9219952A), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.220Z
    2022-04-06T04:32:39.222Z
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=B0A21FA49526E1D0395C7156F556016A605B9E05706F276D426A189774123194)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3724593894426588994))]), frozenFiber=E12982CA45FFCF79DB619D7D96FC71787728DC1DA8D0B639E3847F2A9219952A)
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.224Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.222Z
    2022-04-06T04:32:39.224Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3724593894426588994).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.225Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.224Z
    2022-04-06T04:32:39.225Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.226Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.225Z
    2022-04-06T04:32:39.226Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.228Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.226Z
    2022-04-06T04:32:39.228Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.228Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.228Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.233Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3724593894426588994))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=2872F704AB0C5F6A2CD130BFFA70265F77A950E1ECCB379D07715859D9A48DDE, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[566f3f91-3e94-4e2c-840c-2dc4584a39be], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=d2300fd0-44f0-4d3c-8125-8f9132636d85, timestamp: 2022-04-06T04:32:39.205Z, entityType: Invocation, sessionId=d2300fd0-44f0-4d3c-8125-8f9132636d85, timestamp: 2022-04-06T04:32:39.205Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-3724593894426588994)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-1147942696549799219), deduplicationSeed=D--1147942696549799219--8036564667662262831)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3724593894426588994))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=2872F704AB0C5F6A2CD130BFFA70265F77A950E1ECCB379D07715859D9A48DDE), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.228Z
    2022-04-06T04:32:39.231Z
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3724593894426588994))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3724593894426588994))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    E12982CA45FFCF79DB619D7D96FC71787728DC1DA8D0B639E3847F2A9219952A
    2872F704AB0C5F6A2CD130BFFA70265F77A950E1ECCB379D07715859D9A48DDE
checkpoint.flowIoRequest: 
    Receive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.234Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-1147942696549799219), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--1147942696549799219--8036564667662262831-2-0), senderUUID=8d393ceb-91bd-4c7a-8c7f-ba0fae9c5dea))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.234Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.233Z
    2022-04-06T04:32:39.234Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.266Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.234Z
    2022-04-06T04:32:39.266Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.272Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3724593894426588994))]), maySkipCheckpoint=false, fiber=2FE4CDBF0A369752698869386773CAD8FCF704AB2C7C920DE8D63B027DC077F0, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[566f3f91-3e94-4e2c-840c-2dc4584a39be], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=d2300fd0-44f0-4d3c-8125-8f9132636d85, timestamp: 2022-04-06T04:32:39.205Z, entityType: Invocation, sessionId=d2300fd0-44f0-4d3c-8125-8f9132636d85, timestamp: 2022-04-06T04:32:39.205Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-3724593894426588994)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-1147942696549799219), deduplicationSeed=D--1147942696549799219--8036564667662262831)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3724593894426588994))]), frozenFiber=2FE4CDBF0A369752698869386773CAD8FCF704AB2C7C920DE8D63B027DC077F0), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.266Z
    2022-04-06T04:32:39.268Z
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3724593894426588994))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3724593894426588994))])
checkpoint.flowState.frozenFiber.hash: 
    2872F704AB0C5F6A2CD130BFFA70265F77A950E1ECCB379D07715859D9A48DDE
    2FE4CDBF0A369752698869386773CAD8FCF704AB2C7C920DE8D63B027DC077F0
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.272Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.288Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3724593894426588994), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@79d9ac80, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.272Z
    2022-04-06T04:32:39.288Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3724593894426588994).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@79d9ac80]


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.288Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-3724593894426588994).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.291Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.288Z
    2022-04-06T04:32:39.291Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.292Z
  Event: Error(exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=7448707390443040717, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.292Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.292Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.291Z
    2022-04-06T04:32:39.292Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] ---
  Timestamp: 2022-04-06T04:32:39.310Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, errorId=7448707390443040717)], sessions=[Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-1147942696549799219), deduplicationSeed=D--1147942696549799219--8036564667662262831)], senderUUID=8d393ceb-91bd-4c7a-8c7f-ba0fae9c5dea)
    CreateTransaction
    RemoveCheckpoint(id=[566f3f91-3e94-4e2c-840c-2dc4584a39be], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@79d9ac80])
    ReleaseSoftLocks(uuid=566f3f91-3e94-4e2c-840c-2dc4584a39be)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@79d9ac80])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-3724593894426588994)])
    RemoveFlow(flowId=[566f3f91-3e94-4e2c-840c-2dc4584a39be], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=7448707390443040717, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=d2300fd0-44f0-4d3c-8125-8f9132636d85, timestamp: 2022-04-06T04:32:39.205Z, entityType: Invocation, sessionId=d2300fd0-44f0-4d3c-8125-8f9132636d85, timestamp: 2022-04-06T04:32:39.205Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=-3724593894426588994)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-1147942696549799219), deduplicationSeed=D--1147942696549799219--8036564667662262831)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=5), flowState=net.corda.node.services.statemachine.FlowState$Finished@70b21018, errorState=Errored(errors=[FlowError(errorId=7448707390443040717, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=ExampleFlow$Acceptor@7ae49b09, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=8d393ceb-91bd-4c7a-8c7f-ba0fae9c5dea, reloadCheckpointAfterSuspendCount=null, numberOfCommits=5, lock=java.util.concurrent.Semaphore@4d263645[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.292Z
    2022-04-06T04:32:39.297Z
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-3724593894426588994))]), frozenFiber=2FE4CDBF0A369752698869386773CAD8FCF704AB2C7C920DE8D63B027DC077F0)
    net.corda.node.services.statemachine.FlowState$Finished@70b21018
checkpoint.checkpointState.numberOfCommits: 
    4
    5
numberOfCommits: 
    4
    5
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@79d9ac80]
    []
isRemoved: 
    false
    true
 {fiber-id=10000010, flow-id=566f3f91-3e94-4e2c-840c-2dc4584a39be, invocation_id=d2300fd0-44f0-4d3c-8125-8f9132636d85, invocation_timestamp=2022-04-06T04:32:39.205Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d2300fd0-44f0-4d3c-8125-8f9132636d85, session_timestamp=2022-04-06T04:32:39.205Z, thread-id=798, tx_id=492B9C0DE8332D122C38FADB46EC0C61A0E92D6C2101B1A2B1CDD901EA776205}
[WARN ] 2022-04-06T04:32:39,312Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [566f3f91-3e94-4e2c-840c-2dc4584a39be] error {fiber-id=10000010, flow-id=566f3f91-3e94-4e2c-840c-2dc4584a39be, invocation_id=d2300fd0-44f0-4d3c-8125-8f9132636d85, invocation_timestamp=2022-04-06T04:32:39.205Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d2300fd0-44f0-4d3c-8125-8f9132636d85, session_timestamp=2022-04-06T04:32:39.205Z, thread-id=798, tx_id=492B9C0DE8332D122C38FADB46EC0C61A0E92D6C2101B1A2B1CDD901EA776205}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[INFO ] 2022-04-06T04:32:39,316Z [Mock network] corda.flow. - Flow raised an error: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=3f5df5b2-99d8-484c-81c6-c1b34ba463a8, invocation_id=14eff7ba-eb75-4084-b7cc-95d60f5d8418, invocation_timestamp=2022-04-06T04:32:39.128Z, origin=Only For Testing, session_id=14eff7ba-eb75-4084-b7cc-95d60f5d8418, session_timestamp=2022-04-06T04:32:39.128Z, thread-id=798}
[INFO ] 2022-04-06T04:32:39,317Z [Mock network] statemachine.StaffedFlowHospital. - Flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=14eff7ba-eb75-4084-b7cc-95d60f5d8418, timestamp: 2022-04-06T04:32:39.128Z, entityType: Invocation, sessionId=14eff7ba-eb75-4084-b7cc-95d60f5d8418, timestamp: 2022-04-06T04:32:39.128Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-1147942696549799219)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=-3724593894426588994), deduplicationSeed=R--1147942696549799219--8036564667662262831)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))]), frozenFiber=7370C5DF722C7C26A80E889A53D0C9E673FB1EAC05E123DCA92FD003EBF81441), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Receive, compatible=true), flowLogic=ExampleFlow$Initiator@796a21e0, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1c619df1], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=64ca5a78-269a-4374-a456-7153d47b3f69, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@5b3f1931[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=3f5df5b2-99d8-484c-81c6-c1b34ba463a8, invocation_id=14eff7ba-eb75-4084-b7cc-95d60f5d8418, invocation_timestamp=2022-04-06T04:32:39.128Z, origin=Only For Testing, session_id=14eff7ba-eb75-4084-b7cc-95d60f5d8418, session_timestamp=2022-04-06T04:32:39.128Z, thread-id=798}
[INFO ] 2022-04-06T04:32:39,317Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=3f5df5b2-99d8-484c-81c6-c1b34ba463a8, invocation_id=14eff7ba-eb75-4084-b7cc-95d60f5d8418, invocation_timestamp=2022-04-06T04:32:39.128Z, origin=Only For Testing, session_id=14eff7ba-eb75-4084-b7cc-95d60f5d8418, session_timestamp=2022-04-06T04:32:39.128Z, thread-id=798}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at Received counter-flow exception from peer O=Mock Company 2, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:257) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:159) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
[INFO ] 2022-04-06T04:32:39,317Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=3f5df5b2-99d8-484c-81c6-c1b34ba463a8, invocation_id=14eff7ba-eb75-4084-b7cc-95d60f5d8418, invocation_timestamp=2022-04-06T04:32:39.128Z, origin=Only For Testing, session_id=14eff7ba-eb75-4084-b7cc-95d60f5d8418, session_timestamp=2022-04-06T04:32:39.128Z, thread-id=798}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at Received counter-flow exception from peer O=Mock Company 2, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:257) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:159) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
[WARN ] 2022-04-06T04:32:39,322Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] errored, dumping all transitions:

 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.134Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[3f5df5b2-99d8-484c-81c6-c1b34ba463a8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=14eff7ba-eb75-4084-b7cc-95d60f5d8418, timestamp: 2022-04-06T04:32:39.128Z, entityType: Invocation, sessionId=14eff7ba-eb75-4084-b7cc-95d60f5d8418, timestamp: 2022-04-06T04:32:39.128Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=9B0F6456A6E4D7A5DF105D1DE1A665B6AF8F1311C453ADFDF89E4C27034F6C98), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@67cbe0cc])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@67cbe0cc])
    SignalFlowHasStarted(flowId=[3f5df5b2-99d8-484c-81c6-c1b34ba463a8])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@67cbe0cc]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.186Z
  Event: InitiateFlow(destination=O=Mock Company 2, L=London, C=GB, wellKnownParty=O=Mock Company 2, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[3f5df5b2-99d8-484c-81c6-c1b34ba463a8], sessionId=SessionId(toLong=-1147942696549799219))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.130Z
    2022-04-06T04:32:39.186Z
checkpoint.checkpointState.sessions.SessionId(toLong=-1147942696549799219): 
    null
    Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1147942696549799219), additionalEntropy=-8036564667662262831)


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.186Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.188Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.186Z
    2022-04-06T04:32:39.188Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.188Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.198Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))=0700138523D0F0A745D710AE527CD8A51CAC4C3397C1558C1A68D0EF346DEEDB}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=2C14F98D01A6CEE6AD4372ED3360907FA4146B38FEA0B9E324916984ED4EBAAA, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[3f5df5b2-99d8-484c-81c6-c1b34ba463a8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=14eff7ba-eb75-4084-b7cc-95d60f5d8418, timestamp: 2022-04-06T04:32:39.128Z, entityType: Invocation, sessionId=14eff7ba-eb75-4084-b7cc-95d60f5d8418, timestamp: 2022-04-06T04:32:39.128Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-1147942696549799219)=Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1147942696549799219), additionalEntropy=-8036564667662262831)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))=0700138523D0F0A745D710AE527CD8A51CAC4C3397C1558C1A68D0EF346DEEDB}, shouldRetrySend=false), frozenFiber=2C14F98D01A6CEE6AD4372ED3360907FA4146B38FEA0B9E324916984ED4EBAAA), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.188Z
    2022-04-06T04:32:39.195Z
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=9B0F6456A6E4D7A5DF105D1DE1A665B6AF8F1311C453ADFDF89E4C27034F6C98)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))=0700138523D0F0A745D710AE527CD8A51CAC4C3397C1558C1A68D0EF346DEEDB}, shouldRetrySend=false), frozenFiber=2C14F98D01A6CEE6AD4372ED3360907FA4146B38FEA0B9E324916984ED4EBAAA)
checkpoint.progressStep: 
    null
    Gathering the counterparty's signature.
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.202Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 2, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-1147942696549799219), initiationEntropy=-8036564667662262831, initiatorFlowClassName=ExampleFlow$Initiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--1147942696549799219--8036564667662262831-1-0), senderUUID=64ca5a78-269a-4374-a456-7153d47b3f69))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.195Z
    2022-04-06T04:32:39.198Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))=0700138523D0F0A745D710AE527CD8A51CAC4C3397C1558C1A68D0EF346DEEDB}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))])
checkpoint.checkpointState.sessions.SessionId(toLong=-1147942696549799219): 
    Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1147942696549799219), additionalEntropy=-8036564667662262831)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--1147942696549799219--8036564667662262831)


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.275Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-1147942696549799219), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-3724593894426588994), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@775a3467, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.198Z
    2022-04-06T04:32:39.275Z
checkpoint.checkpointState.sessions.SessionId(toLong=-1147942696549799219): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--1147942696549799219--8036564667662262831)
    Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3724593894426588994), deduplicationSeed=R--1147942696549799219--8036564667662262831)
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@775a3467]


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.275Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.277Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-1147942696549799219), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@67c4b168, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.275Z
    2022-04-06T04:32:39.277Z
checkpoint.checkpointState.sessions.SessionId(toLong=-1147942696549799219).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@775a3467]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@775a3467, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@67c4b168]


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.277Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-1147942696549799219).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.277Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.282Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))=E3256FFA470B3362BD070989612DB103580DF4E18214A45B3A2D389F27E0FCCA}), maySkipCheckpoint=false, fiber=60BAD21F610AC241D16A187184C7E05C96E4CB012D29A6C88579C068358686F2, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[3f5df5b2-99d8-484c-81c6-c1b34ba463a8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=14eff7ba-eb75-4084-b7cc-95d60f5d8418, timestamp: 2022-04-06T04:32:39.128Z, entityType: Invocation, sessionId=14eff7ba-eb75-4084-b7cc-95d60f5d8418, timestamp: 2022-04-06T04:32:39.128Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-1147942696549799219)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3724593894426588994), deduplicationSeed=R--1147942696549799219--8036564667662262831)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))=E3256FFA470B3362BD070989612DB103580DF4E18214A45B3A2D389F27E0FCCA}), frozenFiber=60BAD21F610AC241D16A187184C7E05C96E4CB012D29A6C88579C068358686F2), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@775a3467, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@67c4b168])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@775a3467, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@67c4b168])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.277Z
    2022-04-06T04:32:39.280Z
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))=E3256FFA470B3362BD070989612DB103580DF4E18214A45B3A2D389F27E0FCCA})
checkpoint.flowState.frozenFiber.hash: 
    2C14F98D01A6CEE6AD4372ED3360907FA4146B38FEA0B9E324916984ED4EBAAA
    60BAD21F610AC241D16A187184C7E05C96E4CB012D29A6C88579C068358686F2
checkpoint.flowIoRequest: 
    SendAndReceive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@775a3467, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@67c4b168]
    []
isFlowResumed: 
    true
    false


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.282Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 2, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3724593894426588994), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--1147942696549799219--8036564667662262831-2-0), senderUUID=64ca5a78-269a-4374-a456-7153d47b3f69))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.286Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))]), maySkipCheckpoint=false, fiber=7370C5DF722C7C26A80E889A53D0C9E673FB1EAC05E123DCA92FD003EBF81441, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[3f5df5b2-99d8-484c-81c6-c1b34ba463a8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=14eff7ba-eb75-4084-b7cc-95d60f5d8418, timestamp: 2022-04-06T04:32:39.128Z, entityType: Invocation, sessionId=14eff7ba-eb75-4084-b7cc-95d60f5d8418, timestamp: 2022-04-06T04:32:39.128Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-1147942696549799219)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3724593894426588994), deduplicationSeed=R--1147942696549799219--8036564667662262831)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))]), frozenFiber=7370C5DF722C7C26A80E889A53D0C9E673FB1EAC05E123DCA92FD003EBF81441), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.282Z
    2022-04-06T04:32:39.284Z
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))=E3256FFA470B3362BD070989612DB103580DF4E18214A45B3A2D389F27E0FCCA})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))])
checkpoint.flowState.frozenFiber.hash: 
    60BAD21F610AC241D16A187184C7E05C96E4CB012D29A6C88579C068358686F2
    7370C5DF722C7C26A80E889A53D0C9E673FB1EAC05E123DCA92FD003EBF81441
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.286Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.316Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-1147942696549799219), payload=ErrorSessionMessage(flowException=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, errorId=7448707390443040717)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1c619df1, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.286Z
    2022-04-06T04:32:39.316Z
checkpoint.checkpointState.sessions.SessionId(toLong=-1147942696549799219).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1c619df1]


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.316Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-1147942696549799219).receivedMessages.isEmpty: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-1147942696549799219).otherSideErrored: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.316Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.316Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.317Z
  Event: Error(exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=7448707390443040717, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.317Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.317Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.316Z
    2022-04-06T04:32:39.317Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=3f5df5b2-99d8-484c-81c6-c1b34ba463a8, invocation_id=14eff7ba-eb75-4084-b7cc-95d60f5d8418, invocation_timestamp=2022-04-06T04:32:39.128Z, origin=Only For Testing, session_id=14eff7ba-eb75-4084-b7cc-95d60f5d8418, session_timestamp=2022-04-06T04:32:39.128Z, thread-id=798}
[WARN ] 2022-04-06T04:32:39,322Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=3f5df5b2-99d8-484c-81c6-c1b34ba463a8, invocation_id=14eff7ba-eb75-4084-b7cc-95d60f5d8418, invocation_timestamp=2022-04-06T04:32:39.128Z, origin=Only For Testing, session_id=14eff7ba-eb75-4084-b7cc-95d60f5d8418, session_timestamp=2022-04-06T04:32:39.128Z, thread-id=798}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at Received counter-flow exception from peer O=Mock Company 2, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:257) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:159) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
[WARN ] 2022-04-06T04:32:39,323Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=3f5df5b2-99d8-484c-81c6-c1b34ba463a8, invocation_id=14eff7ba-eb75-4084-b7cc-95d60f5d8418, invocation_timestamp=2022-04-06T04:32:39.128Z, origin=Only For Testing, session_id=14eff7ba-eb75-4084-b7cc-95d60f5d8418, session_timestamp=2022-04-06T04:32:39.128Z, thread-id=798}
[WARN ] 2022-04-06T04:32:39,333Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] errored, dumping all transitions:

 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.134Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[3f5df5b2-99d8-484c-81c6-c1b34ba463a8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=14eff7ba-eb75-4084-b7cc-95d60f5d8418, timestamp: 2022-04-06T04:32:39.128Z, entityType: Invocation, sessionId=14eff7ba-eb75-4084-b7cc-95d60f5d8418, timestamp: 2022-04-06T04:32:39.128Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=9B0F6456A6E4D7A5DF105D1DE1A665B6AF8F1311C453ADFDF89E4C27034F6C98), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@67cbe0cc])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@67cbe0cc])
    SignalFlowHasStarted(flowId=[3f5df5b2-99d8-484c-81c6-c1b34ba463a8])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@67cbe0cc]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.186Z
  Event: InitiateFlow(destination=O=Mock Company 2, L=London, C=GB, wellKnownParty=O=Mock Company 2, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[3f5df5b2-99d8-484c-81c6-c1b34ba463a8], sessionId=SessionId(toLong=-1147942696549799219))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.130Z
    2022-04-06T04:32:39.186Z
checkpoint.checkpointState.sessions.SessionId(toLong=-1147942696549799219): 
    null
    Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1147942696549799219), additionalEntropy=-8036564667662262831)


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.186Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.188Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.186Z
    2022-04-06T04:32:39.188Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.188Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.198Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))=0700138523D0F0A745D710AE527CD8A51CAC4C3397C1558C1A68D0EF346DEEDB}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=2C14F98D01A6CEE6AD4372ED3360907FA4146B38FEA0B9E324916984ED4EBAAA, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[3f5df5b2-99d8-484c-81c6-c1b34ba463a8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=14eff7ba-eb75-4084-b7cc-95d60f5d8418, timestamp: 2022-04-06T04:32:39.128Z, entityType: Invocation, sessionId=14eff7ba-eb75-4084-b7cc-95d60f5d8418, timestamp: 2022-04-06T04:32:39.128Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-1147942696549799219)=Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1147942696549799219), additionalEntropy=-8036564667662262831)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))=0700138523D0F0A745D710AE527CD8A51CAC4C3397C1558C1A68D0EF346DEEDB}, shouldRetrySend=false), frozenFiber=2C14F98D01A6CEE6AD4372ED3360907FA4146B38FEA0B9E324916984ED4EBAAA), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.188Z
    2022-04-06T04:32:39.195Z
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=9B0F6456A6E4D7A5DF105D1DE1A665B6AF8F1311C453ADFDF89E4C27034F6C98)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))=0700138523D0F0A745D710AE527CD8A51CAC4C3397C1558C1A68D0EF346DEEDB}, shouldRetrySend=false), frozenFiber=2C14F98D01A6CEE6AD4372ED3360907FA4146B38FEA0B9E324916984ED4EBAAA)
checkpoint.progressStep: 
    null
    Gathering the counterparty's signature.
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.202Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 2, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-1147942696549799219), initiationEntropy=-8036564667662262831, initiatorFlowClassName=ExampleFlow$Initiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--1147942696549799219--8036564667662262831-1-0), senderUUID=64ca5a78-269a-4374-a456-7153d47b3f69))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.195Z
    2022-04-06T04:32:39.198Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))=0700138523D0F0A745D710AE527CD8A51CAC4C3397C1558C1A68D0EF346DEEDB}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))])
checkpoint.checkpointState.sessions.SessionId(toLong=-1147942696549799219): 
    Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1147942696549799219), additionalEntropy=-8036564667662262831)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--1147942696549799219--8036564667662262831)


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.275Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-1147942696549799219), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-3724593894426588994), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@775a3467, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.198Z
    2022-04-06T04:32:39.275Z
checkpoint.checkpointState.sessions.SessionId(toLong=-1147942696549799219): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--1147942696549799219--8036564667662262831)
    Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3724593894426588994), deduplicationSeed=R--1147942696549799219--8036564667662262831)
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@775a3467]


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.275Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.277Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-1147942696549799219), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@67c4b168, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.275Z
    2022-04-06T04:32:39.277Z
checkpoint.checkpointState.sessions.SessionId(toLong=-1147942696549799219).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@775a3467]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@775a3467, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@67c4b168]


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.277Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-1147942696549799219).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.277Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.282Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))=E3256FFA470B3362BD070989612DB103580DF4E18214A45B3A2D389F27E0FCCA}), maySkipCheckpoint=false, fiber=60BAD21F610AC241D16A187184C7E05C96E4CB012D29A6C88579C068358686F2, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[3f5df5b2-99d8-484c-81c6-c1b34ba463a8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=14eff7ba-eb75-4084-b7cc-95d60f5d8418, timestamp: 2022-04-06T04:32:39.128Z, entityType: Invocation, sessionId=14eff7ba-eb75-4084-b7cc-95d60f5d8418, timestamp: 2022-04-06T04:32:39.128Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-1147942696549799219)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3724593894426588994), deduplicationSeed=R--1147942696549799219--8036564667662262831)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))=E3256FFA470B3362BD070989612DB103580DF4E18214A45B3A2D389F27E0FCCA}), frozenFiber=60BAD21F610AC241D16A187184C7E05C96E4CB012D29A6C88579C068358686F2), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@775a3467, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@67c4b168])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@775a3467, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@67c4b168])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.277Z
    2022-04-06T04:32:39.280Z
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))=E3256FFA470B3362BD070989612DB103580DF4E18214A45B3A2D389F27E0FCCA})
checkpoint.flowState.frozenFiber.hash: 
    2C14F98D01A6CEE6AD4372ED3360907FA4146B38FEA0B9E324916984ED4EBAAA
    60BAD21F610AC241D16A187184C7E05C96E4CB012D29A6C88579C068358686F2
checkpoint.flowIoRequest: 
    SendAndReceive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@775a3467, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@67c4b168]
    []
isFlowResumed: 
    true
    false


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.282Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 2, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3724593894426588994), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--1147942696549799219--8036564667662262831-2-0), senderUUID=64ca5a78-269a-4374-a456-7153d47b3f69))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.286Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))]), maySkipCheckpoint=false, fiber=7370C5DF722C7C26A80E889A53D0C9E673FB1EAC05E123DCA92FD003EBF81441, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[3f5df5b2-99d8-484c-81c6-c1b34ba463a8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=14eff7ba-eb75-4084-b7cc-95d60f5d8418, timestamp: 2022-04-06T04:32:39.128Z, entityType: Invocation, sessionId=14eff7ba-eb75-4084-b7cc-95d60f5d8418, timestamp: 2022-04-06T04:32:39.128Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-1147942696549799219)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3724593894426588994), deduplicationSeed=R--1147942696549799219--8036564667662262831)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))]), frozenFiber=7370C5DF722C7C26A80E889A53D0C9E673FB1EAC05E123DCA92FD003EBF81441), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.282Z
    2022-04-06T04:32:39.284Z
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))=E3256FFA470B3362BD070989612DB103580DF4E18214A45B3A2D389F27E0FCCA})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))])
checkpoint.flowState.frozenFiber.hash: 
    60BAD21F610AC241D16A187184C7E05C96E4CB012D29A6C88579C068358686F2
    7370C5DF722C7C26A80E889A53D0C9E673FB1EAC05E123DCA92FD003EBF81441
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.286Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.316Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-1147942696549799219), payload=ErrorSessionMessage(flowException=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, errorId=7448707390443040717)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1c619df1, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.286Z
    2022-04-06T04:32:39.316Z
checkpoint.checkpointState.sessions.SessionId(toLong=-1147942696549799219).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1c619df1]


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.316Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-1147942696549799219).receivedMessages.isEmpty: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-1147942696549799219).otherSideErrored: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.316Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.316Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.317Z
  Event: Error(exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=7448707390443040717, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.317Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.317Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.316Z
    2022-04-06T04:32:39.317Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] ---
  Timestamp: 2022-04-06T04:32:39.330Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=7448707390443040717)], sessions=[], senderUUID=64ca5a78-269a-4374-a456-7153d47b3f69)
    CreateTransaction
    RemoveCheckpoint(id=[3f5df5b2-99d8-484c-81c6-c1b34ba463a8], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1c619df1])
    ReleaseSoftLocks(uuid=3f5df5b2-99d8-484c-81c6-c1b34ba463a8)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1c619df1])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-1147942696549799219)])
    RemoveFlow(flowId=[3f5df5b2-99d8-484c-81c6-c1b34ba463a8], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=7448707390443040717, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=14eff7ba-eb75-4084-b7cc-95d60f5d8418, timestamp: 2022-04-06T04:32:39.128Z, entityType: Invocation, sessionId=14eff7ba-eb75-4084-b7cc-95d60f5d8418, timestamp: 2022-04-06T04:32:39.128Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-1147942696549799219)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=-3724593894426588994), deduplicationSeed=R--1147942696549799219--8036564667662262831)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=5), flowState=net.corda.node.services.statemachine.FlowState$Finished@70b21018, errorState=Errored(errors=[FlowError(errorId=7448707390443040717, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Gathering the counterparty's signature., flowIoRequest=Receive, compatible=true), flowLogic=ExampleFlow$Initiator@796a21e0, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=64ca5a78-269a-4374-a456-7153d47b3f69, reloadCheckpointAfterSuspendCount=null, numberOfCommits=5, lock=java.util.concurrent.Semaphore@5b3f1931[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:39.317Z
    2022-04-06T04:32:39.323Z
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-1147942696549799219))]), frozenFiber=7370C5DF722C7C26A80E889A53D0C9E673FB1EAC05E123DCA92FD003EBF81441)
    net.corda.node.services.statemachine.FlowState$Finished@70b21018
checkpoint.checkpointState.numberOfCommits: 
    4
    5
numberOfCommits: 
    4
    5
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1c619df1]
    []
isRemoved: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=3f5df5b2-99d8-484c-81c6-c1b34ba463a8, invocation_id=14eff7ba-eb75-4084-b7cc-95d60f5d8418, invocation_timestamp=2022-04-06T04:32:39.128Z, origin=Only For Testing, session_id=14eff7ba-eb75-4084-b7cc-95d60f5d8418, session_timestamp=2022-04-06T04:32:39.128Z, thread-id=798}
[WARN ] 2022-04-06T04:32:39,333Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [3f5df5b2-99d8-484c-81c6-c1b34ba463a8] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=3f5df5b2-99d8-484c-81c6-c1b34ba463a8, invocation_id=14eff7ba-eb75-4084-b7cc-95d60f5d8418, invocation_timestamp=2022-04-06T04:32:39.128Z, origin=Only For Testing, session_id=14eff7ba-eb75-4084-b7cc-95d60f5d8418, session_timestamp=2022-04-06T04:32:39.128Z, thread-id=798}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at Received counter-flow exception from peer O=Mock Company 2, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:257) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:159) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
[INFO ] 2022-04-06T04:32:39,336Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-13) {}
[INFO ] 2022-04-06T04:32:39,349Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-06T04:32:39,349Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:39,351Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-14) {}
[INFO ] 2022-04-06T04:32:39,361Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-06T04:32:39,361Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:39,363Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-15) {}
[INFO ] 2022-04-06T04:32:39,375Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-06T04:32:39,375Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:39,473Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220406-043239.383-E060D64E73714DDC/nodes/0/cordapps] {}
[INFO ] 2022-04-06T04:32:39,474Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043239.383-E060D64E73714DDC/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043239.383-E060D64E73714DDC/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-06T04:32:39,474Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043239.383-E060D64E73714DDC/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-06T04:32:39,479Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043239.383-E060D64E73714DDC/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-06T04:32:39,502Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:39,503Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-06T04:32:39,504Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-06T04:32:39,508Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-06T04:32:39,508Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL67WScXsxoj5VksP3K1j7sEF5JiXCahNt6APek7wRnMdJ, alias: identity-private-key {}
[INFO ] 2022-04-06T04:32:39,518Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-06T04:32:39,524Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-06T04:32:39.383Z
      epoch=1
  } {}
[INFO ] 2022-04-06T04:32:39,996Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-06T04:32:39,999Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-06T04:32:39,999Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-06T04:32:40,109Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-04-06T04:32:40,114Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-06T04:32:40,117Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219560114), owningKey=DL67WScXsxoj5VksP3K1j7sEF5JiXCahNt6APek7wRnMdJ {}
[INFO ] 2022-04-06T04:32:40,117Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:40,131Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219560114) {}
[INFO ] 2022-04-06T04:32:40,138Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-06T04:32:40,139Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-06T04:32:40,139Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-06T04:32:40,145Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219560114), owningKey=DL67WScXsxoj5VksP3K1j7sEF5JiXCahNt6APek7wRnMdJ {}
[INFO ] 2022-04-06T04:32:40,145Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:40,174Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F205A04A1F0201841C3F475344FC1871245793E3B7970D264C4F47D7B1784D2A uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-06T04:32:40,176Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2022-04-06T04:32:40,191Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219560114) {}
[INFO ] 2022-04-06T04:32:40,191Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219560114), owningKey=DL67WScXsxoj5VksP3K1j7sEF5JiXCahNt6APek7wRnMdJ {}
[INFO ] 2022-04-06T04:32:40,191Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:40,191Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219560114), owningKey=DL67WScXsxoj5VksP3K1j7sEF5JiXCahNt6APek7wRnMdJ {}
[INFO ] 2022-04-06T04:32:40,191Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:40,200Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220406-043239.383-E060D64E73714DDC/nodes/1/cordapps] {}
[INFO ] 2022-04-06T04:32:40,200Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043239.383-E060D64E73714DDC/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043239.383-E060D64E73714DDC/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-06T04:32:40,200Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043239.383-E060D64E73714DDC/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-06T04:32:40,204Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043239.383-E060D64E73714DDC/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-06T04:32:40,227Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:40,228Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-06T04:32:40,229Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-06T04:32:40,267Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-06T04:32:40,267Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLBQwzPAwoXKLU4BU6uaMLNh6VQuhAzCdnvCQoFPrZ8FZp, alias: identity-private-key {}
[INFO ] 2022-04-06T04:32:40,276Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-06T04:32:40,278Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-06T04:32:39.383Z
      epoch=1
  } {}
[INFO ] 2022-04-06T04:32:40,656Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-06T04:32:40,657Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:40,657Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:40,756Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:40,760Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-06T04:32:40,762Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219560760), owningKey=DLBQwzPAwoXKLU4BU6uaMLNh6VQuhAzCdnvCQoFPrZ8FZp {}
[INFO ] 2022-04-06T04:32:40,762Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:40,767Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219560760) {}
[INFO ] 2022-04-06T04:32:40,773Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-06T04:32:40,773Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-06T04:32:40,773Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-06T04:32:40,778Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219560760), owningKey=DLBQwzPAwoXKLU4BU6uaMLNh6VQuhAzCdnvCQoFPrZ8FZp {}
[INFO ] 2022-04-06T04:32:40,778Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:40,816Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F205A04A1F0201841C3F475344FC1871245793E3B7970D264C4F47D7B1784D2A uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-06T04:32:40,832Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219560760) {}
[INFO ] 2022-04-06T04:32:40,834Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219560114), owningKey=DL67WScXsxoj5VksP3K1j7sEF5JiXCahNt6APek7wRnMdJ {}
[INFO ] 2022-04-06T04:32:40,834Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:40,841Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219560760), owningKey=DLBQwzPAwoXKLU4BU6uaMLNh6VQuhAzCdnvCQoFPrZ8FZp {}
[INFO ] 2022-04-06T04:32:40,841Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:40,847Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219560760), owningKey=DLBQwzPAwoXKLU4BU6uaMLNh6VQuhAzCdnvCQoFPrZ8FZp {}
[INFO ] 2022-04-06T04:32:40,847Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:40,847Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219560760), owningKey=DLBQwzPAwoXKLU4BU6uaMLNh6VQuhAzCdnvCQoFPrZ8FZp {}
[INFO ] 2022-04-06T04:32:40,847Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:40,854Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220406-043239.383-E060D64E73714DDC/nodes/2/cordapps] {}
[INFO ] 2022-04-06T04:32:40,854Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043239.383-E060D64E73714DDC/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043239.383-E060D64E73714DDC/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-04-06T04:32:40,854Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043239.383-E060D64E73714DDC/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2022-04-06T04:32:40,858Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/bizqsoft/Documents/project/corda/aws/d1/samples-java/project/blockchain/workflows/build/mock-network/20220406-043239.383-E060D64E73714DDC/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2022-04-06T04:32:40,880Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:40,881Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-04-06T04:32:40,882Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-04-06T04:32:40,936Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-04-06T04:32:40,936Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL3twmjCB5E7RgmveKRXmoVAzmqn1kMF3GM2GPzv6a17WD, alias: identity-private-key {}
[INFO ] 2022-04-06T04:32:40,947Z [Test worker] internal.NodeFlowManager. - Registered ExampleFlow$Initiator to initiate ExampleFlow$Acceptor (version 1) {}
[INFO ] 2022-04-06T04:32:40,949Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-04-06T04:32:39.383Z
      epoch=1
  } {}
[INFO ] 2022-04-06T04:32:41,328Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-04-06T04:32:41,329Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:41,329Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:41,437Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2022-04-06T04:32:41,441Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-04-06T04:32:41,443Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219561441), owningKey=DL3twmjCB5E7RgmveKRXmoVAzmqn1kMF3GM2GPzv6a17WD {}
[INFO ] 2022-04-06T04:32:41,443Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:41,448Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219561441) {}
[INFO ] 2022-04-06T04:32:41,452Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-04-06T04:32:41,453Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-04-06T04:32:41,453Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-04-06T04:32:41,457Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219561441), owningKey=DL3twmjCB5E7RgmveKRXmoVAzmqn1kMF3GM2GPzv6a17WD {}
[INFO ] 2022-04-06T04:32:41,457Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:41,484Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F205A04A1F0201841C3F475344FC1871245793E3B7970D264C4F47D7B1784D2A uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2022-04-06T04:32:41,495Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219561441) {}
[INFO ] 2022-04-06T04:32:41,497Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1649219560114), owningKey=DL67WScXsxoj5VksP3K1j7sEF5JiXCahNt6APek7wRnMdJ {}
[INFO ] 2022-04-06T04:32:41,497Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:41,504Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219561441), owningKey=DL3twmjCB5E7RgmveKRXmoVAzmqn1kMF3GM2GPzv6a17WD {}
[INFO ] 2022-04-06T04:32:41,504Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:41,512Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1649219560760), owningKey=DLBQwzPAwoXKLU4BU6uaMLNh6VQuhAzCdnvCQoFPrZ8FZp {}
[INFO ] 2022-04-06T04:32:41,512Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:41,518Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219561441), owningKey=DL3twmjCB5E7RgmveKRXmoVAzmqn1kMF3GM2GPzv6a17WD {}
[INFO ] 2022-04-06T04:32:41,518Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-04-06T04:32:41,526Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219561441), owningKey=DL3twmjCB5E7RgmveKRXmoVAzmqn1kMF3GM2GPzv6a17WD {}
[INFO ] 2022-04-06T04:32:41,526Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:41,526Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1649219561441), owningKey=DL3twmjCB5E7RgmveKRXmoVAzmqn1kMF3GM2GPzv6a17WD {}
[INFO ] 2022-04-06T04:32:41,526Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-04-06T04:32:41,632Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000012, flow-id=776632d3-0d22-49d2-b757-832be6feefbb, invocation_id=9474708b-df7c-4526-94a4-268539b59639, invocation_timestamp=2022-04-06T04:32:41.610Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9474708b-df7c-4526-94a4-268539b59639, session_timestamp=2022-04-06T04:32:41.610Z, thread-id=952, tx_id=CD796A81A9E1CE44BBB75E019BC4E2C26DEC38824B87349DEEB0CB6AED83E406}
[INFO ] 2022-04-06T04:32:41,644Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000012, flow-id=776632d3-0d22-49d2-b757-832be6feefbb, invocation_id=9474708b-df7c-4526-94a4-268539b59639, invocation_timestamp=2022-04-06T04:32:41.610Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9474708b-df7c-4526-94a4-268539b59639, session_timestamp=2022-04-06T04:32:41.610Z, thread-id=952, tx_id=CD796A81A9E1CE44BBB75E019BC4E2C26DEC38824B87349DEEB0CB6AED83E406}
[INFO ] 2022-04-06T04:32:41,699Z [Mock network] corda.flow. - Flow raised an error: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null. Sending it to flow hospital to be triaged. {fiber-id=10000012, flow-id=776632d3-0d22-49d2-b757-832be6feefbb, invocation_id=9474708b-df7c-4526-94a4-268539b59639, invocation_timestamp=2022-04-06T04:32:41.610Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9474708b-df7c-4526-94a4-268539b59639, session_timestamp=2022-04-06T04:32:41.610Z, thread-id=952, tx_id=CD796A81A9E1CE44BBB75E019BC4E2C26DEC38824B87349DEEB0CB6AED83E406}
[INFO ] 2022-04-06T04:32:41,700Z [Mock network] statemachine.StaffedFlowHospital. - Flow [776632d3-0d22-49d2-b757-832be6feefbb] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=9474708b-df7c-4526-94a4-268539b59639, timestamp: 2022-04-06T04:32:41.610Z, entityType: Invocation, sessionId=9474708b-df7c-4526-94a4-268539b59639, timestamp: 2022-04-06T04:32:41.610Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=9202197751228770747)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-5032226296060285529), deduplicationSeed=D--5032226296060285529-4021061472627489775)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=9202197751228770747))]), frozenFiber=2EC257CFB44F475174A7BD12D0C7F64499AAA6A266DDBBE8A24BA5896082C743), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=ExampleFlow$Acceptor@59ed98ce, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7a914561], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=7a8197be-2d19-4ad8-8e80-968519d75ec0, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@5301d77a[Permits = 0]) {fiber-id=10000012, flow-id=776632d3-0d22-49d2-b757-832be6feefbb, invocation_id=9474708b-df7c-4526-94a4-268539b59639, invocation_timestamp=2022-04-06T04:32:41.610Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9474708b-df7c-4526-94a4-268539b59639, session_timestamp=2022-04-06T04:32:41.610Z, thread-id=952, tx_id=CD796A81A9E1CE44BBB75E019BC4E2C26DEC38824B87349DEEB0CB6AED83E406}
[INFO ] 2022-04-06T04:32:41,700Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {fiber-id=10000012, flow-id=776632d3-0d22-49d2-b757-832be6feefbb, invocation_id=9474708b-df7c-4526-94a4-268539b59639, invocation_timestamp=2022-04-06T04:32:41.610Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9474708b-df7c-4526-94a4-268539b59639, session_timestamp=2022-04-06T04:32:41.610Z, thread-id=952, tx_id=CD796A81A9E1CE44BBB75E019BC4E2C26DEC38824B87349DEEB0CB6AED83E406}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[INFO ] 2022-04-06T04:32:41,700Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {fiber-id=10000012, flow-id=776632d3-0d22-49d2-b757-832be6feefbb, invocation_id=9474708b-df7c-4526-94a4-268539b59639, invocation_timestamp=2022-04-06T04:32:41.610Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9474708b-df7c-4526-94a4-268539b59639, session_timestamp=2022-04-06T04:32:41.610Z, thread-id=952, tx_id=CD796A81A9E1CE44BBB75E019BC4E2C26DEC38824B87349DEEB0CB6AED83E406}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[WARN ] 2022-04-06T04:32:41,703Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [776632d3-0d22-49d2-b757-832be6feefbb] errored, dumping all transitions:

 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.622Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[776632d3-0d22-49d2-b757-832be6feefbb], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=9474708b-df7c-4526-94a4-268539b59639, timestamp: 2022-04-06T04:32:41.610Z, entityType: Invocation, sessionId=9474708b-df7c-4526-94a4-268539b59639, timestamp: 2022-04-06T04:32:41.610Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=CDD86489E5DE9A0701303696BE4A513C874233092FB22283F07725B6582EF0DF), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@56d36393])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@56d36393])
    SignalFlowHasStarted(flowId=[776632d3-0d22-49d2-b757-832be6feefbb])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5032226296060285529), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=9202197751228770747), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--5032226296060285529-4021061472627489775-0-0), senderUUID=7a8197be-2d19-4ad8-8e80-968519d75ec0))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.610Z
    2022-04-06T04:32:41.611Z
checkpoint.checkpointState.sessions.SessionId(toLong=9202197751228770747): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-5032226296060285529), deduplicationSeed=D--5032226296060285529-4021061472627489775)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@56d36393]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.622Z
  Event: EnterSubFlow(subFlowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.611Z
    2022-04-06T04:32:41.622Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.622Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.630Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=9202197751228770747))]), maySkipCheckpoint=false, fiber=1DDDF36C9D3857604A19E72D4C9836EF1FF4749DF500953ECCD9CE90426BCE03, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[776632d3-0d22-49d2-b757-832be6feefbb], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=9474708b-df7c-4526-94a4-268539b59639, timestamp: 2022-04-06T04:32:41.610Z, entityType: Invocation, sessionId=9474708b-df7c-4526-94a4-268539b59639, timestamp: 2022-04-06T04:32:41.610Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=9202197751228770747)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-5032226296060285529), deduplicationSeed=D--5032226296060285529-4021061472627489775)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=9202197751228770747))]), frozenFiber=1DDDF36C9D3857604A19E72D4C9836EF1FF4749DF500953ECCD9CE90426BCE03), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.622Z
    2022-04-06T04:32:41.625Z
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=CDD86489E5DE9A0701303696BE4A513C874233092FB22283F07725B6582EF0DF)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=9202197751228770747))]), frozenFiber=1DDDF36C9D3857604A19E72D4C9836EF1FF4749DF500953ECCD9CE90426BCE03)
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.630Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.625Z
    2022-04-06T04:32:41.630Z
checkpoint.checkpointState.sessions.SessionId(toLong=9202197751228770747).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.632Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.630Z
    2022-04-06T04:32:41.632Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.633Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.634Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.632Z
    2022-04-06T04:32:41.634Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.634Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.634Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.642Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=9202197751228770747))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=1C1D6C3EACBA27F374753AC23FF008A6B33E0C31CEB7E9B6BAAECCC860BEBB60, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[776632d3-0d22-49d2-b757-832be6feefbb], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=9474708b-df7c-4526-94a4-268539b59639, timestamp: 2022-04-06T04:32:41.610Z, entityType: Invocation, sessionId=9474708b-df7c-4526-94a4-268539b59639, timestamp: 2022-04-06T04:32:41.610Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=9202197751228770747)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-5032226296060285529), deduplicationSeed=D--5032226296060285529-4021061472627489775)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=9202197751228770747))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=1C1D6C3EACBA27F374753AC23FF008A6B33E0C31CEB7E9B6BAAECCC860BEBB60), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.634Z
    2022-04-06T04:32:41.640Z
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=9202197751228770747))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=9202197751228770747))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    1DDDF36C9D3857604A19E72D4C9836EF1FF4749DF500953ECCD9CE90426BCE03
    1C1D6C3EACBA27F374753AC23FF008A6B33E0C31CEB7E9B6BAAECCC860BEBB60
checkpoint.flowIoRequest: 
    Receive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.644Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5032226296060285529), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--5032226296060285529-4021061472627489775-2-0), senderUUID=7a8197be-2d19-4ad8-8e80-968519d75ec0))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.644Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.642Z
    2022-04-06T04:32:41.644Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.668Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.644Z
    2022-04-06T04:32:41.668Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.672Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=9202197751228770747))]), maySkipCheckpoint=false, fiber=2EC257CFB44F475174A7BD12D0C7F64499AAA6A266DDBBE8A24BA5896082C743, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[776632d3-0d22-49d2-b757-832be6feefbb], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=9474708b-df7c-4526-94a4-268539b59639, timestamp: 2022-04-06T04:32:41.610Z, entityType: Invocation, sessionId=9474708b-df7c-4526-94a4-268539b59639, timestamp: 2022-04-06T04:32:41.610Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=9202197751228770747)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-5032226296060285529), deduplicationSeed=D--5032226296060285529-4021061472627489775)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=9202197751228770747))]), frozenFiber=2EC257CFB44F475174A7BD12D0C7F64499AAA6A266DDBBE8A24BA5896082C743), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.668Z
    2022-04-06T04:32:41.670Z
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=9202197751228770747))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=9202197751228770747))])
checkpoint.flowState.frozenFiber.hash: 
    1C1D6C3EACBA27F374753AC23FF008A6B33E0C31CEB7E9B6BAAECCC860BEBB60
    2EC257CFB44F475174A7BD12D0C7F64499AAA6A266DDBBE8A24BA5896082C743
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.673Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.696Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=9202197751228770747), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7a914561, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.673Z
    2022-04-06T04:32:41.696Z
checkpoint.checkpointState.sessions.SessionId(toLong=9202197751228770747).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7a914561]


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.697Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.696Z
    2022-04-06T04:32:41.697Z
checkpoint.checkpointState.sessions.SessionId(toLong=9202197751228770747).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.699Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.697Z
    2022-04-06T04:32:41.699Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.700Z
  Event: Error(exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.699Z
    2022-04-06T04:32:41.700Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=2617171730665748721, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.700Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.700Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
 {fiber-id=10000012, flow-id=776632d3-0d22-49d2-b757-832be6feefbb, invocation_id=9474708b-df7c-4526-94a4-268539b59639, invocation_timestamp=2022-04-06T04:32:41.610Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9474708b-df7c-4526-94a4-268539b59639, session_timestamp=2022-04-06T04:32:41.610Z, thread-id=952, tx_id=CD796A81A9E1CE44BBB75E019BC4E2C26DEC38824B87349DEEB0CB6AED83E406}
[WARN ] 2022-04-06T04:32:41,703Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [776632d3-0d22-49d2-b757-832be6feefbb] error {fiber-id=10000012, flow-id=776632d3-0d22-49d2-b757-832be6feefbb, invocation_id=9474708b-df7c-4526-94a4-268539b59639, invocation_timestamp=2022-04-06T04:32:41.610Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9474708b-df7c-4526-94a4-268539b59639, session_timestamp=2022-04-06T04:32:41.610Z, thread-id=952, tx_id=CD796A81A9E1CE44BBB75E019BC4E2C26DEC38824B87349DEEB0CB6AED83E406}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[WARN ] 2022-04-06T04:32:41,703Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {fiber-id=10000012, flow-id=776632d3-0d22-49d2-b757-832be6feefbb, invocation_id=9474708b-df7c-4526-94a4-268539b59639, invocation_timestamp=2022-04-06T04:32:41.610Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9474708b-df7c-4526-94a4-268539b59639, session_timestamp=2022-04-06T04:32:41.610Z, thread-id=952, tx_id=CD796A81A9E1CE44BBB75E019BC4E2C26DEC38824B87349DEEB0CB6AED83E406}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[WARN ] 2022-04-06T04:32:41,721Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [776632d3-0d22-49d2-b757-832be6feefbb] errored, dumping all transitions:

 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.622Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[776632d3-0d22-49d2-b757-832be6feefbb], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=9474708b-df7c-4526-94a4-268539b59639, timestamp: 2022-04-06T04:32:41.610Z, entityType: Invocation, sessionId=9474708b-df7c-4526-94a4-268539b59639, timestamp: 2022-04-06T04:32:41.610Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=CDD86489E5DE9A0701303696BE4A513C874233092FB22283F07725B6582EF0DF), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@56d36393])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@56d36393])
    SignalFlowHasStarted(flowId=[776632d3-0d22-49d2-b757-832be6feefbb])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5032226296060285529), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=9202197751228770747), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--5032226296060285529-4021061472627489775-0-0), senderUUID=7a8197be-2d19-4ad8-8e80-968519d75ec0))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.610Z
    2022-04-06T04:32:41.611Z
checkpoint.checkpointState.sessions.SessionId(toLong=9202197751228770747): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-5032226296060285529), deduplicationSeed=D--5032226296060285529-4021061472627489775)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@56d36393]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.622Z
  Event: EnterSubFlow(subFlowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.611Z
    2022-04-06T04:32:41.622Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.622Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.630Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=9202197751228770747))]), maySkipCheckpoint=false, fiber=1DDDF36C9D3857604A19E72D4C9836EF1FF4749DF500953ECCD9CE90426BCE03, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[776632d3-0d22-49d2-b757-832be6feefbb], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=9474708b-df7c-4526-94a4-268539b59639, timestamp: 2022-04-06T04:32:41.610Z, entityType: Invocation, sessionId=9474708b-df7c-4526-94a4-268539b59639, timestamp: 2022-04-06T04:32:41.610Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=9202197751228770747)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-5032226296060285529), deduplicationSeed=D--5032226296060285529-4021061472627489775)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=9202197751228770747))]), frozenFiber=1DDDF36C9D3857604A19E72D4C9836EF1FF4749DF500953ECCD9CE90426BCE03), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.622Z
    2022-04-06T04:32:41.625Z
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=CDD86489E5DE9A0701303696BE4A513C874233092FB22283F07725B6582EF0DF)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=9202197751228770747))]), frozenFiber=1DDDF36C9D3857604A19E72D4C9836EF1FF4749DF500953ECCD9CE90426BCE03)
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.630Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.625Z
    2022-04-06T04:32:41.630Z
checkpoint.checkpointState.sessions.SessionId(toLong=9202197751228770747).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.632Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.630Z
    2022-04-06T04:32:41.632Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.633Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.634Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.632Z
    2022-04-06T04:32:41.634Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.634Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.634Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.642Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=9202197751228770747))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=1C1D6C3EACBA27F374753AC23FF008A6B33E0C31CEB7E9B6BAAECCC860BEBB60, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[776632d3-0d22-49d2-b757-832be6feefbb], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=9474708b-df7c-4526-94a4-268539b59639, timestamp: 2022-04-06T04:32:41.610Z, entityType: Invocation, sessionId=9474708b-df7c-4526-94a4-268539b59639, timestamp: 2022-04-06T04:32:41.610Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=9202197751228770747)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-5032226296060285529), deduplicationSeed=D--5032226296060285529-4021061472627489775)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=9202197751228770747))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=1C1D6C3EACBA27F374753AC23FF008A6B33E0C31CEB7E9B6BAAECCC860BEBB60), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.634Z
    2022-04-06T04:32:41.640Z
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=9202197751228770747))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=9202197751228770747))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    1DDDF36C9D3857604A19E72D4C9836EF1FF4749DF500953ECCD9CE90426BCE03
    1C1D6C3EACBA27F374753AC23FF008A6B33E0C31CEB7E9B6BAAECCC860BEBB60
checkpoint.flowIoRequest: 
    Receive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.644Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5032226296060285529), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--5032226296060285529-4021061472627489775-2-0), senderUUID=7a8197be-2d19-4ad8-8e80-968519d75ec0))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.644Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.642Z
    2022-04-06T04:32:41.644Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.668Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.644Z
    2022-04-06T04:32:41.668Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.672Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=9202197751228770747))]), maySkipCheckpoint=false, fiber=2EC257CFB44F475174A7BD12D0C7F64499AAA6A266DDBBE8A24BA5896082C743, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[776632d3-0d22-49d2-b757-832be6feefbb], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=9474708b-df7c-4526-94a4-268539b59639, timestamp: 2022-04-06T04:32:41.610Z, entityType: Invocation, sessionId=9474708b-df7c-4526-94a4-268539b59639, timestamp: 2022-04-06T04:32:41.610Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=9202197751228770747)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-5032226296060285529), deduplicationSeed=D--5032226296060285529-4021061472627489775)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=9202197751228770747))]), frozenFiber=2EC257CFB44F475174A7BD12D0C7F64499AAA6A266DDBBE8A24BA5896082C743), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.668Z
    2022-04-06T04:32:41.670Z
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=9202197751228770747))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=9202197751228770747))])
checkpoint.flowState.frozenFiber.hash: 
    1C1D6C3EACBA27F374753AC23FF008A6B33E0C31CEB7E9B6BAAECCC860BEBB60
    2EC257CFB44F475174A7BD12D0C7F64499AAA6A266DDBBE8A24BA5896082C743
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.673Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.696Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=9202197751228770747), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7a914561, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.673Z
    2022-04-06T04:32:41.696Z
checkpoint.checkpointState.sessions.SessionId(toLong=9202197751228770747).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7a914561]


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.697Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.696Z
    2022-04-06T04:32:41.697Z
checkpoint.checkpointState.sessions.SessionId(toLong=9202197751228770747).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.699Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.697Z
    2022-04-06T04:32:41.699Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class ExampleFlow$Acceptor$1SignTxFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.700Z
  Event: Error(exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.699Z
    2022-04-06T04:32:41.700Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=2617171730665748721, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.700Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.700Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [776632d3-0d22-49d2-b757-832be6feefbb] ---
  Timestamp: 2022-04-06T04:32:41.718Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, errorId=2617171730665748721)], sessions=[Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-5032226296060285529), deduplicationSeed=D--5032226296060285529-4021061472627489775)], senderUUID=7a8197be-2d19-4ad8-8e80-968519d75ec0)
    CreateTransaction
    RemoveCheckpoint(id=[776632d3-0d22-49d2-b757-832be6feefbb], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7a914561])
    ReleaseSoftLocks(uuid=776632d3-0d22-49d2-b757-832be6feefbb)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7a914561])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=9202197751228770747)])
    RemoveFlow(flowId=[776632d3-0d22-49d2-b757-832be6feefbb], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=2617171730665748721, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=9474708b-df7c-4526-94a4-268539b59639, timestamp: 2022-04-06T04:32:41.610Z, entityType: Invocation, sessionId=9474708b-df7c-4526-94a4-268539b59639, timestamp: 2022-04-06T04:32:41.610Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=9202197751228770747)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-5032226296060285529), deduplicationSeed=D--5032226296060285529-4021061472627489775)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class ExampleFlow$Acceptor, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=5), flowState=net.corda.node.services.statemachine.FlowState$Finished@70b21018, errorState=Errored(errors=[FlowError(errorId=2617171730665748721, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=ExampleFlow$Acceptor@59ed98ce, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=7a8197be-2d19-4ad8-8e80-968519d75ec0, reloadCheckpointAfterSuspendCount=null, numberOfCommits=5, lock=java.util.concurrent.Semaphore@5301d77a[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.700Z
    2022-04-06T04:32:41.703Z
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=9202197751228770747))]), frozenFiber=2EC257CFB44F475174A7BD12D0C7F64499AAA6A266DDBBE8A24BA5896082C743)
    net.corda.node.services.statemachine.FlowState$Finished@70b21018
checkpoint.checkpointState.numberOfCommits: 
    4
    5
numberOfCommits: 
    4
    5
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7a914561]
    []
isRemoved: 
    false
    true
 {fiber-id=10000012, flow-id=776632d3-0d22-49d2-b757-832be6feefbb, invocation_id=9474708b-df7c-4526-94a4-268539b59639, invocation_timestamp=2022-04-06T04:32:41.610Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9474708b-df7c-4526-94a4-268539b59639, session_timestamp=2022-04-06T04:32:41.610Z, thread-id=952, tx_id=CD796A81A9E1CE44BBB75E019BC4E2C26DEC38824B87349DEEB0CB6AED83E406}
[WARN ] 2022-04-06T04:32:41,721Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [776632d3-0d22-49d2-b757-832be6feefbb] error {fiber-id=10000012, flow-id=776632d3-0d22-49d2-b757-832be6feefbb, invocation_id=9474708b-df7c-4526-94a4-268539b59639, invocation_timestamp=2022-04-06T04:32:41.610Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9474708b-df7c-4526-94a4-268539b59639, session_timestamp=2022-04-06T04:32:41.610Z, thread-id=952, tx_id=CD796A81A9E1CE44BBB75E019BC4E2C26DEC38824B87349DEEB0CB6AED83E406}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:296) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:198) ~[main/:?]
	at ExampleFlow$Acceptor.call(ExampleFlow.java:169) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.lambda$checkTransaction$0(ExampleFlow.java:192) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Acceptor$1SignTxFlow.checkTransaction(ExampleFlow.java:188) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.8.5.jar:?]
	... 18 more
[INFO ] 2022-04-06T04:32:41,725Z [Mock network] corda.flow. - Flow raised an error: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=5de10979-388f-4695-9b87-00ac594caa22, invocation_id=e6ded999-248f-48af-b7d6-96b9a63831d9, invocation_timestamp=2022-04-06T04:32:41.529Z, origin=Only For Testing, session_id=e6ded999-248f-48af-b7d6-96b9a63831d9, session_timestamp=2022-04-06T04:32:41.529Z, thread-id=952}
[INFO ] 2022-04-06T04:32:41,726Z [Mock network] statemachine.StaffedFlowHospital. - Flow [5de10979-388f-4695-9b87-00ac594caa22] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=e6ded999-248f-48af-b7d6-96b9a63831d9, timestamp: 2022-04-06T04:32:41.529Z, entityType: Invocation, sessionId=e6ded999-248f-48af-b7d6-96b9a63831d9, timestamp: 2022-04-06T04:32:41.529Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-5032226296060285529)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=9202197751228770747), deduplicationSeed=R--5032226296060285529-4021061472627489775)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))]), frozenFiber=0BCC4D1974E1791485BB19ED21EC658DE8AE87374CD63604EB224AC511D63B34), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Receive, compatible=true), flowLogic=ExampleFlow$Initiator@7c2ae8b, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@640e79b0], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=36b35fbd-cf1f-45f7-a00a-0f723e184aa3, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@27120d9d[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=5de10979-388f-4695-9b87-00ac594caa22, invocation_id=e6ded999-248f-48af-b7d6-96b9a63831d9, invocation_timestamp=2022-04-06T04:32:41.529Z, origin=Only For Testing, session_id=e6ded999-248f-48af-b7d6-96b9a63831d9, session_timestamp=2022-04-06T04:32:41.529Z, thread-id=952}
[INFO ] 2022-04-06T04:32:41,726Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=5de10979-388f-4695-9b87-00ac594caa22, invocation_id=e6ded999-248f-48af-b7d6-96b9a63831d9, invocation_timestamp=2022-04-06T04:32:41.529Z, origin=Only For Testing, session_id=e6ded999-248f-48af-b7d6-96b9a63831d9, session_timestamp=2022-04-06T04:32:41.529Z, thread-id=952}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at Received counter-flow exception from peer O=Mock Company 2, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:257) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:159) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
[INFO ] 2022-04-06T04:32:41,726Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=5de10979-388f-4695-9b87-00ac594caa22, invocation_id=e6ded999-248f-48af-b7d6-96b9a63831d9, invocation_timestamp=2022-04-06T04:32:41.529Z, origin=Only For Testing, session_id=e6ded999-248f-48af-b7d6-96b9a63831d9, session_timestamp=2022-04-06T04:32:41.529Z, thread-id=952}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at Received counter-flow exception from peer O=Mock Company 2, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:257) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:159) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
[WARN ] 2022-04-06T04:32:41,730Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [5de10979-388f-4695-9b87-00ac594caa22] errored, dumping all transitions:

 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.533Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[5de10979-388f-4695-9b87-00ac594caa22], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=e6ded999-248f-48af-b7d6-96b9a63831d9, timestamp: 2022-04-06T04:32:41.529Z, entityType: Invocation, sessionId=e6ded999-248f-48af-b7d6-96b9a63831d9, timestamp: 2022-04-06T04:32:41.529Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=9929F7F61AC0B9D900EC8E602E3D568B59A0B0AFEDE1A9B1DF8E8F8AFC8CF759), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@5f1752ed])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@5f1752ed])
    SignalFlowHasStarted(flowId=[5de10979-388f-4695-9b87-00ac594caa22])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@5f1752ed]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.590Z
  Event: InitiateFlow(destination=O=Mock Company 2, L=London, C=GB, wellKnownParty=O=Mock Company 2, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[5de10979-388f-4695-9b87-00ac594caa22], sessionId=SessionId(toLong=-5032226296060285529))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.530Z
    2022-04-06T04:32:41.590Z
checkpoint.checkpointState.sessions.SessionId(toLong=-5032226296060285529): 
    null
    Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5032226296060285529), additionalEntropy=4021061472627489775)


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.590Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.593Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.590Z
    2022-04-06T04:32:41.593Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.593Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.602Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))=C3A9C3725C957F4B7111D83D519B83A1DBE9E9C022511F61C55871ED18337A8F}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=610631F8C8B6149C1BF816DE6E62B9BE7F3E464F518D1F42D9CDD5729DE8B8B6, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[5de10979-388f-4695-9b87-00ac594caa22], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=e6ded999-248f-48af-b7d6-96b9a63831d9, timestamp: 2022-04-06T04:32:41.529Z, entityType: Invocation, sessionId=e6ded999-248f-48af-b7d6-96b9a63831d9, timestamp: 2022-04-06T04:32:41.529Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-5032226296060285529)=Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5032226296060285529), additionalEntropy=4021061472627489775)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))=C3A9C3725C957F4B7111D83D519B83A1DBE9E9C022511F61C55871ED18337A8F}, shouldRetrySend=false), frozenFiber=610631F8C8B6149C1BF816DE6E62B9BE7F3E464F518D1F42D9CDD5729DE8B8B6), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.593Z
    2022-04-06T04:32:41.600Z
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=9929F7F61AC0B9D900EC8E602E3D568B59A0B0AFEDE1A9B1DF8E8F8AFC8CF759)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))=C3A9C3725C957F4B7111D83D519B83A1DBE9E9C022511F61C55871ED18337A8F}, shouldRetrySend=false), frozenFiber=610631F8C8B6149C1BF816DE6E62B9BE7F3E464F518D1F42D9CDD5729DE8B8B6)
checkpoint.progressStep: 
    null
    Gathering the counterparty's signature.
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.607Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 2, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-5032226296060285529), initiationEntropy=4021061472627489775, initiatorFlowClassName=ExampleFlow$Initiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--5032226296060285529-4021061472627489775-1-0), senderUUID=36b35fbd-cf1f-45f7-a00a-0f723e184aa3))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.600Z
    2022-04-06T04:32:41.602Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))=C3A9C3725C957F4B7111D83D519B83A1DBE9E9C022511F61C55871ED18337A8F}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))])
checkpoint.checkpointState.sessions.SessionId(toLong=-5032226296060285529): 
    Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5032226296060285529), additionalEntropy=4021061472627489775)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--5032226296060285529-4021061472627489775)


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.676Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5032226296060285529), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=9202197751228770747), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@307f45c8, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.602Z
    2022-04-06T04:32:41.676Z
checkpoint.checkpointState.sessions.SessionId(toLong=-5032226296060285529): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--5032226296060285529-4021061472627489775)
    Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=9202197751228770747), deduplicationSeed=R--5032226296060285529-4021061472627489775)
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@307f45c8]


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.676Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.678Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5032226296060285529), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@27ab698e, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.676Z
    2022-04-06T04:32:41.678Z
checkpoint.checkpointState.sessions.SessionId(toLong=-5032226296060285529).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@307f45c8]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@307f45c8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@27ab698e]


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.678Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-5032226296060285529).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.678Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.685Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))=B25067D0F7F59A99406AF697FA7B5B71B7D1B3E9D7355E7982081DD488876971}), maySkipCheckpoint=false, fiber=9CE88336C7087D4543ED800209B075EB3FE8912D98F2200A278A48B60AFCAD9F, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[5de10979-388f-4695-9b87-00ac594caa22], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=e6ded999-248f-48af-b7d6-96b9a63831d9, timestamp: 2022-04-06T04:32:41.529Z, entityType: Invocation, sessionId=e6ded999-248f-48af-b7d6-96b9a63831d9, timestamp: 2022-04-06T04:32:41.529Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-5032226296060285529)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=9202197751228770747), deduplicationSeed=R--5032226296060285529-4021061472627489775)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))=B25067D0F7F59A99406AF697FA7B5B71B7D1B3E9D7355E7982081DD488876971}), frozenFiber=9CE88336C7087D4543ED800209B075EB3FE8912D98F2200A278A48B60AFCAD9F), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@307f45c8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@27ab698e])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@307f45c8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@27ab698e])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.678Z
    2022-04-06T04:32:41.681Z
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))=B25067D0F7F59A99406AF697FA7B5B71B7D1B3E9D7355E7982081DD488876971})
checkpoint.flowState.frozenFiber.hash: 
    610631F8C8B6149C1BF816DE6E62B9BE7F3E464F518D1F42D9CDD5729DE8B8B6
    9CE88336C7087D4543ED800209B075EB3FE8912D98F2200A278A48B60AFCAD9F
checkpoint.flowIoRequest: 
    SendAndReceive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@307f45c8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@27ab698e]
    []
isFlowResumed: 
    true
    false


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.686Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 2, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=9202197751228770747), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--5032226296060285529-4021061472627489775-2-0), senderUUID=36b35fbd-cf1f-45f7-a00a-0f723e184aa3))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.695Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))]), maySkipCheckpoint=false, fiber=0BCC4D1974E1791485BB19ED21EC658DE8AE87374CD63604EB224AC511D63B34, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[5de10979-388f-4695-9b87-00ac594caa22], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=e6ded999-248f-48af-b7d6-96b9a63831d9, timestamp: 2022-04-06T04:32:41.529Z, entityType: Invocation, sessionId=e6ded999-248f-48af-b7d6-96b9a63831d9, timestamp: 2022-04-06T04:32:41.529Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-5032226296060285529)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=9202197751228770747), deduplicationSeed=R--5032226296060285529-4021061472627489775)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))]), frozenFiber=0BCC4D1974E1791485BB19ED21EC658DE8AE87374CD63604EB224AC511D63B34), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.685Z
    2022-04-06T04:32:41.693Z
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))=B25067D0F7F59A99406AF697FA7B5B71B7D1B3E9D7355E7982081DD488876971})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))])
checkpoint.flowState.frozenFiber.hash: 
    9CE88336C7087D4543ED800209B075EB3FE8912D98F2200A278A48B60AFCAD9F
    0BCC4D1974E1791485BB19ED21EC658DE8AE87374CD63604EB224AC511D63B34
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.695Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.724Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5032226296060285529), payload=ErrorSessionMessage(flowException=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, errorId=2617171730665748721)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@640e79b0, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.695Z
    2022-04-06T04:32:41.724Z
checkpoint.checkpointState.sessions.SessionId(toLong=-5032226296060285529).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@640e79b0]


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.725Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.724Z
    2022-04-06T04:32:41.725Z
checkpoint.checkpointState.sessions.SessionId(toLong=-5032226296060285529).receivedMessages.isEmpty: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-5032226296060285529).otherSideErrored: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.725Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.725Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.726Z
  Event: Error(exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=2617171730665748721, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.726Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.726Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.725Z
    2022-04-06T04:32:41.726Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=5de10979-388f-4695-9b87-00ac594caa22, invocation_id=e6ded999-248f-48af-b7d6-96b9a63831d9, invocation_timestamp=2022-04-06T04:32:41.529Z, origin=Only For Testing, session_id=e6ded999-248f-48af-b7d6-96b9a63831d9, session_timestamp=2022-04-06T04:32:41.529Z, thread-id=952}
[WARN ] 2022-04-06T04:32:41,730Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [5de10979-388f-4695-9b87-00ac594caa22] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=5de10979-388f-4695-9b87-00ac594caa22, invocation_id=e6ded999-248f-48af-b7d6-96b9a63831d9, invocation_timestamp=2022-04-06T04:32:41.529Z, origin=Only For Testing, session_id=e6ded999-248f-48af-b7d6-96b9a63831d9, session_timestamp=2022-04-06T04:32:41.529Z, thread-id=952}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at Received counter-flow exception from peer O=Mock Company 2, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:257) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:159) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
[WARN ] 2022-04-06T04:32:41,730Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=5de10979-388f-4695-9b87-00ac594caa22, invocation_id=e6ded999-248f-48af-b7d6-96b9a63831d9, invocation_timestamp=2022-04-06T04:32:41.529Z, origin=Only For Testing, session_id=e6ded999-248f-48af-b7d6-96b9a63831d9, session_timestamp=2022-04-06T04:32:41.529Z, thread-id=952}
[WARN ] 2022-04-06T04:32:41,744Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [5de10979-388f-4695-9b87-00ac594caa22] errored, dumping all transitions:

 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.533Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[5de10979-388f-4695-9b87-00ac594caa22], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=e6ded999-248f-48af-b7d6-96b9a63831d9, timestamp: 2022-04-06T04:32:41.529Z, entityType: Invocation, sessionId=e6ded999-248f-48af-b7d6-96b9a63831d9, timestamp: 2022-04-06T04:32:41.529Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=9929F7F61AC0B9D900EC8E602E3D568B59A0B0AFEDE1A9B1DF8E8F8AFC8CF759), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@5f1752ed])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@5f1752ed])
    SignalFlowHasStarted(flowId=[5de10979-388f-4695-9b87-00ac594caa22])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@5f1752ed]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.590Z
  Event: InitiateFlow(destination=O=Mock Company 2, L=London, C=GB, wellKnownParty=O=Mock Company 2, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[5de10979-388f-4695-9b87-00ac594caa22], sessionId=SessionId(toLong=-5032226296060285529))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.530Z
    2022-04-06T04:32:41.590Z
checkpoint.checkpointState.sessions.SessionId(toLong=-5032226296060285529): 
    null
    Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5032226296060285529), additionalEntropy=4021061472627489775)


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.590Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.593Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.590Z
    2022-04-06T04:32:41.593Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.593Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.602Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))=C3A9C3725C957F4B7111D83D519B83A1DBE9E9C022511F61C55871ED18337A8F}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=610631F8C8B6149C1BF816DE6E62B9BE7F3E464F518D1F42D9CDD5729DE8B8B6, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[5de10979-388f-4695-9b87-00ac594caa22], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=e6ded999-248f-48af-b7d6-96b9a63831d9, timestamp: 2022-04-06T04:32:41.529Z, entityType: Invocation, sessionId=e6ded999-248f-48af-b7d6-96b9a63831d9, timestamp: 2022-04-06T04:32:41.529Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-5032226296060285529)=Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5032226296060285529), additionalEntropy=4021061472627489775)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))=C3A9C3725C957F4B7111D83D519B83A1DBE9E9C022511F61C55871ED18337A8F}, shouldRetrySend=false), frozenFiber=610631F8C8B6149C1BF816DE6E62B9BE7F3E464F518D1F42D9CDD5729DE8B8B6), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.593Z
    2022-04-06T04:32:41.600Z
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=9929F7F61AC0B9D900EC8E602E3D568B59A0B0AFEDE1A9B1DF8E8F8AFC8CF759)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))=C3A9C3725C957F4B7111D83D519B83A1DBE9E9C022511F61C55871ED18337A8F}, shouldRetrySend=false), frozenFiber=610631F8C8B6149C1BF816DE6E62B9BE7F3E464F518D1F42D9CDD5729DE8B8B6)
checkpoint.progressStep: 
    null
    Gathering the counterparty's signature.
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.607Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 2, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-5032226296060285529), initiationEntropy=4021061472627489775, initiatorFlowClassName=ExampleFlow$Initiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--5032226296060285529-4021061472627489775-1-0), senderUUID=36b35fbd-cf1f-45f7-a00a-0f723e184aa3))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.600Z
    2022-04-06T04:32:41.602Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))=FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))=C3A9C3725C957F4B7111D83D519B83A1DBE9E9C022511F61C55871ED18337A8F}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))])
checkpoint.checkpointState.sessions.SessionId(toLong=-5032226296060285529): 
    Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5032226296060285529), additionalEntropy=4021061472627489775)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--5032226296060285529-4021061472627489775)


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.676Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5032226296060285529), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=9202197751228770747), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@307f45c8, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.602Z
    2022-04-06T04:32:41.676Z
checkpoint.checkpointState.sessions.SessionId(toLong=-5032226296060285529): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--5032226296060285529-4021061472627489775)
    Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=9202197751228770747), deduplicationSeed=R--5032226296060285529-4021061472627489775)
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@307f45c8]


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.676Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.678Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5032226296060285529), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@27ab698e, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.676Z
    2022-04-06T04:32:41.678Z
checkpoint.checkpointState.sessions.SessionId(toLong=-5032226296060285529).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@307f45c8]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@307f45c8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@27ab698e]


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.678Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-5032226296060285529).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.678Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.685Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))=B25067D0F7F59A99406AF697FA7B5B71B7D1B3E9D7355E7982081DD488876971}), maySkipCheckpoint=false, fiber=9CE88336C7087D4543ED800209B075EB3FE8912D98F2200A278A48B60AFCAD9F, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[5de10979-388f-4695-9b87-00ac594caa22], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=e6ded999-248f-48af-b7d6-96b9a63831d9, timestamp: 2022-04-06T04:32:41.529Z, entityType: Invocation, sessionId=e6ded999-248f-48af-b7d6-96b9a63831d9, timestamp: 2022-04-06T04:32:41.529Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-5032226296060285529)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=9202197751228770747), deduplicationSeed=R--5032226296060285529-4021061472627489775)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))=B25067D0F7F59A99406AF697FA7B5B71B7D1B3E9D7355E7982081DD488876971}), frozenFiber=9CE88336C7087D4543ED800209B075EB3FE8912D98F2200A278A48B60AFCAD9F), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@307f45c8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@27ab698e])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@307f45c8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@27ab698e])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.678Z
    2022-04-06T04:32:41.681Z
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))=B25067D0F7F59A99406AF697FA7B5B71B7D1B3E9D7355E7982081DD488876971})
checkpoint.flowState.frozenFiber.hash: 
    610631F8C8B6149C1BF816DE6E62B9BE7F3E464F518D1F42D9CDD5729DE8B8B6
    9CE88336C7087D4543ED800209B075EB3FE8912D98F2200A278A48B60AFCAD9F
checkpoint.flowIoRequest: 
    SendAndReceive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@307f45c8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@27ab698e]
    []
isFlowResumed: 
    true
    false


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.686Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 2, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=9202197751228770747), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--5032226296060285529-4021061472627489775-2-0), senderUUID=36b35fbd-cf1f-45f7-a00a-0f723e184aa3))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.695Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))]), maySkipCheckpoint=false, fiber=0BCC4D1974E1791485BB19ED21EC658DE8AE87374CD63604EB224AC511D63B34, currentStep=Gathering the counterparty's signature.)
  Actions: 
    PersistCheckpoint(id=[5de10979-388f-4695-9b87-00ac594caa22], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=e6ded999-248f-48af-b7d6-96b9a63831d9, timestamp: 2022-04-06T04:32:41.529Z, entityType: Invocation, sessionId=e6ded999-248f-48af-b7d6-96b9a63831d9, timestamp: 2022-04-06T04:32:41.529Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-5032226296060285529)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=9202197751228770747), deduplicationSeed=R--5032226296060285529-4021061472627489775)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))]), frozenFiber=0BCC4D1974E1791485BB19ED21EC658DE8AE87374CD63604EB224AC511D63B34), errorState=Clean, result=null, status=RUNNABLE, progressStep=Gathering the counterparty's signature., flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.685Z
    2022-04-06T04:32:41.693Z
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))=B25067D0F7F59A99406AF697FA7B5B71B7D1B3E9D7355E7982081DD488876971})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))])
checkpoint.flowState.frozenFiber.hash: 
    9CE88336C7087D4543ED800209B075EB3FE8912D98F2200A278A48B60AFCAD9F
    0BCC4D1974E1791485BB19ED21EC658DE8AE87374CD63604EB224AC511D63B34
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.695Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.724Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5032226296060285529), payload=ErrorSessionMessage(flowException=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, errorId=2617171730665748721)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@640e79b0, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.695Z
    2022-04-06T04:32:41.724Z
checkpoint.checkpointState.sessions.SessionId(toLong=-5032226296060285529).receivedMessages.isEmpty: 
    true
    false
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@640e79b0]


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.725Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.724Z
    2022-04-06T04:32:41.725Z
checkpoint.checkpointState.sessions.SessionId(toLong=-5032226296060285529).receivedMessages.isEmpty: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-5032226296060285529).otherSideErrored: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.725Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.725Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)]


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.726Z
  Event: Error(exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=2617171730665748721, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.726Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.726Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.725Z
    2022-04-06T04:32:41.726Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [5de10979-388f-4695-9b87-00ac594caa22] ---
  Timestamp: 2022-04-06T04:32:41.741Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=2617171730665748721)], sessions=[], senderUUID=36b35fbd-cf1f-45f7-a00a-0f723e184aa3)
    CreateTransaction
    RemoveCheckpoint(id=[5de10979-388f-4695-9b87-00ac594caa22], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@640e79b0])
    ReleaseSoftLocks(uuid=5de10979-388f-4695-9b87-00ac594caa22)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@640e79b0])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-5032226296060285529)])
    RemoveFlow(flowId=[5de10979-388f-4695-9b87-00ac594caa22], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=2617171730665748721, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=e6ded999-248f-48af-b7d6-96b9a63831d9, timestamp: 2022-04-06T04:32:41.529Z, entityType: Invocation, sessionId=e6ded999-248f-48af-b7d6-96b9a63831d9, timestamp: 2022-04-06T04:32:41.529Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-5032226296060285529)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=9202197751228770747), deduplicationSeed=R--5032226296060285529-4021061472627489775)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class ExampleFlow$Initiator, classToInitiateWith=class ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=3B8B8BE288699BC5F2CA988B3AF2FF5C2ACFF4A61E314C03E0C2B5CB4F97E7FF), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=5), flowState=net.corda.node.services.statemachine.FlowState$Finished@70b21018, errorState=Errored(errors=[FlowError(errorId=2617171730665748721, exception=net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Gathering the counterparty's signature., flowIoRequest=Receive, compatible=true), flowLogic=ExampleFlow$Initiator@7c2ae8b, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=36b35fbd-cf1f-45f7-a00a-0f723e184aa3, reloadCheckpointAfterSuspendCount=null, numberOfCommits=5, lock=java.util.concurrent.Semaphore@27120d9d[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-04-06T04:32:41.726Z
    2022-04-06T04:32:41.730Z
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-5032226296060285529))]), frozenFiber=0BCC4D1974E1791485BB19ED21EC658DE8AE87374CD63604EB224AC511D63B34)
    net.corda.node.services.statemachine.FlowState$Finished@70b21018
checkpoint.checkpointState.numberOfCommits: 
    4
    5
numberOfCommits: 
    4
    5
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@640e79b0]
    []
isRemoved: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=5de10979-388f-4695-9b87-00ac594caa22, invocation_id=e6ded999-248f-48af-b7d6-96b9a63831d9, invocation_timestamp=2022-04-06T04:32:41.529Z, origin=Only For Testing, session_id=e6ded999-248f-48af-b7d6-96b9a63831d9, session_timestamp=2022-04-06T04:32:41.529Z, thread-id=952}
[WARN ] 2022-04-06T04:32:41,744Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [5de10979-388f-4695-9b87-00ac594caa22] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=5de10979-388f-4695-9b87-00ac594caa22, invocation_id=e6ded999-248f-48af-b7d6-96b9a63831d9, invocation_timestamp=2022-04-06T04:32:41.529Z, origin=Only For Testing, session_id=e6ded999-248f-48af-b7d6-96b9a63831d9, session_timestamp=2022-04-06T04:32:41.529Z, thread-id=952}
net.corda.core.flows.FlowException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
	at Received counter-flow exception from peer O=Mock Company 2, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:257) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.5.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.5.jar:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:159) ~[main/:?]
	at ExampleFlow$Initiator.call(ExampleFlow.java:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_321]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_321]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_321]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_321]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: I won't accept networkname is null
[INFO ] 2022-04-06T04:32:41,748Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-16) {}
[INFO ] 2022-04-06T04:32:41,762Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-06T04:32:41,762Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:41,766Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-17) {}
[INFO ] 2022-04-06T04:32:41,776Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-06T04:32:41,776Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-04-06T04:32:41,778Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-18) {}
[INFO ] 2022-04-06T04:32:41,789Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-04-06T04:32:41,789Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
